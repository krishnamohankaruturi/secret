package org.tempuri.kids_data.kids_webservice;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.4
 * 2013-01-17T12:15:22.874-06:00
 * Generated source version: 2.6.4
 * 
 */
@WebServiceClient(name = "KIDS_WebService", 
                  wsdlLocation = "Dependencies/WsdlClient/wsdl/kids_webservice.wsdl",
                  targetNamespace = "http://tempuri.org/kids_data/KIDS_WebService") 
public class KIDSWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/kids_data/KIDS_WebService", "KIDS_WebService");
    public final static QName KIDSWebServiceSoap12 = new QName("http://tempuri.org/kids_data/KIDS_WebService", "KIDS_WebServiceSoap12");
    public final static QName KIDSWebServiceSoap = new QName("http://tempuri.org/kids_data/KIDS_WebService", "KIDS_WebServiceSoap");
    static {
        URL url = KIDSWebService.class.getResource("Dependencies/WsdlClient/wsdl/kids_webservice.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(KIDSWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "Dependencies/WsdlClient/wsdl/kids_webservice.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public KIDSWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public KIDSWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public KIDSWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns KIDSWebServiceSoap
     */
    @WebEndpoint(name = "KIDS_WebServiceSoap12")
    public KIDSWebServiceSoap getKIDSWebServiceSoap12() {
        return super.getPort(KIDSWebServiceSoap12, KIDSWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns KIDSWebServiceSoap
     */
    @WebEndpoint(name = "KIDS_WebServiceSoap12")
    public KIDSWebServiceSoap getKIDSWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(KIDSWebServiceSoap12, KIDSWebServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns KIDSWebServiceSoap
     */
    @WebEndpoint(name = "KIDS_WebServiceSoap")
    public KIDSWebServiceSoap getKIDSWebServiceSoap() {
        return super.getPort(KIDSWebServiceSoap, KIDSWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns KIDSWebServiceSoap
     */
    @WebEndpoint(name = "KIDS_WebServiceSoap")
    public KIDSWebServiceSoap getKIDSWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(KIDSWebServiceSoap, KIDSWebServiceSoap.class, features);
    }

}
