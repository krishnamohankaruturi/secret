<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.ContentAreaDao" >
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.content.ContentArea" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="externalid" property="externalId" jdbcType="BIGINT" />
    <result column="sortorder" property="sortOrder" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="abbreviatedname" property="abbreviatedName" jdbcType="VARCHAR" />
    <result column="createdate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modifieddate" property="modifiedDate" jdbcType="TIMESTAMP" />
    <result column="originationcode" property="originationCode" jdbcType="VARCHAR" />
    <result column="assessmentprogramcode" property="assessmentProgramCode" jdbcType="VARCHAR" />
    <result column="assessmentprogramid" property="assessmentProgramId" jdbcType="BIGINT" />  
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    id, externalid, sortorder, name, abbreviatedname, createdate, modifieddate, originationcode
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ku.cete.domain.content.ContentAreaExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.contentarea
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.contentarea
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    delete from public.contentarea
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ku.cete.domain.content.ContentAreaExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    delete from public.contentarea
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <!-- 
  	NO INSERTS SHOULD OCCUR IN EP - CONTENT AREAS COME FROM CONTENT BUILDER
  -->
   <select id="countByExample" parameterType="edu.ku.cete.domain.content.ContentAreaExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    select count(*) from public.contentarea
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    update public.contentarea
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.externalId != null" >
        externalid = #{record.externalId,jdbcType=BIGINT},
      </if>
      <if test="record.sortOrder != null" >
        sortorder = #{record.sortOrder,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.abbreviatedName != null" >
        abbreviatedname = #{record.abbreviatedName,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        createdate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedDate != null" >
        modifieddate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.originationCode != null" >
        originationcode = #{record.originationCode,jdbcType=VARCHAR},
      </if> 
	   modifieduser = #{record.modifiedUser},
	   activeflag = #{record.activeFlag},
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    update public.contentarea
    set id = #{record.id,jdbcType=BIGINT},
      externalid = #{record.externalId,jdbcType=BIGINT},
      sortorder = #{record.sortOrder,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      abbreviatedname = #{record.abbreviatedName,jdbcType=VARCHAR},
      createdate = #{record.createDate,jdbcType=TIMESTAMP},
      modifieddate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      originationcode = #{record.originationCode,jdbcType=VARCHAR},
       modifieduser = #{record.modifiedUser},
	   activeflag = #{record.activeFlag} 
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.content.ContentArea" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    update public.contentarea
    <set >
      <if test="externalId != null" >
        externalid = #{externalId,jdbcType=BIGINT},
      </if>
      <if test="sortOrder != null" >
        sortorder = #{sortOrder,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="abbreviatedName != null" >
        abbreviatedname = #{abbreviatedName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        createdate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null" >
        modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="originationCode != null" >
        originationcode = #{originationCode,jdbcType=VARCHAR},
      </if>
      modifieduser = #{modifiedUser},
	  activeflag = #{activeFlag},
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.content.ContentArea" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 13:52:41 CDT 2012.
    -->
    update public.contentarea
    set externalid = #{externalId,jdbcType=BIGINT},
      sortorder = #{sortOrder,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      abbreviatedname = #{abbreviatedName,jdbcType=VARCHAR},
      createdate = #{createDate,jdbcType=TIMESTAMP},
      modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      originationcode = #{originationCode,jdbcType=VARCHAR},
      modifieduser = #{modifiedUser},
	  activeflag = #{activeFlag}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="lastid" resultType="java.lang.Long">
      SELECT lastval() AS id
  </select>
  
  <select id="findByName" resultMap="BaseResultMap" parameterType="map">
    SELECT <include refid="Base_Column_List"/>
    from contentarea
    where LOWER(name) = LOWER(#{name}) order by modifieddate limit 1
  </select>
    <select id="findByAbbreviatedName" resultMap="BaseResultMap" parameterType="map">
    SELECT <include refid="Base_Column_List"/>
    from contentarea
    where LOWER(abbreviatedName) = LOWER(#{abbreviatedName})
  </select>
  
  <select id="findByNameOrAbbreviatedName" resultMap="BaseResultMap" parameterType="map">
    SELECT <include refid="Base_Column_List"/>
    from contentarea
    where 
    	(LOWER(name) = LOWER(#{name}) OR LOWER(abbreviatedname) = LOWER(#{name}))
    	and activeflag=true
    order by modifieddate limit 1
  </select>
  
  <select id="findByContractingOrg" resultMap="BaseResultMap" parameterType="map">
    select distinct <include refid="Extended_Column_List"/>
     from (select id from organization where id = #{organizationId} and contractingorganization=true
			union select id from organization_parent_tree(#{organizationId}, 0)) opt 
		inner join organization o on opt.id = o.id and contractingorganization=true
		inner join organizationcontentarea oca on opt.id= oca.organizationid
		inner join contentarea ca on ca.id = oca.contentareaid
	 where oca.organizationcontentareacode = #{contentAreaCode}
  </select>
  
  <sql id="Extended_Column_List" >
    ca.id, ca.externalid, ca.sortorder, ca.name, ca.abbreviatedname, ca.createdate, ca.modifieddate, ca.originationcode
  </sql>
  
  <select id="findByAssessmentProgram" resultMap="BaseResultMap" parameterType="long">
    SELECT distinct <include refid="Extended_Column_List"/>
	from assessmentprogram ap join testingprogram tp on ap.id = tp.assessmentprogramid and tp.activeflag is true and ap.activeflag is true
	join assessment asm on tp.id = asm.testingprogramid and asm.activeflag is true
	join assessmentstestcollections atc on asm.id = atc.assessmentid and atc.activeflag is true
	join testcollection tc on atc.testcollectionid = tc.id and tc.activeflag is true
	join contentarea ca on tc.contentareaid = ca.id and ca.activeflag is true
	where ap.id = #{assessmentProgramId}
  </select>
  
    <select id="findByAssessmentProgramCode" resultMap="BaseResultMap">
    SELECT distinct <include refid="Extended_Column_List"/>
	from assessmentprogram ap join testingprogram tp on ap.id = tp.assessmentprogramid and tp.activeflag is true and ap.activeflag is true
	join assessment asm on tp.id = asm.testingprogramid and asm.activeflag is true
	join assessmentstestcollections atc on asm.id = atc.assessmentid and atc.activeflag is true
	join testcollection tc on atc.testcollectionid = tc.id and tc.activeflag is true
	join contentarea ca on tc.contentareaid = ca.id and ca.activeflag is true
	where ap.abbreviatedname = #{assessmentProgramCode}
  </select>
  
    <select id="findByAbbreviatedNamesAndAssessmentProgramCode" resultMap="BaseResultMap">
    SELECT distinct <include refid="Extended_Column_List"/>
	from assessmentprogram ap join testingprogram tp on ap.id = tp.assessmentprogramid and tp.activeflag is true and ap.activeflag is true
	join assessment asm on tp.id = asm.testingprogramid and asm.activeflag is true
	join assessmentstestcollections atc on asm.id = atc.assessmentid and atc.activeflag is true
	join testcollection tc on atc.testcollectionid = tc.id and tc.activeflag is true
	join contentarea ca on tc.contentareaid = ca.id and ca.activeflag is true
	where ap.abbreviatedname = #{assessmentProgramCode,jdbcType=VARCHAR}  and ca.abbreviatedname in 
	<foreach collection="contentAreaCodes" item="contentAreaCode" open="(" separator="," close=")">
      				#{contentAreaCode,jdbcType=VARCHAR}  
    			</foreach>
  </select>
  
  <select id="findByAssessmentProgramandTestingProgramId" resultMap="BaseResultMap" parameterType="long">
    SELECT distinct <include refid="Extended_Column_List"/>
	from assessmentprogram ap join testingprogram tp on ap.id = tp.assessmentprogramid and tp.activeflag is true and ap.activeflag is true
	join assessment asm on tp.id = asm.testingprogramid and asm.activeflag is true
	join assessmentstestcollections atc on asm.id = atc.assessmentid and atc.activeflag is true
	join testcollection tc on atc.testcollectionid = tc.id and tc.activeflag is true
	join testcollectionstests tct on tct.testcollectionid=tc.id
	join test t on t.id=tct.testid and t.activeflag is true and t.qccomplete is true
	join category ct on t.status=ct.id and ct.activeflag is true and ct.categorycode ='DEPLOYED'
	join categorytype ctype on ct.categorytypeid=ctype.id and ctype.typecode='TESTSTATUS' and ctype.activeflag is true
	join contentarea ca on tc.contentareaid = ca.id and ca.activeflag is true
	where ap.id = #{assessmentProgramId} and tp.id = #{testingProgramId}
	order by ca.name
  </select>
  
  
  <select id="selectAllContentAreasDropdown" resultMap="BaseResultMap" parameterType="long">
    SELECT distinct <include refid="Extended_Column_List"/>
	from assessmentprogram ap join testingprogram tp on ap.id = tp.assessmentprogramid and tp.activeflag is true and ap.activeflag is true
	join assessment asm on tp.id = asm.testingprogramid and asm.activeflag is true
	join assessmentstestcollections atc on asm.id = atc.assessmentid and atc.activeflag is true
	join testcollection tc on atc.testcollectionid = tc.id and tc.activeflag is true
	join testcollectionstests tct on tct.testcollectionid=tc.id
	join test t on t.id=tct.testid and t.activeflag is true
	join category ct on t.status=ct.id and ct.activeflag is true and ct.categorycode ='DEPLOYED'
	join categorytype ctype on ct.categorytypeid=ctype.id and ctype.typecode='TESTSTATUS' and ctype.activeflag is true
	join contentarea ca on tc.contentareaid = ca.id and ca.activeflag is true
	where ap.id = #{assessmentProgramId}
	order by ca.name
  </select>
  
  
  
  <select id="findByAssessmentProgramforTestRecord" resultMap="BaseResultMap" parameterType="long">
  		SELECT distinct <include refid="Extended_Column_List"/>
		from contentarea ca
		join contentareatesttypesubjectarea cattsa on ca.id = cattsa.contentareaid
		join testtypesubjectarea ttsa on ttsa.id = cattsa.testtypesubjectareaid
		join assessment asm on asm.id = ttsa.assessmentid
		join testingprogram tp on tp.id = asm.testingprogramid
		join assessmentprogram ap on ap.id = tp.assessmentprogramid
		where ca.activeflag = true and cattsa.activeflag = true and ttsa.activeflag = true and asm.activeflag = true and 
		tp.activeflag = true and ap.activeflag = true and 
   		ap.id = #{assessmentProgramId}
  </select>
  
  
  <select id="findByAssessmentId" resultMap="BaseResultMap" parameterType="Long">
   	SELECT DISTINCT <include refid="Extended_Column_List"/>
	 FROM            assessmentprogram ap
	                 JOIN testingprogram tp
	                 ON              ap.id = tp.assessmentprogramid
	                 JOIN assessment asm
	                 ON              tp.id = asm.testingprogramid
	                 JOIN assessmentstestcollections atc
	                 ON              asm.id = atc.assessmentid
	                 JOIN testcollection tc
	                 ON              atc.testcollectionid = tc.id
	                 JOIN contentarea ca
	                 ON              tc.contentareaid = ca.id
	 WHERE           asm.id                           = #{assessmentId}
  </select>
  
  
  <select id="selectAllContentAreas" resultMap="BaseResultMap" >
   	SELECT DISTINCT ca.id, ca.name, ca.abbreviatedname
	FROM contentarea ca
	WHERE ca.name IS NOT NULL
	ORDER BY ca.name
  </select>
  
  <select id="selectContentAreas" resultMap="BaseResultMap" >
   	SELECT DISTINCT ca.*
	FROM contentarea ca
	WHERE ca.name IS NOT NULL
	ORDER BY ca.name
  </select>
  
    <select id="findByAssessmentProgramAndTestingProgram" resultMap="BaseResultMap" >
		select distinct ca.* 
		from contentarea ca
		join testcollection tc on ca.id = tc.contentareaid
		join assessmentstestcollections atc on tc.id = atc.testcollectionid
		join assessment a on atc.assessmentid = a.id
		join testingprogram tp on a.testingprogramid = tp.id
		join assessmentprogram ap on tp.assessmentprogramid = ap.id
		where ap.id = #{assessmentProgramId}
		and tp.id = #{testingProgramId}
		and ca.activeflag = true
		order by ca.name
  </select>
	<select id="findBySubjectAreaTestType" resultMap="BaseResultMap">	
			select ca.* from testtype tt 
 		inner join testtypesubjectarea ttsa on ttsa.testtypeid=tt.id
 		inner join contentareatesttypesubjectarea cattsa on ttsa.id=cattsa.testtypesubjectareaid
 		inner join contentarea ca on ca.id=cattsa.contentareaid
 		inner join subjectarea sa on ttsa.subjectareaid=sa.id 
 		where sa.subjectareacode=#{subjectAreaCode} and tt.testtypecode=#{testTypeCode}
 			and tt.activeflag=true and ttsa.activeflag=true 
 			and cattsa.activeflag=true and ca.activeflag=true
	</select> 
	
	<select id="findByTestTypeSubjectAreaAssessment" resultMap="BaseResultMap">	
		select distinct ca.* from contentareatesttypesubjectarea cttsa
		inner join testtypesubjectarea ttsa on cttsa.testtypesubjectareaid=ttsa.id
		inner join contentarea ca on cttsa.contentareaid = ca.id
		where ttsa.assessmentid=#{assessmentId} and ttsa.subjectareaid=#{subjectAreaId} 
			and ttsa.testtypeid=#{testTypeId} and ttsa.activeflag=true 
 			and cttsa.activeflag=true and ca.activeflag=true
	</select>  
	
	<select id="findByTestTypeAssessment" resultMap="BaseResultMap">	
		select distinct ca.* from contentareatesttypesubjectarea cttsa
		inner join testtypesubjectarea ttsa on cttsa.testtypesubjectareaid=ttsa.id
		inner join contentarea ca on cttsa.contentareaid = ca.id
		where ttsa.assessmentid=#{assessmentId} and ttsa.testtypeid=#{testTypeId} 
			and ttsa.activeflag=true and cttsa.activeflag=true and ca.activeflag=true
	</select>
	
	<select id="findGradeCoursesUsingAssessmentProgram" resultMap="BaseResultMap">	
		select distinct ca.* from contentareatesttypesubjectarea cttsa
			inner join testtypesubjectarea ttsa on ttsa.id = cttsa.testtypesubjectareaid
			inner join contentarea ca on ca.id = cttsa.contentareaid
			inner join assessment a on a.id = ttsa.assessmentid
			inner join testingprogram tp on tp.id = a.testingprogramid 
		where tp.assessmentprogramid = #{assessmentProgramId} 
			and a.activeflag is true and ca.activeflag is true and ttsa.activeflag is true and cttsa.activeflag is true 
		order by ca.name
	</select>  
	
	<select id="selectContentAreasForStudentTracker" resultMap="BaseResultMap">
		WITH fcsOrgSettings AS(
			SELECT fcs.* 
   			FROM firstcontactsurveysettings fcs
   			JOIN organization org ON org.id = fcs.organizationid
   			WHERE org.id = #{organizationId}
   				AND extract(year from org.schoolenddate) = fcs.schoolyear
   				AND fcs.activeflag IS true
		)
		SELECT  <include refid="Base_Column_List" /> FROM contentarea WHERE activeflag IS true
			AND (abbreviatedname = (SELECT CASE WHEN(SELECT count(*) FROM fcsOrgSettings WHERE elaflag IS true) > 0  THEN
				'ELA'
			END)
			OR  abbreviatedname = (SELECT CASE WHEN (SELECT count(*) FROM fcsOrgSettings WHERE mathflag IS true) > 0 THEN
				'M'
			END)
        	OR abbreviatedname = (SELECT CASE WHEN(SELECT count(*) FROM fcsOrgSettings WHERE scienceflag IS true) > 0 THEN
				'Sci'
			END))
	  </select>
	  
	<select id="getContentAreasForAlternateDLMReports" parameterType="map" resultMap="BaseResultMap">
	 <!--  	select DISTINCT ca.*
	   	FROM contentarea ca
	   		INNER JOIN roster ros ON ros.statesubjectareaid = ca.id
	   	WHERE abbreviatedname in('ELA', 'M', 'Sci')
	   	<if test="schoolId != null">
    		AND ros.attendanceschoolid = #{schoolId,jdbcType=BIGINT}
    	</if>
    	ORDER BY ca.name -->
	   	Select distinct (ca.*) from contentarea ca 
		inner join reportassessmentprogram rap on rap.subjectid = ca.id 
		INNER JOIN roster ros ON ros.statesubjectareaid = ca.id 
		inner join category cat on cat.id = rap.reporttypeid
		inner join reportassessmentprogramgroup rag on rap.id =  rag.reportassessmentprogramid
		where ros.statesubjectareaid = rap.subjectid 
		and ros.attendanceschoolid = #{schoolId,jdbcType=BIGINT}
		and stateid in (Select id from (Select * from organization_parent(#{schoolId,jdbcType=BIGINT})) orgpa where organizationtypeid = 2 ) 
		and  cat.categorycode ilike (#{reportType,jdbcType=VARCHAR})
		and rag.groupid in (#{userCurrentRoleId,jdbcType=BIGINT})
		and ca.activeflag = true and rap.activeflag = true and readytoview = true
		and rap.authorityid is not null and ros.activeflag is true
		and rag.activeflag is true 
		and rap.assessmentprogramid in 
		<foreach collection="assessmentProgramIds" item="apIds" open="(" separator="," close=")">
      	#{apIds,jdbcType=BIGINT}  
    	</foreach>
		   order by ca.name
  	</select>
   
   <select id="selectContentAreasForDLMMultiAssignments" resultMap="BaseResultMap">
	   	select  <include refid="Base_Column_List" /> from contentarea where abbreviatedname in 
	   	<foreach close=")" collection="contentAreaCodes" item="contentAreaCode" open="(" separator=",">
				       #{contentAreaCode}
		</foreach> 
	  </select>
	  
  <select id="findBySubjectAreaIdAndTestTypeCode" parameterType="map" resultMap="BaseResultMap">
    SELECT ca.*
    FROM contentareatesttypesubjectarea cattsa
    INNER JOIN testtypesubjectarea ttsa ON cattsa.testtypesubjectareaid = ttsa.id AND subjectareaid = #{subjectAreaId,jdbcType=BIGINT}
    INNER JOIN testtype tt ON ttsa.testtypeid = tt.id AND tt.testtypecode = #{testTypeCode} AND tt.assessmentid = #{assessmentId,jdbcType=BIGINT}
    INNER JOIN contentarea ca ON cattsa.contentareaid = ca.id
  </select>
  
  <select id="getContentAreaForBundledReport" resultMap="BaseResultMap">
  		SELECT DISTINCT ca.* 
		FROM contentarea ca
		<if test="assessmentProgCode == 'DLM' or assessmentProgCode == 'CPASS'">
			inner join externalstudentreports esr on esr.subjectid = ca.id 
			and esr.schoolid in 
			<foreach close=")" collection="schoolIds" item="schoolId" open="(" separator=",">
				(#{schoolId,jdbcType=BIGINT})
			</foreach>
			and esr.schoolyear = #{schoolYear}
			and esr.assessmentprogramid = #{assessmentProgId,jdbcType=BIGINT} and esr.activeflag is true
		</if>	
		<if test="assessmentProgCode == 'KAP' or assessmentProgCode == 'KELPA2'">
			inner join studentreport sr on sr.contentareaid = ca.id and sr.attendanceschoolid in 
			<foreach close=")" collection="schoolIds" item="schoolId" open="(" separator=",">
				(#{schoolId,jdbcType=BIGINT})
			</foreach>	 
			and sr.assessmentprogramid = #{assessmentProgId,jdbcType=BIGINT}
			and sr.schoolyear = #{schoolYear}
			<!-- and sr.status is true -->
		</if>
		ORDER BY ca.name 
  
  </select>
  
  
  
  <select id="getContentAreasWhereReportsHaveProcessed" parameterType="map" resultMap="BaseResultMap">
    SELECT DISTINCT ca.*
    FROM assessmentprogram ap
    JOIN reportassessmentprogram rap ON ap.id = rap.assessmentprogramid
    JOIN category cat ON rap.reporttypeid = cat.id
    JOIN reportassessmentprogramgroup rag ON rap.id = rag.reportassessmentprogramid
    JOIN contentarea ca ON rap.subjectid = ca.id
    <choose>
      <when test="reportType == 'general_student'">
        JOIN reportprocess rp ON ap.id = rp.assessmentprogramid
        JOIN studentreport sr ON rp.id = sr.batchreportprocessid
          AND sr.contentareaid = ca.id
          AND sr.attendanceschoolid = #{schoolId,jdbcType=BIGINT}
          AND sr.districtid = #{districtId,jdbcType=BIGINT}
          AND sr.schoolyear = #{schoolYear,jdbcType=INTEGER}
      </when>
      <when test="reportType == 'alternate_student_individual'">
        JOIN externalstudentreports esr ON ap.id = esr.assessmentprogramid
          AND esr.subjectid = ca.id
          AND esr.schoolid = #{schoolId,jdbcType=BIGINT}
          AND esr.districtid = #{districtId,jdbcType=BIGINT}
          AND esr.activeflag is true
          AND esr.schoolyear = #{schoolYear,jdbcType=INTEGER}
          <if test="reportCode != null">
     	 	and esr.reporttype = #{reportCode,jdbcType=VARCHAR}
     	  </if>
      </when>
      <otherwise>
	    JOIN roster ros ON ros.statesubjectareaid = ca.id and ros.activeflag is true and ros.attendanceschoolid = #{schoolId,jdbcType=BIGINT}
      </otherwise>
    </choose>
    WHERE ap.activeflag = TRUE
    AND rap.activeflag = TRUE
    AND rag.activeflag = TRUE
    AND ca.activeflag = TRUE
    AND rap.authorityid IS NOT NULL
    AND rap.stateid IN (
      SELECT id
      FROM organization_parent(#{schoolId,jdbcType=BIGINT})
      WHERE organizationtypeid = (SELECT id FROM organizationtype WHERE typecode = 'ST')
    )
    AND rap.readytoview = TRUE
	AND cat.categorycode = #{reportCode,jdbcType=VARCHAR}
    AND rag.groupid = #{userCurrentRoleId,jdbcType=BIGINT}
    AND ap.id IN
    <foreach collection="assessmentProgramIds" item="apId" open="(" separator="," close=")">
      #{apId,jdbcType=BIGINT}
    </foreach>
    ORDER BY ca.name 
  </select>
  
   <select id="findByAssessmentProgramforAssignScorer" resultMap="BaseResultMap">
   	select  distinct ca.* 
from testsession ts
inner join organizationtreedetail otd on otd.schoolid = ts.attendanceschoolid
inner join testcollection AS tc ON tc.id = ts.testcollectionid and tc.activeflag is true 
inner join contentarea ca on ca.id = tc.contentareaid and ca.activeflag is true 
inner join operationaltestwindow otw ON otw.id = ts.operationaltestwindowid and otw.activeflag is true
where ts.attendanceschoolid = #{schoolAreaId} and
ts.source = 'BATCHAUTO' 
and ts.activeflag is true 
and otw.assessmentprogramid =#{assessmentProgramId} 
and ts.schoolyear = #{currentSchoolYear}
and (otw.scoringwindowenddate is null OR (CURRENT_TIMESTAMP &lt; otw.scoringwindowenddate)) 
order by ca.name
  </select>
  
  <select id="findByTestTypeAssessmentContentArea" resultType="java.lang.Long">	
		select ttsa.subjectareaid
			from contentareatesttypesubjectarea cttsa
			inner join testtypesubjectarea ttsa on cttsa.testtypesubjectareaid=ttsa.id
			inner join contentarea ca on cttsa.contentareaid = ca.id
			where ttsa.assessmentid=#{assessmentId} and ttsa.testtypeid=#{testTypeId} and ca.id=#{contentAreaId}	
			and ttsa.activeflag=true and cttsa.activeflag=true and ca.activeflag=true
  </select>
  
  <select id="getSubjectsByGrade" resultMap="BaseResultMap" parameterType="long">
    SELECT distinct <include refid="Extended_Column_List"/>
    from contentarea ca
  	left outer join gradecourse gc on ca.id = gc.contentareaid
	and gc.id = #{gradeId,jdbcType=BIGINT}
	order by ca.name
  </select>
  
  <select id="getContententAreasByOtwId" resultMap="BaseResultMap" parameterType="long">
  	SELECT distinct <include refid="Extended_Column_List"/>
    from contentarea ca
    join testcollection tc on tc.contentareaid = ca.id
    join operationaltestwindowstestcollections optwtc on optwtc.testcollectionid = tc.id
    where optwtc.operationaltestwindowid = #{operationalTestWindowId,jdbcType=BIGINT}
    order by ca.name     
  </select>
	<select id="getInterimSubjectNames" resultMap="BaseResultMap">
	select distinct ca.name, ca.id from contentarea ca
	JOIN test t on
	t.contentareaid=ca.id
	<if test="isInterim==true">
		JOIN interimtest it on t.id=it.testtestid
	</if>
	INNER JOIN testcollectionstests tct on t.id = tct.testid 
	INNER JOIN testspecstatementofpurpose tstop on t.testspecificationid=tstop.testspecificationid
	INNER JOIN category ct on ct.id=tstop.statementofpurposeid
	INNER JOIN assessmentstestcollections atc on atc.testcollectionid=tct.testcollectionid
	INNER JOIN assessment a on a.id=atc.assessmentid
	INNER JOIN testingprogram tp on tp.id=a.testingprogramid
	INNER JOIN assessmentprogram ap on tp.assessmentprogramid=ap.id
	INNER JOIN category c on c.id=t.status
	INNER JOIN categorytype cct on c.categorytypeid = cct.id and
	c.categorycode='DEPLOYED' and cct.typecode='TESTSTATUS'
	INNER JOIN testcollection tc on tct.testcollectionid=tc.id and tc.activeflag is true
	INNER JOIN operationaltestwindowstestcollections otwtc on otwtc.testcollectionid=tct.testcollectionid
    INNER JOIN operationaltestwindow otw on otw.id=otwtc.operationaltestwindowid and otw.activeflag is true
    <if test="isUserLoggedAsPLTW == true"> 
    	<if test="isTeacher == true"> 
    		INNER JOIN usercontentareas uca on uca.contentareaid=ca.id and uca.activeflag is true 
    		and uca.userid = #{userId,jdbcType=BIGINT} 
    	</if>
	</if>
	where tstop.activeflag is true and t.qccomplete is true and c.activeflag is
	true and ct.activeflag is true
	and tp.programname ilike 'interim' 
	and ap.id =  #{assessmentProgramId,jdbcType=BIGINT} and
	t.activeflag is true and 
	t.is_interim_test=#{isInterim} and
	ct.id=#{purposeId,jdbcType=BIGINT} 
	and otw.expirydate &gt; now() and otw.effectivedate &lt; now()
	<if test="isInterim==true">
		<if test="organizationId != null">
			and it.organizationid = ANY(ARRAY(
				select id from organization_children((SELECT op.id
				from organization_parent(#{organizationId}) op
				inner join organizationtype ot ON op.organizationtypeid=ot.id
				where ot.typecode='DT'
				union
				select o.id from organization o
				inner join organizationtype ot ON o.organizationtypeid=ot.id
				where ot.typecode='DT' and o.id=#{organizationId})) oc
				union select distinct districtid from organizationtreedetail where schoolid=#{organizationId}
		        union select o.id from organization o
				inner join organizationtype ot ON o.organizationtypeid=ot.id
				where ot.typecode='DT' and o.id=#{organizationId}
			))
		</if>
	</if>
	order by ca.name asc
	</select>
    
    <select id="getInterimAlignment" resultMap="BaseResultMap" >
    select distinct ca.abbreviatedname, ca.id from contentarea ca join testlet tl on
    tl.contentareaid = ca.id
    </select>

	<select id="getSubjectsForStudentScoreExtract" resultMap="BaseResultMap">
	    SELECT distinct <include refid="Extended_Column_List"/>
	    from contentarea ca
	  	JOIN studentreport sr ON ca.id = sr.contentareaid
	  	JOIN assessmentprogram ap ON ap.id = sr.assessmentprogramid AND ap.abbreviatedname='KAP'	  	
		order by ca.name
  	</select>
  	
  	<select id="getItiBluePrintSubjects" resultMap="BaseResultMap">
  		SELECT distinct <include refid="Extended_Column_List"/>
  		   FROM blueprint bp
  		   JOIN contentarea ca ON ca.id = bp.contentareaid
  		   <if test="isTeacher">
  		   JOIN roster r on r.statesubjectareaid = ca.id and r.currentschoolyear = #{schoolYear}
  		        and r.teacherid = #{educatorId}
  		   </if>
  		   WHERE ca.activeflag is true and bp.activeflag is true
  	</select>
  	
  	<select id="getContentAreasForResearchSurvey" resultMap="BaseResultMap">
  		select  <include refid="Base_Column_List" /> from contentarea where abbreviatedname = 'OTH'
  	</select>
  	
  	<select id="getContentAreasForISMARTResearchSurvey" resultMap="BaseResultMap">
  		select  <include refid="Base_Column_List" /> from contentarea where abbreviatedname = 'IS-Sci'
  	</select>
  	
  	<select id="getContentAreaIdsByTestTypeAndSubjectArea" resultType="java.lang.Long">
  		SELECT distinct ca.id
      		FROM contentarea ca
      		JOIN contentareatesttypesubjectarea catsa on catsa.contentareaid = ca.id
      		JOIN testtypesubjectarea tsa on tsa.id = catsa.testtypesubjectareaid
      		JOIN subjectarea sa on sa.id = tsa.subjectareaid
      		JOIN testtype tt on tt.id = tsa.testtypeid
      		JOIN assessment asm on asm.id = tsa.assessmentid
      		JOIN testingprogram tp on tp.id = asm.testingprogramid
      		JOIN assessmentprogram asp on asp.id = tp.assessmentprogramid      
      	WHERE tp.programname = 'Summative' and tt.testtypecode != 'C' and
      		sa.id in
      	 		<foreach collection="enrollmentTestTypeSubjectAreas" item="enrlTestTypeSubjectArea" open="(" separator="," close=")">
      				#{enrlTestTypeSubjectArea.subjectareaId,jdbcType=BIGINT}  
    			</foreach>
      		and tt.id in
      			<foreach collection="enrollmentTestTypeSubjectAreas" item="enrlTestTypeSubjectArea" open="(" separator="," close=")">
      				#{enrlTestTypeSubjectArea.testTypeId,jdbcType=BIGINT}  
    			</foreach>      	
  	</select>
  	
  	  <select id="getSubjectsForReportGeneration" resultMap="BaseResultMap">
  		SELECT DISTINCT ca.* 
		FROM contentarea ca
		inner join studentreport sr on sr.contentareaid = ca.id
		and sr.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
		and sr.schoolyear = #{schoolYear}
		and sr.stateid = #{stateId}
		ORDER BY ca.name   
   </select>
  
  	<select id="selectContentAreasForISmartAutoEnrollment" resultMap="BaseResultMap">
		WITH fcsOrgSettings AS(
			SELECT fcs.* 
   			FROM firstcontactsurveysettings fcs
   			JOIN organization org ON org.id = fcs.organizationid
   			WHERE org.id = #{organizationId}
   				AND extract(year from org.schoolenddate) = fcs.schoolyear
   				AND fcs.activeflag IS true
		)
		SELECT  <include refid="Base_Column_List" /> FROM contentarea WHERE activeflag IS true
			AND abbreviatedname = (SELECT CASE WHEN(SELECT count(*) FROM fcsOrgSettings WHERE scienceflag IS true) > 0 THEN
				#{contentAreaAbbrName,jdbcType=VARCHAR}
			END)
     </select>
     
       
  <select id="getSubjectsByGradeAndAssessment" resultMap="BaseResultMap">
	 With contentareabyap as (SELECT distinct ca.id contentareaid,ap.abbreviatedname,  ap.id as assessmentprogramid   
	 from assessmentprogram ap join testingprogram tp on ap.id = tp.assessmentprogramid and tp.activeflag is true 
     and ap.activeflag is true 
     join assessment asm on tp.id = asm.testingprogramid and asm.activeflag is true
     join assessmentstestcollections atc on asm.id = atc.assessmentid and atc.activeflag is true
     join testcollection tc on atc.testcollectionid = tc.id and tc.activeflag is true
     join contentarea ca on tc.contentareaid = ca.id and ca.activeflag is true
     where ap.id in      
	 <foreach collection="assessmentProgramIds" item="apId" open="(" separator="," close=")">
      	#{apId,jdbcType=BIGINT}
     </foreach>) 
	 SELECT distinct cap.abbreviatedname as assessmentprogramcode, cap.assessmentprogramid,  ca.id, ca.externalid, ca.sortorder, ca.name,
	  ca.abbreviatedname, ca.createdate, ca.modifieddate, ca.originationcode
	 from contentarea ca
  	 join contentareabyap cap on ca.id= cap.contentareaid  	      
     <if test="abbreviatedName != null and abbreviatedName.length()>0 "> 
 	 	join gradecourse gc on ca.id = gc.contentareaid
		 where gc.abbreviatedname=#{abbreviatedName,jdbcType=VARCHAR}
     </if>
     order by cap.abbreviatedname,ca.name
  
  </select>
  
<select id="getCourseNameByAssesmentProgram" resultType="java.lang.String">
   	SELECT distinct ca.name
	 from assessmentprogram ap join testingprogram tp on ap.id = tp.assessmentprogramid and tp.activeflag is true and ap.activeflag is true
	 join assessment asm on tp.id = asm.testingprogramid and asm.activeflag is true
	 join assessmentstestcollections atc on asm.id = atc.assessmentid and atc.activeflag is true
	 join testcollection tc on atc.testcollectionid = tc.id and tc.activeflag is true
	 join contentarea ca on tc.contentareaid = ca.id and ca.activeflag is true
	 join assessmentprogram asspro on asspro.id = tp.assessmentprogramid and asspro.activeflag is true
	 where asspro.abbreviatedname = #{assesmentProgram,jdbcType=VARCHAR} 
  </select>
  
    
  <select id="getContentAreasIdForDistrictSummaryReportsHaveProcessed" resultType="java.lang.Long">
    SELECT DISTINCT ca.id, ca.name  
    FROM assessmentprogram ap
    JOIN reportassessmentprogram rap ON ap.id = rap.assessmentprogramid
    JOIN category cat ON rap.reporttypeid = cat.id
    JOIN reportassessmentprogramgroup rag ON rap.id = rag.reportassessmentprogramid
    JOIN contentarea ca ON rap.subjectid = ca.id
    JOIN reportprocess rp ON ap.id = rp.assessmentprogramid
    JOIN studentreport sr ON rp.id = sr.batchreportprocessid
          AND sr.contentareaid = ca.id
          <if test="schoolId != null">
          		AND sr.attendanceschoolid = #{schoolId,jdbcType=BIGINT}
          </if>
          
          <if test="districtId != null">
          		AND sr.districtid = #{districtId,jdbcType=BIGINT}
          </if>
          AND sr.schoolyear = #{schoolYear,jdbcType=INTEGER}        
          
    WHERE ap.activeflag = TRUE
    AND rap.activeflag = TRUE
    AND rag.activeflag = TRUE
    AND ca.activeflag = TRUE
    AND rap.authorityid IS NOT NULL
    AND rap.stateid IN (
    
    <if test="schoolId != null">
    	SELECT id FROM organization_parent(#{districtId,jdbcType=BIGINT})
      	WHERE organizationtypeid = (SELECT id FROM organizationtype WHERE typecode = 'ST')
    </if>
          
    <if test="schoolId == null">
      	SELECT id FROM organization_parent(#{districtId,jdbcType=BIGINT})
      	WHERE organizationtypeid = (SELECT id FROM organizationtype WHERE typecode = 'ST')
     </if>
    )
    AND rap.readytoview = TRUE
	AND cat.categorycode = #{reportTypeCode,jdbcType=VARCHAR}
    AND rag.groupid = #{userCurrentRoleId,jdbcType=BIGINT}
    AND ap.id = #{assessmentProgramid,jdbcType=BIGINT}
    ORDER BY ca.name 
  </select>
     
</mapper>