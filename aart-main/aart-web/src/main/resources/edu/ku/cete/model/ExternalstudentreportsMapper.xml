<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ku.cete.model.ExternalstudentreportsMapper">
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.Externalstudentreports">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 16 10:20:24 CDT 2017.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="studentid" jdbcType="BIGINT" property="studentId" />
    <result column="gradeid" jdbcType="BIGINT" property="gradeId" />
    <result column="subjectid" jdbcType="BIGINT" property="subjectId" />
    <result column="stateid" jdbcType="BIGINT" property="stateId" />
    <result column="assessmentprogramid" jdbcType="BIGINT" property="assessmentProgramid" />
    <result column="districtid" jdbcType="BIGINT" property="districtId" />
    <result column="schoolid" jdbcType="BIGINT" property="schoolId" />
    <result column="level1_text" jdbcType="VARCHAR" property="level1_text" />
    <result column="level2_text" jdbcType="VARCHAR" property="level2_text" />
    <result column="filepath" jdbcType="VARCHAR" property="filePath" />
    <result column="createddate" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="createduser" jdbcType="BIGINT" property="createdUser" />
    <result column="modifieduser" jdbcType="BIGINT" property="modifiedUser" />
    <result column="modifieddate" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="activeflag" jdbcType="BIT" property="activeFlag" />
    <result column="schoolyear" jdbcType="BIGINT" property="schoolYear" />
    <result column="reporttype" jdbcType="VARCHAR" property="reportType" />
    <result column="reportprocessid" jdbcType="BIGINT" property="reportProcessId" />
    <result column="schoolname" jdbcType="VARCHAR" property="schoolName" />
    <result column="districtname" jdbcType="VARCHAR" property="districtName" />
  </resultMap>
    
  <resultMap extends="BaseResultMap" id="ExternalStudentReportPdfMap" type="edu.ku.cete.web.ExternalStudentReportDTO">
    <result column="statestudentidentifier" property="stateStudentIdentifier" jdbcType="VARCHAR" />
    <result column="legalmiddlename" property="legalMiddleName" jdbcType="VARCHAR" />
    <result column="legallastname" property="legalLastName" jdbcType="VARCHAR" />
    <result column="legalfirstname" property="legalFirstName" jdbcType="VARCHAR" />
    <result column="gradecode" property="gradeCode" jdbcType="VARCHAR" />
    <result column="currentgradelevel" property="gradeLevel" jdbcType="VARCHAR" />
    <result column="schooldisplayidentifier" property="schoolDisplayIdentifier" jdbcType="VARCHAR" />
    <result column="districtdisplayidentifier" property="districtDisplayIdentifier" jdbcType="VARCHAR" />
    <result column="statedisplayidentifier" property="stateDisplayIdentifier" jdbcType="VARCHAR" />
    <result column="contentareaname" property="subjectName" jdbcType="VARCHAR" />
    <result column="contentareacode" property="contentAreaCode" jdbcType="VARCHAR" />
    <result column="assessmentcode" property="assessmentCode" jdbcType="VARCHAR" />
    <result column="assessmentname" property="assessmentName" jdbcType="VARCHAR" />
    <result column="reportcycle" property="reportCycle" jdbcType="VARCHAR" />
    <result column="completed" property="completed" jdbcType="BIT" />
    <result column="statename" jdbcType="VARCHAR" property="stateName" />
    <result column="achievementlevel" property="achievementLevel" jdbcType="VARCHAR" />
    <result column="studentscore" property="studentScore" jdbcType="BIGINT" />
    <result column="standarderror" property="standardError" jdbcType="NUMERIC" />
    <result column="districtavgscore" property="districtAverageScore" jdbcType="BIGINT" />
    <result column="districtstandarderror" property="districtStandardError" jdbcType="NUMERIC" />
    <result column="stateavgscore" property="stateAverageScore" jdbcType="BIGINT" />
    <result column="statestandarderror" property="stateStandardError" jdbcType="NUMERIC" />
    <result column="allstatesavgscore" property="allStatesAvgScore" jdbcType="BIGINT" />
    <result column="allstatestandarderror" property="allStateStandardError" jdbcType="NUMERIC" />
    <result column="schoolshortname" property="schoolShortName" jdbcType="VARCHAR" />
    <result column="districtshortname" property="districtShortName" jdbcType="VARCHAR" />
  </resultMap>
  
  <insert id="insert" parameterType="edu.ku.cete.domain.Externalstudentreports">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 16 10:20:24 CDT 2017.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('externalstudentreports_id_seq')
    </selectKey>
    insert into externalstudentreports (id, studentid, gradeid, 
      subjectid, stateid, assessmentprogramid, 
      districtid, schoolid, level1_text, 
      level2_text, filepath, createddate, 
      createduser, modifieduser, modifieddate, 
      activeflag, schoolyear, reporttype, 
      reportprocessid, schoolname, districtname)
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{gradeId,jdbcType=BIGINT}, 
      #{subjectId,jdbcType=BIGINT}, #{stateId,jdbcType=BIGINT}, #{assessmentProgramid,jdbcType=BIGINT}, 
      #{districtId,jdbcType=BIGINT}, #{schoolId,jdbcType=BIGINT}, #{level1_text,jdbcType=VARCHAR}, 
      #{level2_text,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{createdUser,jdbcType=BIGINT}, #{modifiedUser,jdbcType=BIGINT}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{activeFlag,jdbcType=BIT}, #{schoolYear,jdbcType=BIGINT}, #{reportType,jdbcType=VARCHAR}, 
      #{reportProcessId,jdbcType=BIGINT}, #{schoolName,jdbcType=VARCHAR}, #{districtName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.Externalstudentreports">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 16 10:20:24 CDT 2017.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('externalstudentreports_id_seq')
    </selectKey>
    insert into externalstudentreports
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="studentId != null">
        studentid,
      </if>
      <if test="gradeId != null">
        gradeid,
      </if>
      <if test="subjectId != null">
        subjectid,
      </if>
      <if test="stateId != null">
        stateid,
      </if>
      <if test="assessmentProgramid != null">
        assessmentprogramid,
      </if>
      <if test="districtId != null">
        districtid,
      </if>
      <if test="schoolId != null">
        schoolid,
      </if>
      <if test="level1_text != null and level1_text != ''">
        level1_text,
      </if>
      <if test="level2_text != null and level2_text != ''">
        level2_text,
      </if>
      <if test="filePath != null">
        filepath,
      </if>
      <if test="createdDate != null">
        createddate,
      </if>
      <if test="createdUser != null">
        createduser,
      </if>
      <if test="modifiedUser != null">
        modifieduser,
      </if>
      <if test="modifiedDate != null">
        modifieddate,
      </if>
      <if test="activeFlag != null">
        activeflag,
      </if>
      <if test="schoolYear != null">
        schoolyear,
      </if>
      <if test="reportType != null">
        reporttype,
      </if>
      <if test="reportProcessId != null">
        reportprocessid,
      </if>
      <if test="schoolName != null">
        schoolname,
      </if>
      <if test="districtName != null">
        districtname,
      </if>      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="stateId != null">
        #{stateId,jdbcType=BIGINT},
      </if>
      <if test="assessmentProgramid != null">
        #{assessmentProgramid,jdbcType=BIGINT},
      </if>
      <if test="districtId != null">
        #{districtId,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="level1_text != null and level1_text != ''">
        #{level1_text,jdbcType=VARCHAR},
      </if>
      <if test="level2_text != null and level2_text != ''">
        #{level2_text,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedUser != null">
        #{modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="activeFlag != null">
        #{activeFlag,jdbcType=BIT},
      </if>
      <if test="schoolYear != null">
        #{schoolYear,jdbcType=BIGINT},
      </if>
      <if test="reportType != null">
        #{reportType,jdbcType=VARCHAR},
      </if>
      <if test="reportProcessId != null">
        #{reportProcessId,jdbcType=BIGINT},
      </if>
      <if test="schoolName != null">
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="districtName != null">
        #{districtName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
   <resultMap extends="BaseResultMap" id="ExternalStudentReportDTO" type="edu.ku.cete.web.ExternalStudentReportDTO">
     <result column="legalfirstname" jdbcType="VARCHAR" property="legalFirstName" />
     <result column="legalmiddlename" jdbcType="VARCHAR" property="legalMiddleName" />
     <result column="legallastname" jdbcType="VARCHAR" property="legalLastName" />
     <result column="statestudentidentifier" jdbcType="VARCHAR" property="stateStudentIdentifier" />
     <result column="gradename" jdbcType="VARCHAR" property="gradeName" />
     <result column="subjectname" jdbcType="VARCHAR" property="subjectName" />
     <result column="schoolname" jdbcType="VARCHAR" property="schoolName" />
     <result column="rosterid" jdbcType="VARCHAR" property="rosterId" />
   </resultMap>
  
     <select id="selectByCriteria" parameterType="map" resultMap="ExternalStudentReportDTO">
     SELECT sr.*, s.legalfirstname, s.legalmiddlename, s.legallastname, s.statestudentidentifier
     FROM externalstudentreports sr
     INNER JOIN student s ON sr.studentid = s.id
     <!-- <if test="assessmentProgCode != 'CPASS'">
      INNER JOIN (select org.reportyear from organization_parent(#{schoolId,jdbcType=BIGINT}) orgParent 
      INNER JOIN organization org ON org.id=orgParent.id where orgParent.contractingorganization is true) as org ON sr.schoolyear = org.reportyear
     </if> 	
     <if test="assessmentProgCode == 'CPASS'">
      INNER JOIN (select orgap.reportyear from organization_parent(#{schoolId,jdbcType=BIGINT}) orgParent 
      INNER JOIN orgassessmentprogram orgap ON orgap.organizationid=orgParent.id and orgap.assessmentprogramid =#{apId,jdbcType=BIGINT} 
      where orgParent.contractingorganization is true) as orgap ON sr.schoolyear = orgap.reportyear
     </if>  -->
     
      WHERE
      sr.schoolyear = #{reportYear} AND
       sr.filepath IS NOT NULL
       AND sr.schoolid = #{schoolId,jdbcType=BIGINT}
       <!-- AND sr.districtid = #{districtId,jdbcType=BIGINT} -->
       AND sr.subjectid = #{contentAreaId,jdbcType=BIGINT}
       AND sr.gradeid = #{gradeId,jdbcType=BIGINT}
       AND sr.activeflag is true
       <if test="reportTypeCode != null">
      	and sr.reporttype = #{reportTypeCode,jdbcType=VARCHAR}
       </if> 
       AND sr.assessmentprogramid IN
     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
       #{apId,jdbcType=BIGINT}
     </foreach>
     ORDER BY s.legallastname, s.legalfirstname, s.legalmiddlename, sr.level1_text, sr.level2_text
     LIMIT #{limit,jdbcType=BIGINT}
     OFFSET #{offset,jdbcType=BIGINT}
   </select>
   
   <select id="countByCriteria" parameterType="map" resultType="java.lang.Long">
     SELECT COUNT(id)
     FROM externalstudentreports sr
     <!-- INNER JOIN (select org.reportyear from organization_parent(#{schoolId,jdbcType=BIGINT}) orgParent 
     	INNER JOIN organization org ON org.id=orgParent.id where orgParent.contractingorganization is true) as org ON sr.schoolyear = org.reportyear -->
     WHERE sr.schoolid = #{schoolId,jdbcType=BIGINT}
     <!-- AND sr.districtid = #{districtId,jdbcType=BIGINT} -->
     AND sr.schoolyear = #{reportYear}
     AND sr.subjectid = #{contentAreaId,jdbcType=BIGINT}
     AND sr.gradeid = #{gradeId,jdbcType=BIGINT}
     <if test="reportTypeCode != null">
      and sr.reporttype = #{reportTypeCode,jdbcType=VARCHAR}
     </if> 
     AND sr.assessmentprogramid IN
     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
       #{apId,jdbcType=BIGINT}
     </foreach>
     
   </select>
   
  
   <select id="selectByPrimaryKeyAndUserOrg" parameterType="map" resultMap="BaseResultMap">
    SELECT sr.*
    FROM externalstudentreports sr
    INNER JOIN (SELECT id FROM organization_children_active_or_inactive(#{userOrgId,jdbcType=BIGINT}) UNION (SELECT #{userOrgId,jdbcType=BIGINT})) orgids ON sr.schoolid = orgids.id
    WHERE sr.id = #{id,jdbcType=BIGINT}
  </select>

     <select id="selectByCriteriaForTeacherRoster" parameterType="map" resultMap="ExternalStudentReportDTO">   
     select * from 
	 ( 
	     SELECT sr.*, s.legalfirstname, s.legalmiddlename, s.legallastname, s.statestudentidentifier, r.id as rosterid
	     FROM externalstudentreports sr
	     INNER JOIN student s ON sr.studentid = s.id
	     INNER JOIN enrollment e on e.studentid=s.id and e.activeflag is true
	     INNER JOIN enrollmentsrosters er on er.enrollmentid=e.id and er.activeflag is true
	     INNER JOIN roster r on er.rosterid=r.id and r.id = #{rosterId,jdbcType=BIGINT} and r.activeflag is true
	      WHERE
	       sr.filepath IS NOT NULL
	       AND sr.subjectid = r.statesubjectareaid
	       AND sr.activeflag is true
	       AND sr.schoolyear = #{reportYear,jdbcType=BIGINT}
	       <if test="reportTypeCode != null">
	      	and sr.reporttype = #{reportTypeCode,jdbcType=VARCHAR}
	       </if> 
	       AND sr.assessmentprogramid IN
	     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
	       #{apId,jdbcType=BIGINT}
	     </foreach>
	     
	     union
	     
	     SELECT sr.*, s.legalfirstname, s.legalmiddlename, s.legallastname, s.statestudentidentifier, r.id as rosterid
	     FROM externalstudentreports sr
	     INNER JOIN student s ON sr.studentid = s.id
	     INNER JOIN enrollment e on e.studentid=s.id and e.activeflag is true
	     INNER JOIN enrollmentsrosters er on er.enrollmentid=e.id and er.activeflag is true
	     INNER JOIN roster r on er.rosterid=r.id and r.id = #{rosterId,jdbcType=BIGINT} and r.activeflag is true
	      WHERE
	       sr.filepath IS NOT NULL
	       AND sr.subjectid is NULL
	       AND sr.activeflag is true
	       AND sr.schoolyear = #{reportYear,jdbcType=BIGINT}
	       <if test="reportTypeCode != null">
	      	and sr.reporttype = #{reportTypeCode,jdbcType=VARCHAR}
	       </if> 
	       AND sr.assessmentprogramid IN
	     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
	       #{apId,jdbcType=BIGINT}
	     </foreach>
     ) a
     ORDER BY a.legallastname, a.legalfirstname, a.legalmiddlename
     LIMIT #{limit,jdbcType=BIGINT}
     OFFSET #{offset,jdbcType=BIGINT}
   </select>
   
   <select id="countByCriteriaForTeacherRoster" parameterType="map" resultType="java.lang.Long"> 
     select COUNT(a.id) from 
	 ( 
	     SELECT sr.id
	     FROM externalstudentreports sr
	     INNER JOIN student s ON sr.studentid = s.id
	     INNER JOIN enrollment e on e.studentid=s.id and e.activeflag is true
	     INNER JOIN enrollmentsrosters er on er.enrollmentid=e.id and er.activeflag is true
	     INNER JOIN roster r on er.rosterid=r.id and r.id = #{rosterId,jdbcType=BIGINT} and r.activeflag is true
	      WHERE
	       sr.filepath IS NOT NULL
	       AND sr.subjectid = r.statesubjectareaid
	       AND sr.activeflag is true
	       AND sr.schoolyear = #{reportYear,jdbcType=BIGINT}
	       <if test="reportTypeCode != null">
	      	and sr.reporttype = #{reportTypeCode,jdbcType=VARCHAR}
	       </if> 
	       AND sr.assessmentprogramid IN
	     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
	       #{apId,jdbcType=BIGINT}
	     </foreach>
	     
	     union
	     
	     SELECT sr.id
	     FROM externalstudentreports sr
	     INNER JOIN student s ON sr.studentid = s.id
	     INNER JOIN enrollment e on e.studentid=s.id and e.activeflag is true
	     INNER JOIN enrollmentsrosters er on er.enrollmentid=e.id and er.activeflag is true
	     INNER JOIN roster r on er.rosterid=r.id and r.id = #{rosterId,jdbcType=BIGINT} and r.activeflag is true
	      WHERE
	       sr.filepath IS NOT NULL
	       AND sr.subjectid is NULL
	       AND sr.activeflag is true
	       AND sr.schoolyear = #{reportYear,jdbcType=BIGINT}
	       <if test="reportTypeCode != null">
	      	and sr.reporttype = #{reportTypeCode,jdbcType=VARCHAR}
	       </if> 
	       AND sr.assessmentprogramid IN
	     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
	       #{apId,jdbcType=BIGINT}
	     </foreach>
     ) a
   </select>
   
  <delete id="deleteByStateSchoolYearAssessmentProgramReportType">
    delete from externalstudentreports 
  	where stateid=#{stateId} 
  		and schoolyear=#{schoolYear} 
  		and assessmentprogramid=#{assessmentProgramId}
  		<if test="reportType != null"> 
  		  and reporttype=#{reportType} 
  		</if>
  </delete>
  
  <select id="getExternalStudentSummaryReports" parameterType="map" resultMap="ExternalStudentReportDTO">
	     SELECT sr.*, s.legalfirstname, s.legalmiddlename, s.legallastname, s.statestudentidentifier
	     FROM externalstudentreports sr
	     INNER JOIN student s ON sr.studentid = s.id
	     <!-- <if test="reportCode != 'ALT_ST_DCPS'">
	      INNER JOIN (select org.reportyear from organization_parent(#{schoolId,jdbcType=BIGINT}) orgParent 
	     	INNER JOIN organization org ON org.id=orgParent.id where orgParent.contractingorganization is true) as org ON sr.schoolyear = org.reportyear 
	     </if> -->
	      WHERE
	       sr.filepath IS NOT NULL
	       AND sr.schoolid = #{schoolId,jdbcType=BIGINT}
	       <!-- AND sr.districtid = #{districtId,jdbcType=BIGINT} -->
	       AND sr.subjectid is null
	       AND sr.gradeid = #{gradeId,jdbcType=BIGINT}
	       AND sr.activeflag is true
	       <if test="reportCode != null">
	       		AND sr.reporttype = #{reportCode}
	       </if>
	        <if test="reportyear != null">
	        AND sr.schoolyear= #{reportyear}
	        </if>
	       AND sr.assessmentprogramid IN
	     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
	       #{apId,jdbcType=BIGINT}
	     </foreach>
	     ORDER BY s.legallastname, s.legalfirstname, s.legalmiddlename
	     LIMIT #{limit,jdbcType=BIGINT}
	     OFFSET #{offset,jdbcType=BIGINT}
   </select>
   
   <select id="countOfStudentSummaryReports" parameterType="map" resultType="java.lang.Long">
	     SELECT COUNT(id)
	     FROM externalstudentreports sr
	     <!-- <if test="reportCode != 'ALT_ST_DCPS'">
	     INNER JOIN (select org.reportyear from organization_parent(#{schoolId,jdbcType=BIGINT}) orgParent	     	
	     	INNER JOIN organization org ON org.id=orgParent.id where orgParent.contractingorganization is true) as org ON sr.schoolyear = org.reportyear
	    </if> -->
	     WHERE sr.schoolid = #{schoolId,jdbcType=BIGINT}
	     AND sr.subjectid is null
	     AND sr.gradeid = #{gradeId,jdbcType=BIGINT}
	     <if test="reportCode != null">
		 	AND sr.reporttype = #{reportCode}
		 </if>
		 <if test="reportyear != null">
			AND  schoolyear = #{reportyear}
		 </if>
	   	    AND sr.assessmentprogramid IN
	     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
	       #{apId,jdbcType=BIGINT}
	     </foreach>     
   </select>
   
   <select id="getStudentSummaryReportsByRosterId" parameterType="map" resultMap="ExternalStudentReportDTO">    
	     SELECT sr.*, s.legalfirstname, s.legalmiddlename, s.legallastname, s.statestudentidentifier, r.id as rosterid
		     FROM externalstudentreports sr
		     INNER JOIN student s ON sr.studentid = s.id
		     INNER JOIN enrollment e on e.studentid=s.id and e.activeflag is true
		     INNER JOIN enrollmentsrosters er on er.enrollmentid=e.id and er.activeflag is true
		     INNER JOIN roster r on er.rosterid=r.id and r.id = #{rosterId,jdbcType=BIGINT} and r.activeflag is true
		      WHERE
		       sr.filepath IS NOT NULL
		       AND sr.subjectid is null
		       AND sr.activeflag is true
		       AND sr.schoolyear = #{reportYear,jdbcType=BIGINT}
		       <if test="reportType != null">
			 		AND sr.reporttype = #{reportType,jdbcType=VARCHAR}
			   </if>
		       AND sr.assessmentprogramid IN
		     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
		       #{apId,jdbcType=BIGINT}
		     </foreach>
		     ORDER BY s.legallastname, s.legalfirstname, s.legalmiddlename
		     LIMIT #{limit,jdbcType=BIGINT}
		     OFFSET #{offset,jdbcType=BIGINT}
   </select>
   
   <select id="countOfStudentSummaryReportsByRosterId" parameterType="map" resultType="java.lang.Long"> 
	     SELECT COUNT(sr.id)
		     FROM externalstudentreports sr
		     INNER JOIN student s ON sr.studentid = s.id
		     INNER JOIN enrollment e on e.studentid=s.id and e.activeflag is true
		     INNER JOIN enrollmentsrosters er on er.enrollmentid=e.id and er.activeflag is true
		     INNER JOIN roster r on er.rosterid=r.id and r.id = #{rosterId,jdbcType=BIGINT} and r.activeflag is true
		     WHERE sr.filepath IS NOT NULL
		     AND sr.subjectid is null
		     AND sr.activeflag is true
		     <if test="reportType != null">
			 		AND sr.reporttype = #{reportType,jdbcType=VARCHAR}
			 </if>
		     AND sr.schoolyear = #{reportYear,jdbcType=BIGINT}     
		     AND sr.assessmentprogramid IN
		     <foreach close=")" collection="assessmentProgramIds" item="apId" open="(" separator=",">
		       #{apId,jdbcType=BIGINT}
		     </foreach>
   </select>
     <insert id="insertResults">
    insert into externalstudentreports (studentid, gradeid, 
      subjectid, stateid, assessmentprogramid, 
      districtid, schoolid, level1_text, 
      createddate, 
      createduser, modifieduser, modifieddate, 
      activeflag, schoolyear, reporttype, 
      reportprocessid, schoolname, districtname, 
      scalescore, standarderror, achievementlevel, completedflag, reportcycle, assessmentcode, testingprogramid)
    values (#{studentId,jdbcType=BIGINT}, #{gradeId,jdbcType=BIGINT}, 
      #{subjectId,jdbcType=BIGINT}, #{stateInternalId,jdbcType=BIGINT}, #{assessmentProgramId,jdbcType=BIGINT}, 
      #{districtInternalId,jdbcType=BIGINT}, #{schoolInternalId,jdbcType=BIGINT}, #{assessmentName,jdbcType=VARCHAR}, 
      now(), 
      #{createdUser,jdbcType=BIGINT}, #{createdUser,jdbcType=BIGINT}, now(), 
      #{activeFlag,jdbcType=BIT}, #{schoolYear,jdbcType=BIGINT}, #{reportType,jdbcType=VARCHAR}, 
      #{batchUploadedId,jdbcType=BIGINT}, #{schoolName,jdbcType=VARCHAR}, #{districtName,jdbcType=VARCHAR},
      #{scaleScore,jdbcType=BIGINT}, #{standardError,jdbcType=BIGINT}, #{achievementLevel,jdbcType=BIGINT}, #{completedFlag, jdbcType=BIT},
      #{reportCycle,jdbcType=VARCHAR}, #{testType,jdbcType=VARCHAR}, #{testingProgramInternalId,jdbcType=VARCHAR})
  </insert>
  <delete id="deleteExternalStudentReportResults">
    delete from externalstudentreports 
  	where  schoolyear=#{schoolYear} 
  		and assessmentprogramid=#{assessmentProgramId,jdbcType=BIGINT}
  		and testingprogramid=#{testingProgramId,jdbcType=BIGINT}
  		and reportcycle=#{reportCycle,jdbcType=VARCHAR}
  		<if test="subjectId != null">
			and subjectid = #{subjectId,jdbcType=BIGINT}
		</if> 
		<if test="stateId != null">
  		    and schoolid in (select id from organization_children_Active_or_Inactive(#{stateId,jdbcType=BIGINT}) where organizationtypeid in(select id from organizationtype where typecode = 'SCH'))
  		</if>     
  </delete>
   
  <select id="getDistinctAssessmentCode" resultType="String">       
		select distinct assessmentcode from externalstudentreports  
		where assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
		and stateid =#{stateId,jdbcType=BIGINT}      
		and schoolyear = #{schoolYear,jdbcType=BIGINT} 
		and reportcycle = #{reportCycle,jdbcType=VARCHAR}
		and testingprogramid = #{testingProgramId,jdbcType=BIGINT} 
		<if test="contentAreaId != null">
			and subjectid =#{contentAreaId,jdbcType=BIGINT}
		</if>
		<if test="gradeCourseId != null">
			and gradeid =#{gradeCourseId,jdbcType=BIGINT} 
		</if> 
		order by assessmentcode    
   </select>
   
   <select id="getStudentIdsForReportGeneration" resultType="java.lang.Long">       
		 select distinct esr.studentid 
		 from externalstudentreports esr		 
     	 <if test="processByStudentId == 'TRUE' and reprocessEntireDistrict=='FALSE'">		
			inner join studentreportreprocess rp on rp.studentId=esr.studentid 
			and rp.assessmentprogramid = esr.assessmentprogramid 
			and rp.schoolyear = esr.schoolyear
			and rp.isrcomplete is false  
			and rp.generatespecificstudentreport is true 
			and rp.testingprogramid = #{testingProgramId,jdbcType=BIGINT}
		 </if> 
		 <if test="processByStudentId == 'TRUE' and reprocessEntireDistrict=='TRUE'">
			inner join studentreportreprocess rp on rp.districtid=esr.districtid 
			and rp.assessmentprogramid = esr.assessmentprogramid  
			and rp.schoolyear = esr.schoolyear
			and isrcomplete is false  
			and rp.generatereportsindistrict is true
			and rp.testingprogramid = #{testingProgramId,jdbcType=BIGINT}
		 </if>
		 where esr.schoolyear = #{schoolYear,jdbcType=BIGINT} 
		 and esr.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
		 and esr.stateid = #{stateId,jdbcType=BIGINT} 
		 and esr.reportcycle = #{reportCycle,jdbcType=VARCHAR}
		 and esr.testingprogramid = #{testingProgramId,jdbcType=BIGINT}  
		 and esr.assessmentcode = #{assessmentCode,jdbcType=VARCHAR}
		 <if test="contentAreaId != null">
			and esr.subjectid =#{contentAreaId,jdbcType=BIGINT}
		 </if>
		 <if test="gradeCourseId != null">
			and esr.gradeid =#{gradeCourseId,jdbcType=BIGINT} 
		 </if> 
		 <if test="processByStudentId == null or (processByStudentId != null and processByStudentId == 'FALSE')">
        	 and esr.generated is false
     	 </if>		 
		 order by esr.studentid
		 LIMIT #{pageSize}
    	 OFFSET #{offset}
   </select>

   <select id="getStudentForReportGeneration" resultMap="ExternalStudentReportPdfMap">       
			select distinct esr.id,
			esr.studentid,
			st.statestudentidentifier,		
			st.legalfirstname as legalfirstname,
			st.legalmiddlename as legalmiddlename,
			st.legallastname as legallastname,
			esr.schoolyear as schoolyear,
			esr.reportcycle as reportcycle,
			gc.abbreviatedname as gradecode, 
			(select abbreviatedname from gradecourse where id = (select currentgradelevel from enrollment where 
			studentid = esr.studentid and attendanceschoolid = otd.schoolid and currentschoolyear = #{schoolYear,jdbcType=BIGINT}) 
			and activeflag is true ) as currentgradelevel,
			ca.name as contentareaname,
			ca.abbreviatedname as contentareacode, 
			esr.assessmentcode as assessmentcode,
			esr.level1_text as assessmentname,
			esr.completedflag as completed,
			otd.stateid as stateid,
			otd.statename as statename,
			otd.statedisplayidentifier,
			otd.districtid as districtid,
			otd.districtname as districtname,
			otd.districtdisplayidentifier,
			otd.schoolid as schoolid,
			otd.schoolname as schoolname,
			otd.schooldisplayidentifier,
			ld.levelname as achievementlevel,
			esr.scalescore as studentscore,
			esr.standarderror as standarderror,
			orddt.scalescore as districtaveragescore,
			orddt.standarderror as districtstandarderror,
			ordst.scalescore as stateaveragescore,
			ordst.standarderror as statestandarderror,
			ordast.scalescore as allstatesavgscore,
			ordast.standarderror as allstatestandarderror,
			shortschname.shortorgname as schoolshortname,
			shortdtname.shortorgname as districtshortname,	
			esr.modifieduser
			from externalstudentreports esr
			inner join student st on st.id = esr.studentid and st.activeflag is true
			inner join contentarea ca on ca.id = esr.subjectid and ca.activeflag is true 
			inner join gradecourse gc on gc.id = esr.gradeid and gc.activeflag is true 
			inner join organizationtreedetail otd on otd.schoolid = esr.schoolid 	
			left join organizationreportdetails orddt on orddt.organizationid = otd.districtid and orddt.schoolyear = esr.schoolyear and orddt.assessmentprogramid = esr.assessmentprogramid and orddt.gradeid = esr.gradeid and orddt.contentareaid = esr.subjectid
			and orddt.assessmentcode = esr.assessmentcode and orddt.testingprogramid = esr.testingprogramid and orddt.reportcycle = esr.reportcycle		 
			left join organizationreportdetails ordst on ordst.organizationid = otd.stateid and ordst.schoolyear = esr.schoolyear and ordst.assessmentprogramid = esr.assessmentprogramid and ordst.gradeid = esr.gradeid and ordst.contentareaid = esr.subjectid
			and ordst.assessmentcode = esr.assessmentcode and ordst.testingprogramid = esr.testingprogramid and ordst.reportcycle = esr.reportcycle 			
			left join organizationreportdetails ordast on ordast.organizationid = (select id from organization  where displayidentifier ='ALL' limit 1)
			 and ordast.schoolyear = esr.schoolyear and ordast.assessmentprogramid = esr.assessmentprogramid and ordast.gradeid = esr.gradeid and ordast.contentareaid = esr.subjectid
			and ordast.assessmentcode = esr.assessmentcode and ordast.testingprogramid = esr.testingprogramid and ordast.reportcycle = esr.reportcycle 
			left join leveldescription ld on ld.id = esr.achievementlevel and ld.activeflag is true
			left join reportorganizationshortname as shortdtname ON shortdtname.organizationid = otd.districtid and shortdtname.activeflag is true
			left join reportorganizationshortname as shortschname ON shortschname.organizationid = otd.districtid and shortschname.activeflag is true
			where esr.schoolyear = #{schoolYear,jdbcType=BIGINT}
			and esr.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
			and esr.stateid = #{stateId,jdbcType=BIGINT} 
			and esr.assessmentcode = #{assessmentCode,jdbcType=VARCHAR} 
			and esr.studentid = #{studentId,jdbcType=BIGINT}
			and esr.reportcycle = #{reportCycle,jdbcType=VARCHAR}
		    and esr.testingprogramid = #{testingProgramId,jdbcType=BIGINT}   
			order by esr.id
   </select>
   
  <update id="updateStudentReportFilePath" parameterType="edu.ku.cete.web.ExternalStudentReportDTO" >
    update externalstudentreports 
    set  
    filepath = #{filePath,jdbcType=VARCHAR}, 
    generated = true,
    modifieduser = #{modifiedUser,jdbcType=BIGINT}, 
    modifieddate = now() 
    where id = #{id,jdbcType=BIGINT}
  </update>
    
   <update id="updateAllExternalStudentReportFilePath" parameterType="map" >
    update externalstudentreports 
    set  filepath = null,generated = false,
    modifieduser = #{userId,jdbcType=BIGINT}, 
    modifieddate = now() where assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
	and stateid =#{organizationId,jdbcType=BIGINT}
	<if test="subjectId != null">
		and subjectid =#{subjectId,jdbcType=BIGINT}
	</if>
	<if test="gradeId != null">
		and gradeid =#{gradeId,jdbcType=BIGINT} 
	</if>   
    and reportcycle = #{reportCycle, jdbcType=VARCHAR}
    and testingprogramid = #{testingProgramId, jdbcType=BIGINT}
	and schoolyear = #{schoolYear,jdbcType=BIGINT} 
	and reporttype = #{reportType,jdbcType=VARCHAR} 
  </update>
  
  <select id="selectAllExternalStudentReports" parameterType="map" resultMap="ExternalStudentReportDTO">    
	select studentid,filepath from externalstudentreports
    where assessmentprogramid = #{assessmentProgramId}
 	<if test="gradeId != null">
             and gradeid = #{gradeId, jdbcType=BIGINT}
    </if>  
    <if test="contentAreaId != null">
          and subjectid = #{contentAreaId, jdbcType=BIGINT}
    </if>  
     <if test="organizationId != null">
          and stateid = #{organizationId, jdbcType=BIGINT}
    </if>  
    <if test="schoolYear != null">
          and schoolyear = #{schoolYear, jdbcType=BIGINT}
    </if>  
    <if test="reportType != null">
          and reporttype = #{reportType, jdbcType=VARCHAR}
    </if>  
    <if test="reportCycle != null">
          and reportcycle = #{reportCycle, jdbcType=VARCHAR}
    </if>  
    <if test="testingProgramId != null">
          and testingprogramid = #{testingProgramId, jdbcType=BIGINT}
    </if>  
   </select>
   
    <update id="updateResults" >
	    update externalstudentreports 
	    set  reportprocessid = #{batchUploadedId,jdbcType=BIGINT}, 
	    stateid = #{stateInternalId,jdbcType=BIGINT}, 
        districtid = #{districtInternalId,jdbcType=BIGINT}, 
        schoolid = #{schoolInternalId,jdbcType=BIGINT}, 
	    schoolname =  #{schoolName,jdbcType=VARCHAR},  
	    districtname = #{districtName,jdbcType=VARCHAR},
        scalescore =  #{scaleScore,jdbcType=BIGINT},
        standarderror = #{standardError,jdbcType=BIGINT},
        achievementlevel = #{achievementLevel,jdbcType=BIGINT}, 
        completedflag = #{completedFlag, jdbcType=BIT},
	    modifieduser = #{createdUser,jdbcType=BIGINT}, 
	    modifieddate = now() 
	    where studentid = #{studentId,jdbcType=BIGINT} 
	    and  assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
		<if test="subjectId != null">
			and subjectid =#{subjectId,jdbcType=BIGINT}
		</if>
		<if test="gradeId != null">
			and gradeid =#{gradeId,jdbcType=BIGINT} 
		</if> 
		and assessmentcode = #{testType,jdbcType=VARCHAR}
	    and reportcycle = #{reportCycle, jdbcType=VARCHAR}
	    and testingprogramid = #{testingProgramInternalId, jdbcType=BIGINT}
		and schoolyear = #{schoolYear,jdbcType=BIGINT} 
		and reporttype = #{reportType,jdbcType=VARCHAR} 
		and activeflag is true
  </update>
</mapper>