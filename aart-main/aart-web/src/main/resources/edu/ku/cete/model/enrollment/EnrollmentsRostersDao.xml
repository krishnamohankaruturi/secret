<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.enrollment.EnrollmentsRostersDao" >
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.enrollment.EnrollmentsRosters" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <id column="enrollmentid" property="enrollmentId" jdbcType="BIGINT" />
    <id column="rosterid" property="rosterId" jdbcType="BIGINT" />
    <id column="courseenrollmentstatusid" property="courseEnrollmentStatusId" jdbcType="BIGINT" />
  </resultMap>
    <resultMap id="StudentRosterKeyResultMap" type="edu.ku.cete.domain.enrollment.StudentRosterKeyDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    <id column="id" property="enrollmentId" jdbcType="BIGINT" />
    <result column="enrollmentid" property="enrollmentId" jdbcType="BIGINT" />
    <result column="rosterid" property="rosterId" jdbcType="BIGINT" />
    <result column="studentId" property="studentId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    id, enrollmentid, rosterid, courseenrollmentstatusid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ku.cete.domain.enrollment.EnrollmentsRostersExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.enrollmentsrosters
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="edu.ku.cete.domain.enrollment.EnrollmentsRosters" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    delete from public.enrollmentsrosters
    where enrollmentid = #{enrollmentId,jdbcType=BIGINT}
      and rosterid = #{rosterId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ku.cete.domain.enrollment.EnrollmentsRostersExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    delete from public.enrollmentsrosters
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ku.cete.domain.enrollment.EnrollmentsRosters" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    insert into public.enrollmentsrosters (enrollmentid, rosterid, createddate, createduser, activeflag, modifieddate, modifieduser,courseenrollmentstatusid, externalid)
    values (#{enrollmentId,jdbcType=BIGINT}, #{rosterId,jdbcType=BIGINT}, #{createdDate}, #{createdUser}, #{activeFlag},#{modifiedDate},#{modifiedUser},#{courseEnrollmentStatusId,jdbcType=BIGINT}, #{externalId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.enrollment.EnrollmentsRosters" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    insert into public.enrollmentsrosters
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="enrollmentId != null" >
        enrollmentid,
      </if>
      <if test="rosterId != null" >
        rosterid,
      </if>
      <if test="courseEnrollmentStatusId != null" >
		courseenrollmentstatusid,
	  </if>
        createddate, 
		createduser, 
		activeflag,
		modifieddate, 
		modifieduser,
		<if test="externalId != null">
			externalid,
		</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="enrollmentId != null" >
        #{enrollmentId,jdbcType=BIGINT},
      </if>
      <if test="rosterId != null" >
        #{rosterId,jdbcType=BIGINT},
      </if>
      <if test="courseEnrollmentStatusId != null" >
        #{courseEnrollmentStatusId,jdbcType=BIGINT},
      </if>
    </trim>
      #{createdDate},
	  #{createdUser},
	  #{activeFlag},
	  #{modifiedDate},
	  #{modifiedUser},
	  <if test="externalId != null">
	    #{externalId},
	  </if>
  </insert>
  <select id="countByExample" parameterType="edu.ku.cete.domain.enrollment.EnrollmentsRostersExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    select count(*) from public.enrollmentsrosters
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    update public.enrollmentsrosters
    <set >
      <if test="record.enrollmentId != null" >
        enrollmentid = #{record.enrollmentId,jdbcType=BIGINT},
      </if>
      <if test="record.rosterId != null" >
        rosterid = #{record.rosterId,jdbcType=BIGINT},
      </if>
      <if test="record.courseEnrollmentStatusId != null" >
        courseenrollmentstatusid = #{record.courseEnrollmentStatusId,jdbcType=BIGINT},
      </if>
      modifieddate = #{record.modifiedDate},
	  modifieduser = #{record.modifiedUser},
	  activeflag = #{record.activeFlag},
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    update public.enrollmentsrosters
    set enrollmentid = #{record.enrollmentId,jdbcType=BIGINT},
      rosterid = #{record.rosterId,jdbcType=BIGINT},
      courseenrollmentstatusid = #{record.courseEnrollmentStatusId,jdbcType=BIGINT},
      modifieddate = #{record.modifiedDate},
	  modifieduser = #{record.modifiedUser},
	  activeflag = #{record.activeFlag} 
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <select id="selectStudentRosterKeysById" resultMap="StudentRosterKeyResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 16 23:31:04 CDT 2012.
    -->
    select er.id, er.enrollmentid, er.rosterid,e.studentid,er.courseenrollmentstatusid
    from public.enrollmentsrosters er,enrollment e
    where
    er.enrollmentid = e.id
    <if test="enrollmentRosterIds != null" >
    	and er.id in
        <foreach collection="enrollmentRosterIds" item="enrollmentRosterId" open="(" close=")" separator="," >
    	#{enrollmentRosterId}
        </foreach>
    </if>   
  </select>
  
 <select id="getEnrollmentInfoByRosterIdEnrollmentId" resultMap="BaseResultMap">
 	select id, enrollmentid, rosterid, activeflag from enrollmentsrosters
 	where enrollmentid = #{enrollmentId}
 	and rosterid = #{rosterId}
 </select>
 
 <select id ="getInactiveLatestEnrollmentsRosterByEnrollmentIdContentAreaId" resultType="edu.ku.cete.domain.enrollment.EnrollmentsRosters">
	select er.* from enrollmentsrosters er join roster r on r.id = er.rosterid
	where er.enrollmentid = #{enrollmentId}
	and r.statesubjectareaid = #{stateSubjectAreaId}
	and er.activeflag = false
	order by er.modifieddate desc 
	limit 1
 </select>
 
 <select id="getMaxRosterIdByEnrollmentId" resultType="java.lang.Long">
 	select max(rosterid) 
 	from enrollmentsrosters 
 	where enrollmentid = #{enrollmentId} and activeflag is true
 </select>
 
 <select id="getRosterIdsByEnrollmentIdAndContent" resultType="java.lang.Long">
 	select rosterid 
 	from enrollmentsrosters er 
 	join roster r on er.rosterid = r.id
 	join contentarea ca on ca.id = r.statesubjectareaid
 	where enrollmentid = #{enrollmentId} and er.activeflag is true
 	and ca.abbreviatedname in
 	<foreach item="completedBand" collection="completedBands" separator="," open="(" close=")">
        #{completedBand}
    </foreach>
 </select>
 
 <update id="removeRostersByEnrollmentId" parameterType="java.lang.Long">
 	update enrollmentsrosters set activeflag = false, modifieduser = #{modifiedUserId}, modifieddate = now() 
 	where enrollmentid = #{enrollmentId} 
 	and activeflag is true returning rosterid;
 </update>
 
  <update id="removeEnrollmentsRostersByRosterId" parameterType="java.lang.Long">
 	update enrollmentsrosters set activeflag = false, modifieduser = #{modifiedUserId}, modifieddate = now() 
 	where rosterid = #{rosterId} 
 	and activeflag is true returning rosterid;
 </update>
 
 <select id="getByExternalId" resultType="edu.ku.cete.domain.enrollment.EnrollmentsRosters">
   SELECT id, enrollmentid, rosterid, courseenrollmentstatusid, createddate, modifieddate, createduser, modifieduser, activeflag
   FROM enrollmentsrosters er
   WHERE er.externalid = #{externalId,jdbcType=BIGINT}
   AND er.activeflag IS TRUE
 </select>
 
  <select id="getDeletedByExternalId" resultType="edu.ku.cete.domain.enrollment.EnrollmentsRosters">
   SELECT id, enrollmentid, rosterid, courseenrollmentstatusid, createddate, modifieddate, createduser, modifieduser, activeflag
   FROM enrollmentsrosters er
   WHERE er.externalid = #{externalId,jdbcType=BIGINT}
   AND er.activeflag IS FALSE
 </select>
 
 <sql id="getEnrollmentsRostersIDsByAPIInformation">
   SELECT er.id
   FROM student s
   JOIN enrollment e ON s.id = e.studentid AND e.activeflag IS TRUE
   JOIN enrollmentsrosters er ON e.id = er.enrollmentid AND er.activeflag IS TRUE
   JOIN roster r ON er.rosterid = r.id AND r.activeflag IS TRUE
   <if test="contentAreaNames != null and contentAreaNames.size > 0">
     JOIN contentarea ca
       ON r.statesubjectareaid = ca.id
       AND ca.abbreviatedname = ANY(ARRAY[
         <foreach collection="contentAreaNames" item="contentAreaName" open="" close="" separator=",">
           #{contentAreaName,jdbcType=VARCHAR}
         </foreach>
       ]::TEXT[])
   </if>
   WHERE s.activeflag IS TRUE
   AND s.id = #{studentId,jdbcType=BIGINT}
   <if test="enrollmentsRostersExternalId != null">
     AND er.externalid = #{enrollmentsRostersExternalId,jdbcType=BIGINT}
   </if>
 </sql>
 
 <update id="updateByStudentIdAndRosterStateSubjectAreaCode" parameterType="map">
   UPDATE enrollmentsrosters
   SET activeflag = FALSE,
   modifieddate = now(),
   modifieduser = #{userId,jdbcType=BIGINT}
   WHERE id IN (
     <include refid="getEnrollmentsRostersIDsByAPIInformation" />
   )
 </update>
  
 <update id="inactivateById" parameterType="map">
   UPDATE enrollmentsrosters
   SET activeflag = FALSE,
   modifieddate = now(),
   modifieduser = #{userId,jdbcType=BIGINT}
   WHERE id = #{id,jdbcType=BIGINT}
 </update>
 
  <update id="reactivateById" parameterType="map">
   UPDATE enrollmentsrosters
   SET activeflag = TRUE,
   modifieddate = now(),
   modifieduser = #{userId,jdbcType=BIGINT}
   WHERE id = #{id,jdbcType=BIGINT}
 </update>
 
 <select id="selectEnrollmentsRostersByAPIInformation" parameterType="map" resultMap="BaseResultMap">
   SELECT id, enrollmentid, rosterid
   FROM enrollmentsrosters
   WHERE id IN (
     <include refid="getEnrollmentsRostersIDsByAPIInformation" />
   )
 </select>
 
 <select id="selectsByStudentIdAndStateSubjectAreaId" parameterType="map"  resultType="java.lang.Integer" >
     	SELECT COUNT(*)
		FROM
			enrollmentsrosters er
			JOIN roster r ON er.rosterid = r.id
			JOIN enrollment e ON e.id = er.enrollmentid
		WHERE 
			 r.statesubjectareaid = #{subjectId,jdbcType=BIGINT}
			 AND e.studentid = #{studentId,jdbcType=BIGINT}
			 AND r.currentschoolyear = #{currentSchoolYear,jdbcType=BIGINT}
 </select>
</mapper>