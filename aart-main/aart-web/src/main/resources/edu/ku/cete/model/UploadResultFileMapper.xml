<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.UploadResultFileMapper" >

	<resultMap id="BaseResultMap" type="edu.ku.cete.domain.UploadGrfFile" >  
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="assessmentprogramid" jdbcType="BIGINT" property="assessmentProgramId" />
		<result column="batchuploadprocessid" jdbcType="BIGINT" property="batchUploadId" />
		<result column="studentid" jdbcType="BIGINT" property="studentId" />  
		<result column="statestudentidentifier" jdbcType="VARCHAR" property="stateStudentIdentifier" /> 
		<result column="aypschoolidentifier" jdbcType="VARCHAR" property="aypSchoolIdentifier" /> 
		<result column="accountabilityDistrictIdentifier" jdbcType="VARCHAR" property="accountabilityDistrictIdentifier" /> 
		<result column="localstudentidentifier" jdbcType="VARCHAR" property="localStudentIdentifier" /> 
		<result column="currentgradelevel" jdbcType="VARCHAR" property="currentGradelevel" /> 
		<result column="course" jdbcType="VARCHAR" property="course" /> 
		<result column="gradeid" jdbcType="BIGINT" property="gradeId" />  
		<result column="studentlegalfirstname" jdbcType="VARCHAR" property="legalFirstName" /> 
		<result column="studentlegalmiddlename" jdbcType="VARCHAR" property="legalMiddleName" /> 
		<result column="studentlegallastname" jdbcType="VARCHAR" property="legalLastName" /> 
		<result column="generationcode" jdbcType="VARCHAR" property="generationCode" />   
		<result column="username" jdbcType="VARCHAR" property="userName" />   
		<result column="firstlanguage" jdbcType="VARCHAR" property="firstLanguage" />   
		<result column="dateofbirth" jdbcType="TIMESTAMP" property="dateOfBirth" />  
		<result column="stateuse" jdbcType="TIMESTAMP" property="stateUse" />   
		<result column="gender" jdbcType="VARCHAR" property="gender" />   
		<result column="comprehensiverace" jdbcType="VARCHAR" property="comprehensiveRace" />   
		<result column="hispanicethnicity" jdbcType="VARCHAR" property="hispanicEthnicity" />   
		<result column="primarydisabilitycode" jdbcType="VARCHAR" property="primaryDisabilityCode" />   
		<result column="esolparticipationcode" jdbcType="VARCHAR" property="esolParticipationCode" />   
		<result column="schoolentrydate" jdbcType="TIMESTAMP" property="schoolEntryDate" />   
		<result column="districtentrydate" jdbcType="TIMESTAMP" property="districtEntryDate" /> 
		<result column="stateentrydate" jdbcType="TIMESTAMP" property="stateEntryDate" />   
		<result column="attendanceschoolprogramidentifier" jdbcType="VARCHAR" property="attendanceSchoolProgramIdentifier" />
		<result column="state" jdbcType="VARCHAR" property="state" />
		<result column="statecode" jdbcType="VARCHAR" property="stateCode" />
		<result column="stateid" jdbcType="BIGINT" property="stateId" />
		<result column="district" jdbcType="VARCHAR" property="districtName" />
		<result column="districtid" jdbcType="BIGINT" property="districtId" />
		<result column="districtcode" jdbcType="VARCHAR" property="residenceDistrictIdentifier" />
		<result column="schoolcode" jdbcType="VARCHAR" property="schoolIdentifier" />
		<result column="school" jdbcType="VARCHAR" property="schoolName" />
		<result column="schoolid" jdbcType="VARCHAR" property="schoolId" />
		<result column="educatorfirstname" jdbcType="VARCHAR" property="educatorFirstName" />
		<result column="educatorlastname" jdbcType="VARCHAR" property="educatorLastName" />
		<result column="educatorusername" jdbcType="VARCHAR" property="educatorUserName" />
		<result column="educatoridentifier" jdbcType="VARCHAR" property="educatorIdentifier" />
		<result column="kiteeducatoridentifier" jdbcType="VARCHAR" property="kiteEducatorIdentifier" />
		<result column="exitwithdrawaldate" jdbcType="TIMESTAMP" property="exitWithdrawalDate" />   
		<result column="exitwithdrawalcode" jdbcType="TIMESTAMP" property="exitWithdrawalDate" /> 
		<result column="subject" jdbcType="VARCHAR" property="subject" />
		<result column="subjectid" jdbcType="VARCHAR" property="subjectId" />
		<result column="finalband" jdbcType="VARCHAR" property="finalBand" />
		<result column="sgp" jdbcType="VARCHAR" property="sgp" />
		<result column="performancelevel" jdbcType="BIGINT" property="performanceLevel" /> 
		<result column="nyperformancelevel" jdbcType="VARCHAR" property="nyPerformanceLevel" />
		<result column="invalidationcode" jdbcType="BIGINT" property="invalidationCode" /> 
		<result column="totallinkagelevelsmastered" jdbcType="VARCHAR" property="totalLinkageLevelsMastered" />
		<result column="iowalinkagelevelsmastered" jdbcType="VARCHAR" property="iowaLinkageLevelsMastered" />
		<result column="ee1" jdbcType="BIGINT" property="ee1" />
		<result column="ee2" jdbcType="BIGINT" property="ee2" />
		<result column="ee3" jdbcType="BIGINT" property="ee3" />
		<result column="ee4" jdbcType="BIGINT" property="ee4" />
		<result column="ee5" jdbcType="BIGINT" property="ee5" />
		<result column="ee6" jdbcType="BIGINT" property="ee6" />
		<result column="ee7" jdbcType="BIGINT" property="ee7" />
		<result column="ee8" jdbcType="BIGINT" property="ee8" />
		<result column="ee9" jdbcType="BIGINT" property="ee9" />
		<result column="ee10" jdbcType="BIGINT" property="ee10" />
		<result column="ee11" jdbcType="BIGINT" property="ee11" />
		<result column="ee12" jdbcType="BIGINT" property="ee12" />
		<result column="ee13" jdbcType="BIGINT" property="ee13" />
		<result column="ee14" jdbcType="BIGINT" property="ee14" />
		<result column="ee15" jdbcType="BIGINT" property="ee15" />
		<result column="ee16" jdbcType="BIGINT" property="ee16" />
		<result column="ee17" jdbcType="BIGINT" property="ee17" />
		<result column="ee18" jdbcType="BIGINT" property="ee18" />
		<result column="ee19" jdbcType="BIGINT" property="ee19" />
		<result column="ee20" jdbcType="BIGINT" property="ee20" />
		<result column="ee21" jdbcType="BIGINT" property="ee21" />
		<result column="ee22" jdbcType="BIGINT" property="ee22" />
		<result column="ee23" jdbcType="BIGINT" property="ee23" />
		<result column="ee24" jdbcType="BIGINT" property="ee24" />
		<result column="ee25" jdbcType="BIGINT" property="ee25" />
		<result column="ee26" jdbcType="BIGINT" property="ee26" />
		<result column="reportyear"  jdbcType="BIGINT" property="reportYear" />	      
  </resultMap>

	<resultMap id="CustomResultMap" type="edu.ku.cete.domain.UploadGrfFile" >  
		<result column="stateid" jdbcType="BIGINT" property="stateId" />
		<result column="state" jdbcType="VARCHAR" property="state" />
		<result column="districtid" jdbcType="BIGINT" property="districtId" />
		<result column="district" jdbcType="VARCHAR" property="districtName" />
		<result column="districtcode" jdbcType="VARCHAR" property="residenceDistrictIdentifier" />
		<result column="currentgradelevel" jdbcType="VARCHAR" property="currentGradelevel" />
		<result column="subject" jdbcType="VARCHAR" property="subject" />
		<result column="invalidationcode" jdbcType="BIGINT" property="invalidationCode" />  	
		<result column="performancelevel" jdbcType="BIGINT" property="performanceLevel" /> 
	</resultMap>

<resultMap id="TeacherResultMap" type="edu.ku.cete.domain.report.AlternateAggregateReport" >  
		<result column="kiteeducatoridentifier" jdbcType="VARCHAR" property="kiteEducatorIdentifier" />
		<result column="schoolid" jdbcType="BIGINT" property="schoolId" />	
	</resultMap>
	
	<resultMap id="AggregateReportResultMap" type="edu.ku.cete.domain.report.AlternateAggregateReport" extends="TeacherResultMap" >
		<result column="reportyear"  jdbcType="BIGINT" property="reportYear" />
		<result column="stateid" jdbcType="BIGINT" property="stateId" /> 
		<result column="state" jdbcType="VARCHAR" property="state" />
		<result column="statecode" jdbcType="VARCHAR" property="stateCode" />
		<result column="districtid" jdbcType="BIGINT" property="districtId" />
		<result column="district" jdbcType="VARCHAR" property="districtName" />
		<result column="district" jdbcType="VARCHAR" property="districtShortName" />
		<result column="districtcode" jdbcType="VARCHAR" property="residenceDistrictIdentifier" />
		<result column="school" jdbcType="VARCHAR" property="schoolName" />
		<collection  property="alternateAggregateStudents" ofType="edu.ku.cete.domain.report.AlternateAggregateStudents" javaType="ArrayList"  >
		    <id column="studentid" jdbcType="BIGINT" property="studentId" />
        	<result column="studentlegalfirstname" jdbcType="VARCHAR" property="legalFirstName" /> 
			<result column="studentlegallastname" jdbcType="VARCHAR" property="legalLastName" /> 
			<result column="educatorfirstname" jdbcType="VARCHAR" property="educatorFirstName" />
			<result column="educatorlastname" jdbcType="VARCHAR" property="educatorLastName" />	
        	<result column="currentgradelevel" jdbcType="VARCHAR" property="currentGradelevel" />
		        <collection  property="alternateAggregateSubject" ofType="edu.ku.cete.domain.report.AlternateAggregateSubject" javaType="ArrayList"  >
			       	<id column="id" jdbcType="BIGINT" property="id" />
			        <result column="subject" jdbcType="VARCHAR" property="subject" />
			        <result column="subjectcode" jdbcType="VARCHAR" property="subjectCode" />
		       		<result column="ee1" jdbcType="BIGINT" property="ee1" />
					<result column="ee2" jdbcType="BIGINT" property="ee2" />
					<result column="ee3" jdbcType="BIGINT" property="ee3" />
					<result column="ee4" jdbcType="BIGINT" property="ee4" />
					<result column="ee5" jdbcType="BIGINT" property="ee5" />
					<result column="ee6" jdbcType="BIGINT" property="ee6" />
					<result column="ee7" jdbcType="BIGINT" property="ee7" />
					<result column="ee8" jdbcType="BIGINT" property="ee8" />
					<result column="ee9" jdbcType="BIGINT" property="ee9" />
					<result column="ee10" jdbcType="BIGINT" property="ee10" />
					<result column="ee11" jdbcType="BIGINT" property="ee11" />
					<result column="ee12" jdbcType="BIGINT" property="ee12" />
					<result column="ee13" jdbcType="BIGINT" property="ee13" />
					<result column="ee14" jdbcType="BIGINT" property="ee14" />
					<result column="ee15" jdbcType="BIGINT" property="ee15" />
					<result column="ee16" jdbcType="BIGINT" property="ee16" />
					<result column="ee17" jdbcType="BIGINT" property="ee17" />
					<result column="ee18" jdbcType="BIGINT" property="ee18" />
					<result column="ee19" jdbcType="BIGINT" property="ee19" />
					<result column="ee20" jdbcType="BIGINT" property="ee20" />
					<result column="ee21" jdbcType="BIGINT" property="ee21" />
					<result column="ee22" jdbcType="BIGINT" property="ee22" />
					<result column="ee23" jdbcType="BIGINT" property="ee23" />
					<result column="ee24" jdbcType="BIGINT" property="ee24" />
					<result column="ee25" jdbcType="BIGINT" property="ee25" />
					<result column="ee26" jdbcType="BIGINT" property="ee26" />
					<result column="performancelevel" jdbcType="BIGINT" property="performanceLevel" />
					<result column="invalidationcode" jdbcType="BIGINT" property="invalidationCode" /> 
		     	</collection>   
	     </collection>   
	</resultMap>
	
	<resultMap id="subjectResultMap" type="edu.ku.cete.domain.UploadGrfFile" >  
		<result column="subject" jdbcType="VARCHAR" property="subject" />
		<result column="subjectid" jdbcType="BIGINT" property="subjectId" />
	</resultMap>
		
	<resultMap id="editStudentGrfResultMap" type="edu.ku.cete.domain.UploadGrfFile" >
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="externalUniqueRowIdentifier" jdbcType="BIGINT" property="externalUniqueRowIdentifier" />
		<result column="subject" jdbcType="VARCHAR" property="subject" />
		<result column="subjectid" jdbcType="VARCHAR" property="subjectId" />
		<result column="studentid" jdbcType="BIGINT" property="studentId" />  
		<result column="reportyear"  jdbcType="BIGINT" property="reportYear" />	   
		<result column="stateid" jdbcType="BIGINT" property="stateId" />   
		<result column="invalidationcode" jdbcType="BIGINT" property="invalidationCode" />
		<result column="studentlegalfirstname" jdbcType="VARCHAR" property="legalFirstName" /> 
		<result column="studentlegalmiddlename" jdbcType="VARCHAR" property="legalMiddleName" /> 
		<result column="studentlegallastname" jdbcType="VARCHAR" property="legalLastName" /> 
		<result column="generationcode" jdbcType="VARCHAR" property="generationCode" />   
		<result column="dateofbirth" jdbcType="TIMESTAMP" property="dateOfBirth" />    
		<result column="stateuse" jdbcType="TIMESTAMP" property="stateUse" />    
		<result column="statestudentidentifier" jdbcType="VARCHAR" property="stateStudentIdentifier" /> 
		<result column="currentgradelevel" jdbcType="VARCHAR" property="currentGradelevel" />  
		<result column="comprehensiverace" jdbcType="VARCHAR" property="comprehensiveRace" />   
		<result column="hispanicethnicity" jdbcType="VARCHAR" property="hispanicEthnicity" />   
		<result column="firstlanguage" jdbcType="VARCHAR" property="firstLanguage" />   		
		<result column="primarydisabilitycode" jdbcType="VARCHAR" property="primaryDisabilityCode" />   
		<result column="esolparticipationcode" jdbcType="VARCHAR" property="esolParticipationCode" />  
		<result column="gradeid" jdbcType="BIGINT" property="gradeId" />  
		<result column="attendanceschoolprogramidentifier" jdbcType="VARCHAR" property="attendanceSchoolProgramIdentifier" />
		<result column="attendanceschoolprogramname" jdbcType="VARCHAR" property="attendanceSchoolProgramName" />
		<result column="aypschoolidentifier" jdbcType="VARCHAR" property="aypSchoolIdentifier" />
		<result column="accountabilityDistrictIdentifier" jdbcType="VARCHAR" property="accountabilityDistrictIdentifier" />		
		<result column="course" jdbcType="VARCHAR" property="course" />		
		<result column="localstudentidentifier" jdbcType="VARCHAR" property="localStudentIdentifier" />
		<result column="aypschoolname" jdbcType="VARCHAR" property="aypSchoolName" />
		<result column="schoolcode" jdbcType="VARCHAR" property="schoolIdentifier" />
		<result column="school" jdbcType="VARCHAR" property="schoolName" />
		<result column="districtcode" jdbcType="VARCHAR" property="residenceDistrictIdentifier" />
		<result column="district" jdbcType="VARCHAR" property="districtName" />		
		<result column="schoolentrydate" jdbcType="TIMESTAMP" property="schoolEntryDate" />   
		<result column="districtentrydate" jdbcType="TIMESTAMP" property="districtEntryDate" /> 
		<result column="stateentrydate" jdbcType="TIMESTAMP" property="stateEntryDate" /> 
		<result column="educatoridentifier" jdbcType="VARCHAR" property="educatorIdentifier" />
		<result column="educatorfirstname" jdbcType="VARCHAR" property="educatorFirstName" />
		<result column="educatorlastname" jdbcType="VARCHAR" property="educatorLastName" />
		<result column="exitwithdrawaldate" jdbcType="TIMESTAMP" property="exitWithdrawalDate" />   
		<result column="exitwithdrawalcode" jdbcType="VARCHAR" property="exitWithdrawalType" />
	</resultMap>
	
 <sql id="Base_Column_List">
  	   id, assessmentprogramid, batchuploadprocessid, studentid, statestudentidentifier, aypschoolidentifier, accountabilityDistrictIdentifier,
       localstudentidentifier, currentgradelevel, course, gradeid, studentlegalfirstname, 
       studentlegalmiddlename, studentlegallastname, generationcode, 
       username, firstlanguage, dateofbirth, stateuse, gender, comprehensiverace, 
       hispanicethnicity, primarydisabilitycode, esolparticipationcode, 
       schoolentrydate, districtentrydate, stateentrydate, attendanceschoolprogramidentifier, 
       state, statecode, stateid, districtcode, district, districtid, schoolcode, 
       school, schoolid, educatorfirstname, 
       educatorlastname, educatorusername, educatoridentifier, kiteeducatoridentifier, 
       exitwithdrawaldate, exitwithdrawalcode, subject, subjectid, finalband, 
       sgp, performancelevel, nyperformancelevel, invalidationcode, 
       totallinkagelevelsmastered, iowalinkagelevelsmastered, 
       ee1, ee2, ee3, ee4, ee5, ee6, ee7, ee8, ee9, ee10, 
       ee11, ee12, ee13, ee14, ee15, ee16, ee17, ee18, ee19, 
       ee20, ee21, ee22, ee23, ee24, ee25, ee26, createddate, createduser, activeflag, 
       reportyear,modifieddate,modifieduser  
  </sql>
  
  
   <sql id="Upload_Common_Base_Column_List">
  		  linenumber, batchuploadid, uniquerowidentifier, studentid, statestudentidentifier, aypschoolidentifier, accountabilityDistrictIdentifier, 
          currentgradelevel, course, studentlegalfirstname, studentlegalmiddlename, 
          studentlegallastname, generationcode, username, firstlanguage, 
          dateofbirth, stateuse, gender, comprehensiverace, hispanicethnicity, primarydisabilitycode, 
          esolparticipationcode, schoolentrydate, districtentrydate, stateentrydate, 
          attendanceschoolprogramidentifier, state, districtcode, district, 
          schoolcode, school, educatorfirstname, educatorlastname, educatorusername, 
          educatoridentifier, kiteeducatoridentifier, subject, finalband, 
          sgp, performancelevel, invalidationcode, ee1, ee2, ee3, ee4, 
          ee5, ee6, ee7, ee8, ee9, ee10, ee11, ee12, ee13, ee14, ee15, 
          ee16, ee17, ee18, ee19, ee20, ee21, ee22, ee23, ee24, ee25, ee26
  </sql>
  
   <select id="getDistinctSubjects" resultType="java.lang.Long" >    
		select distinct subjectid from uploadgrffile 
			  where stateid = #{stateId,jdbcType=BIGINT}  
			  and recentversion is true
			  and activeflag is true and reportyear = #{reportYear,jdbcType=BIGINT} 
			  and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
		 order by subjectid
   </select>
 
   <select id="getDistinctGradesBySubjectId" resultType="java.lang.Long" >   
	  	select distinct gradeid from uploadgrffile 
			  where stateid = #{stateId,jdbcType=BIGINT}  
			  and recentversion is true
			  and activeflag is true and reportyear = #{reportYear,jdbcType=BIGINT} 
			  and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
			  and subjectid  = #{subjectId,jdbcType=BIGINT}
		 and gradeid is not null
		 order by gradeid  
   </select>

   <select id="getDistinctOrgIdsFromGeneralReasearch" resultType="java.lang.Long" >  
	   		select #{stateId,jdbcType=BIGINT} as orgids union
			select  distinct(districtid) 
				  from uploadgrffile 
				  where stateid = #{stateId,jdbcType=BIGINT} 
				  and activeflag is true 
				  and recentversion is true
				  and reportyear = #{reportYear,jdbcType=BIGINT}
				  and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
				  and subjectid = #{subjectId,jdbcType=BIGINT} 
			      and gradeid = #{gradeId,jdbcType=BIGINT}
			order by orgids 		
		 <if test="pageSize != null">
		   LIMIT #{pageSize} 
		 </if>
		 <if test="offset != null">
		   OFFSET #{offset}
		 </if>
   </select>
    
    <select id="getGeneralResearchDataBYOrgIdandSubjectidandgradeId" resultMap="CustomResultMap" > 
		select stateid,state,districtid,district,districtcode,upper(currentgradelevel) as currentGradelevel,
		subject,gradeid,subjectid,
		CASE 
			WHEN invalidationcode IN(1) THEN invalidationcode
			ELSE 0
		END as invalidationcode,
		performancelevel from uploadgrffile 
		where stateid = #{stateId,jdbcType=BIGINT} 
		and activeflag is true 
		and recentversion is true
		and reportyear = #{reportYear,jdbcType=BIGINT} 
		and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
		and (stateid = #{organizationId,jdbcType=BIGINT} or districtid = #{organizationId,jdbcType=BIGINT}) 
		and gradeid =#{gradeId,jdbcType=BIGINT} 
		and subjectid = #{subjectId,jdbcType=BIGINT}
		order by subject
 	</select>
 	
  <insert id="insertIncidentFileRecord" parameterType="edu.ku.cete.domain.UploadIncidentFile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 11:53:56 CDT 2017.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT nextval('uploadincidentfile_id_seq')
    </selectKey>
    insert into uploadincidentfile ( id,studentid,batchuploadprocessid,statestudentidentifier,state,stateid,studentlegalfirstname,studentlegalmiddlename,studentlegallastname,
  generationcode,dateofbirth,essentialelement,issuecode,createddate,createduser,activeflag,reportyear,modifieddate,modifieduser)
    values (#{id,jdbcType=BIGINT},#{studentId,jdbcType=BIGINT},#{batchUploadId,jdbcType=BIGINT},#{stateStudentIdentifier,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{stateId,jdbcType=BIGINT},#{legalFirstName,jdbcType=VARCHAR},#{legalMiddleName,jdbcType=VARCHAR},
    #{legalLastName,jdbcType=VARCHAR}, #{generationCode,jdbcType=VARCHAR}, #{dateOfBirth,jdbcType=DATE}, #{essentialElement,jdbcType=VARCHAR},#{issueCode,jdbcType=VARCHAR},
    now(),#{uploadedUserId,jdbcType=BIGINT},#{activeFlag,jdbcType=BOOLEAN},#{reportYear,jdbcType=BIGINT},now(),#{uploadedUserId,jdbcType=BIGINT})

  </insert>
  <insert id="insertScCodeFileRecord" parameterType="edu.ku.cete.domain.UploadScCodeFile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 11:53:56 CDT 2017.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT nextval('uploadsccodefile_id_seq')
    </selectKey>
    insert into uploadsccodefile ( id,studentid,state,stateid,batchuploadprocessid,statestudentidentifier,studentlegalfirstname,studentlegalmiddlename,studentlegallastname,
  generationcode,dateofbirth,specialcircumstancecode,ksdesccode,specialcircumstancelabel,essentialelement,assessment,createddate,createduser,activeflag,reportyear,modifieddate,modifieduser)
    values (#{id,jdbcType=BIGINT},#{studentId,jdbcType=BIGINT},#{state,jdbcType=VARCHAR},#{stateId,jdbcType=BIGINT},#{batchUploadId,jdbcType=BIGINT},#{stateStudentIdentifier,jdbcType=VARCHAR},#{legalFirstName,jdbcType=VARCHAR},#{legalMiddleName,jdbcType=VARCHAR},
    #{legalLastName,jdbcType=VARCHAR}, #{generationCode,jdbcType=VARCHAR}, #{dateOfBirth,jdbcType=DATE},#{specialCircumstanceCode,jdbcType=BIGINT},#{ksdeScCode,jdbcType=VARCHAR}, #{specialCircumstanceLabel,jdbcType=VARCHAR},
     #{essentialElement,jdbcType=VARCHAR},#{assessment,jdbcType=VARCHAR}, now(),#{uploadedUserId,jdbcType=BIGINT},#{activeFlag,jdbcType=BOOLEAN},#{reportYear,jdbcType=BIGINT},now(),#{uploadedUserId,jdbcType=BIGINT})

  </insert>
    
  <update id="insertGrfList" >    			
	\COPY tempuploadgrffile 	
		<if test="columnNames != null  and columnNames.size > 0">
      		 <foreach close=")" collection="columnNames" item="column" open="(" separator=",">
	    	    	${column}
	        </foreach>	        	
		</if>	
	FROM '${filePath}' USING DELIMITERS ',' WITH CSV HEADER;
  </update>
  
  <delete id="deleteTempGrfFileByBatchUploadId" parameterType="java.lang.Long" > 
 	 DELETE FROM tempuploadgrffile  WHERE batchuploadid = #{batchUploadId,jdbcType=BIGINT}
  </delete>
 
    <insert id="insertGrfFileRecord" parameterType="edu.ku.cete.domain.UploadGrfFile" >
     <if test="original != true">
       update uploadgrffile set recentversion = false, modifieddate = now(), modifieduser = #{uploadedUserId,jdbcType=BIGINT} where 
         studentid = #{studentId,jdbcType=BIGINT} 
          <if test="subjectId != null" >
			  and subjectid = #{subjectId}
		  </if>	
		  <if test="subjectId == null" >
			  and subjectid is null
		  </if>
         and reportyear = #{reportYear,jdbcType=BIGINT}
         and recentversion = true;
     </if>

	<if test="original == true"> 
	    insert into uploadgrffile (
	      externaluniquerowidentifier,assessmentprogramid,batchuploadprocessid,studentid,statestudentidentifier,aypschoolidentifier, accountabilityDistrictIdentifier, localstudentidentifier,
	  currentgradelevel, course, gradeid,studentlegalfirstname,studentlegalmiddlename,studentlegallastname,generationcode,username,
	  firstlanguage,dateofbirth, stateuse, gender,comprehensiverace,hispanicethnicity,primarydisabilitycode,esolparticipationcode,	
	  schoolentrydate,districtentrydate ,stateentrydate ,attendanceschoolprogramidentifier,state,statecode,stateid,districtcode,district,districtid,
	  schoolcode,school,schoolid,educatorfirstname,educatorlastname,educatorusername,educatoridentifier,kiteeducatoridentifier ,
	  exitwithdrawaldate,exitwithdrawalcode,subject,subjectid,finalband,sgp,performancelevel,nyperformancelevel,invalidationcode,
	  totallinkagelevelsmastered,iowalinkagelevelsmastered,ee1,ee2,ee3,ee4,ee5,ee6,ee7,ee8,ee9,ee10,ee11,ee12,ee13,ee14,ee15,ee16,ee17,ee18,ee19,ee20,
	  ee21,ee22,ee23,ee24,ee25,ee26,createddate,createduser,activeflag,reportyear,modifieddate,modifieduser,versionid, gradechange, strkiteeducatoridentifier,recentversion)
	    values (#{externalUniqueRowIdentifier,jdbcType=BIGINT},#{assessmentProgramId,jdbcType=BIGINT},#{batchUploadId,jdbcType=BIGINT},#{studentId,jdbcType=BIGINT},
	  #{stateStudentIdentifier,jdbcType=VARCHAR},  #{aypSchoolIdentifier,jdbcType=VARCHAR}, #{accountabilityDistrictIdentifier,jdbcType=VARCHAR},
	  #{localStudentIdentifier,jdbcType=VARCHAR},  #{currentGradelevel,jdbcType=VARCHAR},  #{course,jdbcType=VARCHAR}, #{gradeId,jdbcType=BIGINT},#{legalFirstName,jdbcType=VARCHAR},
	  #{legalMiddleName,jdbcType=VARCHAR},  #{legalLastName,jdbcType=VARCHAR},#{generationCode,jdbcType=VARCHAR},
	  #{userName,jdbcType=VARCHAR},  #{firstLanguage,jdbcType=VARCHAR},#{dateOfBirth,jdbcType=DATE},#{stateUse,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
	  #{comprehensiveRace,jdbcType=VARCHAR},  #{hispanicEthnicity,jdbcType=VARCHAR},#{primaryDisabilityCode,jdbcType=VARCHAR},
	  #{esolParticipationCode,jdbcType=VARCHAR},  #{schoolEntryDate,jdbcType=DATE},  #{districtEntryDate,jdbcType=DATE},
	  #{stateEntryDate,jdbcType=DATE},#{attendanceSchoolProgramIdentifier,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{stateCode,jdbcType=VARCHAR},#{stateId,jdbcType=BIGINT},
	  #{residenceDistrictIdentifier,jdbcType=VARCHAR},#{districtName,jdbcType=VARCHAR},#{districtId,jdbcType=BIGINT},#{schoolIdentifier,jdbcType=VARCHAR},#{schoolName,jdbcType=VARCHAR},#{schoolId,jdbcType=BIGINT},
	  #{educatorFirstName,jdbcType=VARCHAR},#{educatorLastName,jdbcType=VARCHAR},#{educatorUserName,jdbcType=VARCHAR},#{educatorIdentifier,jdbcType=VARCHAR},#{kiteEducatorIdentifier,jdbcType=VARCHAR},
	  #{exitWithdrawalDate,jdbcType=DATE},#{exitWithdrawalType,jdbcType=VARCHAR},#{subject,jdbcType=VARCHAR},#{subjectId,jdbcType=BIGINT},
	  #{finalBand,jdbcType=VARCHAR},#{sgp,jdbcType=VARCHAR},#{performanceLevel,jdbcType=BIGINT},
	  #{nyPerformanceLevel,jdbcType=BIGINT},#{invalidationCode,jdbcType=BIGINT},#{totalLinkageLevelsMastered,jdbcType=VARCHAR},
	  #{iowaLinkageLevelsMastered,jdbcType=VARCHAR},#{ee1,jdbcType=BIGINT},#{ee2,jdbcType=BIGINT},#{ee3,jdbcType=BIGINT},
	  #{ee4,jdbcType=BIGINT},#{ee5,jdbcType=BIGINT},#{ee6,jdbcType=BIGINT},#{ee7,jdbcType=BIGINT},#{ee8,jdbcType=BIGINT},
	  #{ee9,jdbcType=BIGINT},#{ee10,jdbcType=BIGINT},#{ee11,jdbcType=BIGINT},#{ee12,jdbcType=BIGINT},#{ee13,jdbcType=BIGINT},
	  #{ee14,jdbcType=BIGINT},#{ee15,jdbcType=BIGINT},#{ee16,jdbcType=BIGINT},#{ee17,jdbcType=BIGINT},#{ee18,jdbcType=BIGINT},
	  #{ee19,jdbcType=BIGINT},#{ee20,jdbcType=BIGINT},#{ee21,jdbcType=BIGINT},#{ee22,jdbcType=BIGINT},#{ee23,jdbcType=BIGINT},
	  #{ee24,jdbcType=BIGINT},  #{ee25,jdbcType=BIGINT},#{ee26,jdbcType=BIGINT},now(),#{uploadedUserId,jdbcType=BIGINT},
	  #{activeFlag,jdbcType=BOOLEAN},#{reportYear,jdbcType=BIGINT},now(),#{uploadedUserId,jdbcType=BIGINT},0,
	  #{gradeChange,jdbcType=BOOLEAN}, #{strKiteEducatorIdentifier,jdbcType=VARCHAR}, #{recentVersion,jdbcType=VARCHAR})
  </if>
  
  <if test="original != true  and gradeChange != true"> 
	   insert into uploadgrffile (
	      externaluniquerowidentifier,assessmentprogramid,batchuploadprocessid,studentid,statestudentidentifier,aypschoolidentifier, accountabilityDistrictIdentifier, localstudentidentifier,
	  currentgradelevel, course, gradeid,studentlegalfirstname,studentlegalmiddlename,studentlegallastname,generationcode,username,
	  firstlanguage,dateofbirth, stateuse, gender,comprehensiverace,hispanicethnicity,primarydisabilitycode,esolparticipationcode,	
	  schoolentrydate,districtentrydate ,stateentrydate ,attendanceschoolprogramidentifier,state,statecode,stateid,districtcode,district,districtid,
	  schoolcode,school,schoolid,educatorfirstname,educatorlastname,educatorusername,educatoridentifier,kiteeducatoridentifier ,
	  exitwithdrawaldate,exitwithdrawalcode,subject,subjectid,finalband,sgp,performancelevel,nyperformancelevel,invalidationcode,
	  totallinkagelevelsmastered,iowalinkagelevelsmastered,ee1,ee2,ee3,ee4,ee5,ee6,ee7,ee8,ee9,ee10,ee11,ee12,ee13,ee14,ee15,ee16,ee17,ee18,ee19,ee20,
	  ee21,ee22,ee23,ee24,ee25,ee26,createddate,createduser,activeflag,reportyear,modifieddate,modifieduser,versionid, gradechange, strkiteeducatoridentifier,recentversion)
	     (select #{externalUniqueRowIdentifier,jdbcType=BIGINT},#{assessmentProgramId,jdbcType=BIGINT},#{batchUploadId,jdbcType=BIGINT},#{studentId,jdbcType=BIGINT},
	  #{stateStudentIdentifier,jdbcType=VARCHAR},  #{aypSchoolIdentifier,jdbcType=VARCHAR},  #{accountabilityDistrictIdentifier,jdbcType=VARCHAR},
	  #{localStudentIdentifier,jdbcType=VARCHAR},  #{currentGradelevel,jdbcType=VARCHAR},  course, #{gradeId,jdbcType=BIGINT},#{legalFirstName,jdbcType=VARCHAR},
	  #{legalMiddleName,jdbcType=VARCHAR},  #{legalLastName,jdbcType=VARCHAR},#{generationCode,jdbcType=VARCHAR},
	  #{userName,jdbcType=VARCHAR},  #{firstLanguage,jdbcType=VARCHAR},#{dateOfBirth,jdbcType=DATE}, #{stateUse,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
	  #{comprehensiveRace,jdbcType=VARCHAR},  #{hispanicEthnicity,jdbcType=VARCHAR},#{primaryDisabilityCode,jdbcType=VARCHAR},
	  #{esolParticipationCode,jdbcType=VARCHAR},  #{schoolEntryDate,jdbcType=DATE},  #{districtEntryDate,jdbcType=DATE},
	  #{stateEntryDate,jdbcType=DATE},#{attendanceSchoolProgramIdentifier,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{stateCode,jdbcType=VARCHAR},#{stateId,jdbcType=BIGINT},
	  #{residenceDistrictIdentifier,jdbcType=VARCHAR},#{districtName,jdbcType=VARCHAR},#{districtId,jdbcType=BIGINT},#{schoolIdentifier,jdbcType=VARCHAR},#{schoolName,jdbcType=VARCHAR},#{schoolId,jdbcType=BIGINT},
	  #{educatorFirstName,jdbcType=VARCHAR},#{educatorLastName,jdbcType=VARCHAR},#{educatorUserName,jdbcType=VARCHAR},#{educatorIdentifier,jdbcType=VARCHAR},#{kiteEducatorIdentifier,jdbcType=VARCHAR},
	  #{exitWithdrawalDate,jdbcType=DATE},#{exitWithdrawalType,jdbcType=VARCHAR},#{subject,jdbcType=VARCHAR},#{subjectId,jdbcType=BIGINT},
	  finalband,sgp,performancelevel,nyperformancelevel,#{invalidationCode,jdbcType=BIGINT},totallinkagelevelsmastered,iowalinkagelevelsmastered,ee1,ee2,ee3,ee4,ee5,ee6,ee7,ee8,ee9,ee10,ee11,ee12,ee13,ee14,ee15,ee16,ee17,ee18,ee19,ee20,
	  ee21,ee22,ee23,ee24,ee25,ee26,now(),#{uploadedUserId,jdbcType=BIGINT},
	  #{activeFlag,jdbcType=BOOLEAN},#{reportYear,jdbcType=BIGINT},now(),#{uploadedUserId,jdbcType=BIGINT},
	       (select max(versionid)+1 from uploadgrffile where studentid = #{studentId,jdbcType=BIGINT} 
	        <if test="subjectId != null" >
	               and subjectid = #{subjectId}
	         </if>	
			<if test="subjectId == null" >
				and subjectid is null
			</if>
	         and activeflag is true 
	         and reportyear = #{reportYear,jdbcType=BIGINT}),
	  #{gradeChange,jdbcType=BOOLEAN}, #{strKiteEducatorIdentifier,jdbcType=VARCHAR}, #{recentVersion,jdbcType=VARCHAR} from uploadgrffile where 
	  studentid = #{studentId,jdbcType=BIGINT} and externaluniquerowidentifier = #{externalUniqueRowIdentifier,jdbcType=BIGINT}
			<if test="subjectId != null" >
	            and subjectid = #{subjectId}
	        </if>	
			<if test="subjectId == null" >
				and subjectid is null
			</if>
			order by versionid asc limit 1)
  </if>
  
  <if test="original != true and gradeChange == true"> 
	   insert into uploadgrffile (
	      externaluniquerowidentifier,assessmentprogramid,batchuploadprocessid,studentid,statestudentidentifier,aypschoolidentifier, accountabilityDistrictIdentifier, localstudentidentifier,
	  currentgradelevel, course, gradeid,studentlegalfirstname,studentlegalmiddlename,studentlegallastname,generationcode,username,
	  firstlanguage,dateofbirth, stateuse, gender,comprehensiverace,hispanicethnicity,primarydisabilitycode,esolparticipationcode,	
	  schoolentrydate,districtentrydate ,stateentrydate ,attendanceschoolprogramidentifier,state,statecode,stateid,districtcode,district,districtid,
	  schoolcode,school,schoolid,educatorfirstname,educatorlastname,educatorusername,educatoridentifier,kiteeducatoridentifier ,
	  exitwithdrawaldate,exitwithdrawalcode,subject,subjectid,finalband,sgp,performancelevel,nyperformancelevel,invalidationcode,
	  totallinkagelevelsmastered,iowalinkagelevelsmastered,ee1,ee2,ee3,ee4,ee5,ee6,ee7,ee8,ee9,ee10,ee11,ee12,ee13,ee14,ee15,ee16,ee17,ee18,ee19,ee20,
	  ee21,ee22,ee23,ee24,ee25,ee26,createddate,createduser,activeflag,reportyear,modifieddate,modifieduser,versionid, gradechange, strkiteeducatoridentifier,recentversion)
	     (select #{externalUniqueRowIdentifier,jdbcType=BIGINT},#{assessmentProgramId,jdbcType=BIGINT},#{batchUploadId,jdbcType=BIGINT},#{studentId,jdbcType=BIGINT},
	  #{stateStudentIdentifier,jdbcType=VARCHAR},  #{aypSchoolIdentifier,jdbcType=VARCHAR},  #{accountabilityDistrictIdentifier,jdbcType=VARCHAR},
	  #{localStudentIdentifier,jdbcType=VARCHAR},  #{currentGradelevel,jdbcType=VARCHAR},  course, #{gradeId,jdbcType=BIGINT},#{legalFirstName,jdbcType=VARCHAR},
	  #{legalMiddleName,jdbcType=VARCHAR},  #{legalLastName,jdbcType=VARCHAR},#{generationCode,jdbcType=VARCHAR},
	  #{userName,jdbcType=VARCHAR},  #{firstLanguage,jdbcType=VARCHAR},#{dateOfBirth,jdbcType=DATE}, #{stateUse,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
	  #{comprehensiveRace,jdbcType=VARCHAR},  #{hispanicEthnicity,jdbcType=VARCHAR},#{primaryDisabilityCode,jdbcType=VARCHAR},
	  #{esolParticipationCode,jdbcType=VARCHAR},  #{schoolEntryDate,jdbcType=DATE},  #{districtEntryDate,jdbcType=DATE},
	  #{stateEntryDate,jdbcType=DATE},#{attendanceSchoolProgramIdentifier,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{stateCode,jdbcType=VARCHAR},#{stateId,jdbcType=BIGINT},
	  #{residenceDistrictIdentifier,jdbcType=VARCHAR},#{districtName,jdbcType=VARCHAR},#{districtId,jdbcType=BIGINT},#{schoolIdentifier,jdbcType=VARCHAR},#{schoolName,jdbcType=VARCHAR},#{schoolId,jdbcType=BIGINT},
	  #{educatorFirstName,jdbcType=VARCHAR},#{educatorLastName,jdbcType=VARCHAR},#{educatorUserName,jdbcType=VARCHAR},#{educatorIdentifier,jdbcType=VARCHAR},#{kiteEducatorIdentifier,jdbcType=VARCHAR},
	  #{exitWithdrawalDate,jdbcType=DATE},#{exitWithdrawalType,jdbcType=VARCHAR},#{subject,jdbcType=VARCHAR},#{subjectId,jdbcType=BIGINT},
	  finalband,sgp,#{performanceLevel,jdbcType=BIGINT},nyperformancelevel,#{invalidationCode,jdbcType=BIGINT},totallinkagelevelsmastered,iowalinkagelevelsmastered,#{ee1,jdbcType=BIGINT},#{ee2,jdbcType=BIGINT},#{ee3,jdbcType=BIGINT},
	  #{ee4,jdbcType=BIGINT},#{ee5,jdbcType=BIGINT},#{ee6,jdbcType=BIGINT},#{ee7,jdbcType=BIGINT},#{ee8,jdbcType=BIGINT},
	  #{ee9,jdbcType=BIGINT},#{ee10,jdbcType=BIGINT},#{ee11,jdbcType=BIGINT},#{ee12,jdbcType=BIGINT},#{ee13,jdbcType=BIGINT},
	  #{ee14,jdbcType=BIGINT},#{ee15,jdbcType=BIGINT},#{ee16,jdbcType=BIGINT},#{ee17,jdbcType=BIGINT},#{ee18,jdbcType=BIGINT},
	  #{ee19,jdbcType=BIGINT},#{ee20,jdbcType=BIGINT},#{ee21,jdbcType=BIGINT},#{ee22,jdbcType=BIGINT},#{ee23,jdbcType=BIGINT},
	  #{ee24,jdbcType=BIGINT},  #{ee25,jdbcType=BIGINT},#{ee26,jdbcType=BIGINT},now(),#{uploadedUserId,jdbcType=BIGINT},
	  #{activeFlag,jdbcType=BOOLEAN},#{reportYear,jdbcType=BIGINT},now(),#{uploadedUserId,jdbcType=BIGINT},
	       (select max(versionid)+1 from uploadgrffile where studentid = #{studentId,jdbcType=BIGINT} 
	        <if test="subjectId != null" >
	               and subjectid = #{subjectId}
	         </if>	
			<if test="subjectId == null" >
				and subjectid is null
			</if>
	         and activeflag is true 
	         and reportyear = #{reportYear,jdbcType=BIGINT}),
	  #{gradeChange,jdbcType=BOOLEAN}, #{strKiteEducatorIdentifier,jdbcType=VARCHAR}, #{recentVersion,jdbcType=VARCHAR} from uploadgrffile where 
	  studentid = #{studentId,jdbcType=BIGINT} and externaluniquerowidentifier = #{externalUniqueRowIdentifier,jdbcType=BIGINT}
			<if test="subjectId != null" >
	            and subjectid = #{subjectId}
	        </if>	
			<if test="subjectId == null" >
				and subjectid is null
			</if>
			order by versionid asc limit 1)
  </if>
  </insert>
 <update id="updateScCodeFileRecordsByStateAndReportYear">
   update uploadsccodefile set activeflag=#{status,jdbcType=BOOLEAN},modifieddate=now(),modifieduser=#{uploadedUserId,jdbcType=BIGINT} where stateid=#{state,jdbcType=BIGINT} 
   <if test="batchuploadprocessid != null" > 
   and batchuploadprocessid= #{batchuploadprocessid,jdbcType=BIGINT}
  </if> and reportyear= #{reportYear,jdbcType=BIGINT};
 </update> 
  <update id="updateIncidentFileFileRecordsByStateAndReportYear">
   update uploadincidentfile set activeflag=#{status,jdbcType=BOOLEAN},modifieddate=now(),modifieduser=#{uploadedUserId,jdbcType=BIGINT} where stateid=#{state,jdbcType=BIGINT} and reportyear= #{reportYear,jdbcType=BIGINT}
  <if test="batchuploadprocessid != null" > 
   and batchuploadprocessid= #{batchuploadprocessid,jdbcType=BIGINT}
  </if>;
 </update> 
 <update id="updateGrfFileRecordsByStateAndReportYear">
   update uploadgrffile set activeflag=#{status,jdbcType=BOOLEAN},modifieddate=now(),modifieduser=#{uploadedUserId,jdbcType=BIGINT} where stateid=#{state,jdbcType=BIGINT} and reportyear= #{reportYear,jdbcType=BIGINT} 
  <if test="batchuploadprocessid != null" > 
   and batchuploadprocessid= #{batchuploadprocessid,jdbcType=BIGINT}
  </if>
   and assessmentProgramId = #{assessmentProgramId,jdbcType=BIGINT};
 </update> 
 
 
  <select id="getDLMIncidentExtract" resultType="edu.ku.cete.domain.UploadIncidentFile">
		select studentid as studentId,  statestudentidentifier as stateStudentIdentifier,
			state as state,
			studentlegalfirstname as legalFirstName,
			studentlegalmiddlename as legalMiddleName,
			studentlegallastname as legalLastName,
			generationcode as generationCode,
			dateofbirth as dateOfBirth,
			essentialelement as essentialElement,
			issuecode as issueCode,
			createddate as createdDate 
			from uploadincidentfile	where stateid = #{stateId} and activeflag is true  and reportyear = #{year}
			order by id asc
	</select>
  			
  <select id="getDLMSpecialCircumstanceExtract" resultType="edu.ku.cete.domain.UploadScCodeFile">
		 select 
		 	studentid as studentId,
		 	state as state,
            statestudentidentifier as stateStudentIdentifier,
            studentlegalfirstname as legalFirstName, 
            studentlegalmiddlename as legalMiddleName, 
            studentlegallastname as legalLastName, 
            generationcode as generationCode, 
            dateofbirth as dateOfBirth, 
            specialcircumstancecode as specialCircumstanceCode, 
            ksdesccode as ksdeScCode, 
            specialcircumstancelabel as specialCircumstanceLabel, 
            essentialelement as essentialElement, 
            assessment as assessment,
            createddate as createdDate
             from uploadsccodefile	where stateid = #{stateId} and activeflag is true and reportyear = #{year}
             order by id asc
	</select>
	<select id="getDLMGeneralResearchExtract" resultType="edu.ku.cete.domain.UploadGrfFile">
		select  studentid as studentId,
				  externaluniquerowidentifier	as externalUniqueRowIdentifier,
  				  stateStudentIdentifier as stateStudentIdentifier,
				  aypSchoolIdentifier as aypSchoolIdentifier,
				  accountabilityDistrictIdentifier as accountabilityDistrictIdentifier,
				  localStudentIdentifier as localStudentIdentifier,
				  upper(currentgradelevel) as currentGradelevel,
				  course as course,
				  studentlegalfirstname as legalFirstName,
				  studentlegalmiddlename as legalMiddleName,
				  studentlegallastname as legalLastName,
				  generationCode as generationCode,
				  userName as userName,
				  firstLanguage as firstLanguage,
				  dateOfBirth as dateOfBirth, stateuse as stateuse,
				  gender as gender,
				  comprehensiveRace as comprehensiveRace,
				  hispanicEthnicity as hispanicEthnicity,
				  primaryDisabilityCode as primaryDisabilityCode,
				  esolParticipationCode as esolParticipationCode,
				  schoolEntryDate as schoolEntryDate,
				  districtEntryDate as districtEntryDate,
				  stateEntryDate as stateEntryDate,
				  attendanceSchoolProgramIdentifier as attendanceSchoolProgramIdentifier,
				  state as state,
				  districtcode as residenceDistrictIdentifier,
				  district as districtName,
				  schoolcode as schoolIdentifier,
				  school as schoolName,
				  educatorFirstName as educatorFirstName,
				  educatorLastName as educatorLastName,
				  educatorUserName as educatorUserName,
				  educatorIdentifier as educatorIdentifier,
				  kiteEducatorIdentifier as kiteEducatorIdentifier,
				  exitWithdrawalDate as exitWithdrawalDate,
				  exitwithdrawalcode as exitWithdrawalType,
				  subject as subject,
				  finalBand as finalBand,
				  sgp as sgp,
				  performanceLevel as performanceLevel,
				  nyPerformanceLevel as nyPerformanceLevel,
				  invalidationCode as invalidationCode,
				  totalLinkageLevelSmastered as totalLinkageLevelSmastered,
				  iowaLinkageLevelSmastered as iowaLinkageLevelSmastered,
				  ee1 as ee1,
				  ee2 as ee2,
				  ee3 as ee3,
				  ee4 as ee4,
				  ee5 as ee5,
				  ee6 as ee6,
				  ee7 as ee7,
				  ee8 as ee8,
				  ee9 as ee9,
				  ee10 as ee10,
				  ee11 as ee11,
				  ee12 as ee12,
				  ee13 as ee13,
				  ee14 as ee14,
				  ee15 as ee15,
				  ee16 as ee16,
				  ee17 as ee17,
				  ee18 as ee18,
				  ee19 as ee19,
				  ee20 as ee20,
				  ee21 as ee21,
				  ee22 as ee22,
				  ee23 as ee23,
				  ee24 as ee24,
				  ee25 as ee25,
				  ee26 as ee26,
				  createddate as createdDate
				  from uploadgrffile where  activeflag is true
				  <if test="stateId != null" >
				  and stateid = #{stateId}
				  </if>	
				  <if test="districtId != null" > 
				  	and	districtid = #{districtId}				  	
				  </if>	
				  <if test="schoolId != null" > 
				  	and	schoolid = #{schoolId}				  	
				  </if>
				  <if test="subjectId != null" > 
				  	and	subjectid = #{subjectId}				  	
				  </if>
				  <if test="gradeId != null" > 
				  	and	gradeid = #{gradeId}				  	
				  </if>
				  and reportyear = #{year} 
				  order by id asc
	</select>
  	<select id="getDistrictForGRF" resultType="edu.ku.cete.domain.UploadGrfFile">  		
  			select distinct(districtid)  as districtId, 
  			org.organizationname as districtName
  			from uploadgrffile ugrf
			inner join organization org on org.id = ugrf.districtid 
			where stateid = #{stateId} and ugrf.reportyear = #{reportYear} and ugrf.activeflag is true order by districtName asc		
  	</select>
  			
  	<select id ="getSchoolsInDistrictForGRF" resultType="edu.ku.cete.domain.UploadGrfFile">
  			select distinct(schoolid) as schoolId,
  				school as schoolName
  			from uploadgrffile where 
  			<if test="districtId != null" > 
  				districtid = #{districtId} 
  			</if>
  			<if test="stateId != null" > 
  				and stateid = #{stateId} 
  			</if>
  			and activeflag is true order by schoolName asc
  	</select>
  	<select id="getContentAreasforGRF" resultType="edu.ku.cete.domain.UploadGrfFile">
  		select distinct(subjectid) as subjectId, 
  		case lower(subject) when 'm' then 'Math' 
  		when 'math' then 'M'
  		when  'ela' then 'ELA'
  		when 'ss' then 'SS'
  		when 'sci' then 'Sci'
  		ELSE lower(subject) end as subject
  		 from uploadgrffile where activeflag is true and subjectid is not null
  		 <if test="stateId != null" > 
  		 	and stateid = #{stateId} 
  		 </if>
  		 <if test="districtId != null" > 
  		  	and  districtid = #{districtId}  
  		 </if>  		 
  		 <if test="schoolId != null" > 
  		 	and  schoolid = #{schoolId} 
  		 </if>  
  		 order by subject asc	 
  	</select>
  	<select id="getGradeCourseByGRF" resultType="edu.ku.cete.domain.UploadGrfFile">
  		select distinct(gradeid) as gradeId, upper(currentgradelevel) as currentGradelevel
  		 from uploadgrffile where activeflag is true
  		 <if test="districtId != null" > 
  		 and districtid = #{districtId}  
  		 </if>
  		  <if test="stateId != null" > 
  		 and stateid = #{stateId} 
  		 </if>
  		  <if test="schoolId != null" > 
  		 and schoolid = #{schoolId}  
  		 </if>
  		 <if test="subjectId != null" > 
  		 and subjectid = #{subjectId}  
  		 </if>
  		 order by currentGradelevel asc
  	</select>
 <delete id="deleteFailedBatchGrfFileRecords" parameterType="java.lang.Long">
		 delete from uploadgrffile where batchuploadprocessid= #{batchUploadId,jdbcType=BIGINT}; 
 </delete>
  <delete id="deleteBatchFailedScCodeFileRecords" parameterType="java.lang.Long">
 		  delete from uploadsccodefile where batchuploadprocessid= #{batchUploadId,jdbcType=BIGINT}; 
 </delete>
  <delete id="deleteFailedBatchIncidentFileRecords" parameterType="java.lang.Long">
 		  delete from uploadincidentfile where batchuploadprocessid= #{batchUploadId,jdbcType=BIGINT}; 
 </delete>
 
   <select id="getGrfStudentRecord" resultType="edu.ku.cete.domain.UploadGrfFile">
  		select studentid as studentId,
  				  assessmentprogramid as assessmentProgramId,
  				  reportyear as reportYear,  				  
				  externaluniquerowidentifier	as externalUniqueRowIdentifier,
  				  stateStudentIdentifier as stateStudentIdentifier,
				  aypSchoolIdentifier as aypSchoolIdentifier,
				  accountabilityDistrictIdentifier as accountabilityDistrictIdentifier,
				  localStudentIdentifier as localStudentIdentifier,
				  upper(currentgradelevel) as currentGradelevel,
				  course as course,
				  studentlegalfirstname as legalFirstName,
				  studentlegalmiddlename as legalMiddleName,
				  studentlegallastname as legalLastName,
				  generationCode as generationCode,
				  userName as userName,
				  firstLanguage as firstLanguage,
				  dateOfBirth as dateOfBirth, stateuse as stateuse,
				  gender as gender,
				  comprehensiveRace as comprehensiveRace,
				  hispanicEthnicity as hispanicEthnicity,
				  primaryDisabilityCode as primaryDisabilityCode,
				  esolParticipationCode as esolParticipationCode,
				  schoolEntryDate as schoolEntryDate,
				  districtEntryDate as districtEntryDate,
				  stateEntryDate as stateEntryDate,
				  attendanceSchoolProgramIdentifier as attendanceSchoolProgramIdentifier,
				  stateid as stateId,
				  state as state,
				  statecode as stateCode,
				  districtcode as residenceDistrictIdentifier,
				  district as districtName,
				  schoolcode as schoolIdentifier,
				  school as schoolName,
				  educatorFirstName as educatorFirstName,
				  educatorLastName as educatorLastName,
				  educatorUserName as educatorUserName,
				  educatorIdentifier as educatorIdentifier,
				  kiteEducatorIdentifier as kiteEducatorIdentifier,
				  exitWithdrawalDate as exitWithdrawalDate,
				  exitwithdrawalcode as exitWithdrawalType,
				  subject as subject,
				  subjectid as subjectId,
				  gradeid as gradeId,
				  finalBand as finalBand,
				  sgp as sgp,
				  performanceLevel as performanceLevel,
				  nyPerformanceLevel as nyPerformanceLevel,
				  invalidationCode as invalidationCode,
				  totalLinkageLevelSmastered as totalLinkageLevelSmastered,
				  iowaLinkageLevelSmastered as iowaLinkageLevelSmastered,
				  ee1 as ee1,
				  ee2 as ee2,
				  ee3 as ee3,
				  ee4 as ee4,
				  ee5 as ee5,
				  ee6 as ee6,
				  ee7 as ee7,
				  ee8 as ee8,
				  ee9 as ee9,
				  ee10 as ee10,
				  ee11 as ee11,
				  ee12 as ee12,
				  ee13 as ee13,
				  ee14 as ee14,
				  ee15 as ee15,
				  ee16 as ee16,
				  ee17 as ee17,
				  ee18 as ee18,
				  ee19 as ee19,
				  ee20 as ee20,
				  ee21 as ee21,
				  ee22 as ee22,
				  ee23 as ee23,
				  ee24 as ee24,
				  ee25 as ee25,
				  ee26 as ee26,
				  createddate as createdDate
				  from uploadgrffile where				  
				  studentid = #{studentId}		  	
				  <if test="reportYear != null" >
				     and reportyear = #{reportYear}
				  </if>	
				  <if test="externalUniqueRowIdentifier != null" >
				     and externaluniquerowidentifier = #{externalUniqueRowIdentifier}
				  </if>	
				  <if test="stateStudentIdentifier != null" >
				     and stateStudentIdentifier = #{stateStudentIdentifier}
				  </if>	
				  <if test="subjectId != null" >
				     and subjectid = #{subjectId}
				  </if>	
				  <if test="subjectId == null" >
				     and subjectid is null
				  </if>
				  <if test="versionId != null" >
				     and versionid = #{versionId}
				  </if>
				  <if test="batchUploadId != null" >
				     and batchuploadprocessid = #{batchUploadId}
				  </if>	
  	</select>
  	
  	<select id="getStudentIdsFromGRFBySSID" resultType="Long">  	
  	select distinct ugf.studentid 
  	from uploadgrffile ugf
    where  ugf.stateStudentIdentifier = #{stateStudentIdentifier} and recentversion is true 
      <if test="reportYear != null" >
	     and ugf.reportyear = #{reportYear}
	  </if>
	  <if test="stateId != null" >
	     and ugf.stateid = #{stateId}
	  </if>	
	  <if test="versionId != null" >
	     and ugf.versionid = #{versionId}
	  </if>
  	</select>
  	
  	<delete id="clearRecordsOnOriginalGRFUpload">
  		DELETE from uploadgrffile where assessmentProgramId = #{assessmentProgramId,jdbcType=BIGINT}  
  		         <if test="reportYear != null" >
				     and reportyear = #{reportYear}
				  </if>
				  <if test="stateId != null" >
				     and stateid = #{stateId}
				  </if>	
  	</delete>
  	
  	   <select id="getDistinctTeacherIdsFromGeneralReasearch" resultMap="TeacherResultMap" >  		
		select distinct kiteeducatoridentifier,schoolid	from uploadgrffile 
		where stateid = #{stateId,jdbcType=BIGINT} 
		and reportyear = #{reportYear,jdbcType=BIGINT}
		and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
		and activeflag is true
		and recentversion is true 
		order by kiteeducatoridentifier,schoolid	
		 <if test="pageSize != null">
		   LIMIT #{pageSize} 
		 </if>
		 <if test="offset != null">
		   OFFSET #{offset}
		 </if>
   </select>
   
   <select id="getDistinctOrganizationIdFromGeneralReasearch" resultMap="TeacherResultMap" >  		
		select distinct schoolid from uploadgrffile 
		where stateid = #{stateId,jdbcType=BIGINT} 
		and reportyear = #{reportYear,jdbcType=BIGINT}
		and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
		and activeflag is true
		and recentversion is true   
		order by schoolid 	
		 <if test="pageSize != null">
		   LIMIT #{pageSize} 
		 </if>
		 <if test="offset != null">
		   OFFSET #{offset}
		 </if>
   </select>
   
   <select id="getGeneralResearchDataBYTeacherIdSchoolId" resultMap="AggregateReportResultMap" >
		select grf.studentid, grf.reportyear,grf.stateid,stateorg.displayidentifier as statecode,stateorg.organizationname as state,grf.districtid,districtorg.organizationname as district,districtcode,
		grf.schoolid,schoolorg.organizationname as school,artuser.firstname as educatorfirstname,artuser.surname as educatorlastname,studentlegalfirstname,studentlegallastname,upper(currentgradelevel) as currentGradelevel,
		grf.id,kiteeducatoridentifier,ca.name as subject,ca.abbreviatedname as subjectcode,ee1,ee2,ee3,ee4,ee5,ee6,ee7,ee8,ee9,ee10,ee11,ee12,ee13,ee14,ee15,ee16,ee17,ee18,ee19,ee20,ee21,
		ee22,ee23,ee24,ee25,ee26,
		CASE 
		WHEN invalidationcode IN(1) THEN invalidationcode
		ELSE 0
		END as invalidationcode,
		performancelevel
		from uploadgrffile grf
		inner join organization stateorg on stateorg.id = grf.stateid 
		inner join organization districtorg on districtorg.id = grf.districtid 
		inner join organization schoolorg on schoolorg.id = grf.schoolid
		left join aartuser artuser on artuser.id = grf.kiteeducatoridentifier::int 
		left join contentarea ca on ca.id = grf.subjectid
		where grf.stateid = #{stateId,jdbcType=BIGINT}
		and grf.recentversion is true 
		and grf.activeflag is true 
		and grf.schoolid = #{schoolId,jdbcType=BIGINT}
		and grf.reportyear = #{reportYear,jdbcType=BIGINT} 
		and grf.kiteeducatoridentifier = #{kiteEducatorIdentifier,jdbcType=VARCHAR}
		and grf.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
        and grf.invalidationcode!=1
       order by (substring(currentgradelevel, '^[0-9]+'))::int,substring(currentgradelevel, '[^0-9_].*$'),studentlegallastname,studentlegalfirstname,subject		
 	</select>
 	
 	<select id="getGeneralResearchDataByOrganizationId" resultMap="AggregateReportResultMap" >
 	select grf.studentid, grf.reportyear,grf.stateid,stateorg.displayidentifier as statecode,stateorg.organizationname as state,grf.districtid,districtorg.organizationname as district,districtcode,
		grf.schoolid,schoolorg.organizationname as school,artuser.firstname as educatorfirstname,artuser.surname as educatorlastname,studentlegalfirstname,studentlegallastname,upper(currentgradelevel) as currentGradelevel,
		grf.id,ca.name as subject,ca.abbreviatedname as subjectcode,ee1,ee2,ee3,ee4,ee5,ee6,ee7,ee8,ee9,ee10,ee11,ee12,ee13,ee14,ee15,ee16,ee17,ee18,ee19,ee20,ee21,
		ee22,ee23,ee24,ee25,ee26,
		CASE 
		WHEN invalidationcode IN(1) THEN invalidationcode
		ELSE 0
		END as invalidationcode,
		performancelevel
		from uploadgrffile grf
		inner join organization stateorg on stateorg.id = grf.stateid 
		inner join organization districtorg on districtorg.id = grf.districtid 
		inner join organization schoolorg on schoolorg.id = grf.schoolid 
		left join aartuser artuser on artuser.id = grf.kiteeducatoridentifier::int 
		left join contentarea ca on ca.id = grf.subjectid
		where grf.stateid = #{stateId,jdbcType=BIGINT}
		and grf.activeflag is true
		and grf.recentversion is true 
		and grf.reportyear = #{reportYear,jdbcType=BIGINT}
		and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
        and invalidationcode !=1 
        and grf.schoolid = #{organizationId,jdbcType=BIGINT}
   order by (substring(currentgradelevel, '^[0-9]+'))::int,substring(currentgradelevel, '[^0-9_].*$'),studentlegallastname,studentlegalfirstname,subject
 	</select>
			
 	<insert id="generateScCodeExtract">
 		update uploadsccodefile set activeflag = false, modifieduser = #{userId,jdbcType=BIGINT}, modifieddate = now()
 		where stateid = #{organizationId,jdbcType=BIGINT} and reportyear = #{reportYear,jdbcType=BIGINT} and activeflag is true;
 		
 		insert into uploadsccodefile (batchuploadprocessid,studentid,state,stateid,statestudentidentifier,studentlegalfirstname,  
 		 studentlegalmiddlename,studentlegallastname,generationcode,dateofbirth,specialcircumstancecode,ksdesccode,specialcircumstancelabel,
    		assessment,essentialelement, createduser,activeflag,modifieduser,reportyear, sccodecreateddate) 
		(SELECT distinct #{batchUploadId} as batchuploadprocessid, enrl.studentid studentid, attendanceSchool.statename as state, attendanceSchool.stateid as stateid,
		st.statestudentidentifier as statestudentidentifier, st.legalfirstname as studentlegalfirstname,
		st.legalmiddlename as studentlegalmiddlename, st.legallastname as studentlegallastname,st.generationcode as generationcode, 
		st.dateofbirth as dateofbirth, sc.cedscode as specialcircumstancecode, 'SC-'||sc.ksdecode as ksdesccode,
		sc.specialcircumstancetype as specialcircumstancelabel,
		stateSubjectArea.name as assessment , cfd.contentcode as essentialelement, #{userId,jdbcType=BIGINT} as createduser, 
		true as activeflag, #{userId,jdbcType=BIGINT} as modifieduser,  #{reportYear,jdbcType=BIGINT} as reportyear, ssc.createdate as sccodecreateddate
		FROM organizationtreedetail attendanceSchool 
		  JOIN enrollment enrl ON attendanceSchool.schoolid = enrl.attendanceschoolid
		  JOIN Student st ON enrl.Studentid = st.id AND st.activeflag IS true
		  join studentassessmentprogram sap on sap.studentid = st.id  and sap.activeflag is true
		  inner join studentstests sts on sts.enrollmentid = enrl.id
		  join testsession ts on ts.id = sts.testsessionid
		  join testcollection tc on tc.id = sts.testcollectionid
		  JOIN ContentArea stateSubjectArea ON stateSubjectArea.id = tc.contentareaid 
		  inner join studentspecialcircumstance ssc on sts.id = ssc.studenttestid and ssc.activeflag is true
		  <if test="stateCode =='KS'">
        		and ssc.status in (select id from category where categorycode in ('SAVED','APPROVED')
			and categorytypeid = (SELECT id FROM categorytype WHERE typecode = 'SPECIAL CIRCUMSTANCE STATUS'))
        	  </if>
		  join specialcircumstance sc on sc.id = ssc.specialcircumstanceid and sc.activeflag is true  
		  join studentstestsections stsec on stsec.studentstestid = sts.id
		  join testsectionstaskvariants tsectv on tsectv.testsectionid = stsec.testsectionid
		  join taskvariantcontentframeworkdetail tvcfd on tvcfd.taskvariantid = tsectv.taskvariantid and tvcfd.isprimary is true
		  join contentframeworkdetail cfd on cfd.id = tvcfd.contentframeworkdetailid
		  inner join assessmentstestcollections atc ON atc.testcollectionid = sts.testcollectionid and atc.activeflag is true
		  inner join assessment ass ON ass.id = atc.assessmentid and ass.activeflag is true 
		  inner join testingprogram tp ON tp.id = ass.testingprogramid and tp.activeflag is true
		  inner join assessmentprogram ap ON ap.id = tp.assessmentprogramid and ap.id=sap.assessmentprogramid and ap.activeflag is true
		  inner join operationaltestwindow otw on otw.id = ts.operationaltestwindowid 
	   	  inner join testenrollmentmethod tem on tem.id = otw.testenrollmentmethodid and tem.assessmentprogramid = otw.assessmentprogramid
	   		and otw.assessmentprogramid = sap.assessmentprogramid
		  WHERE ts.schoolyear = #{reportYear,jdbcType=BIGINT}
		  and enrl.currentschoolyear = #{reportYear,jdbcType=BIGINT}
		  and sap.assessmentprogramid=#{assessmentProgramId}
		  and ssc.specialcircumstanceid is not null
		  AND attendanceSchool.stateid=#{organizationId,jdbcType=BIGINT}
		  and ts.source not in ('ITI', 'INTERIM', 'MASTBATCH', 'RESEARCHSURVEY') and tp.programname = 'Summative'
        	  and tem.methodcode not in ('MLTASGNFT')
          and sts.activeflag=case when sts.status in (select id from category where categorycode in ('exitclearunenrolled-complete','rosterunenrolled-complete') 
          and categorytypeid in (select id from categorytype where typecode='STUDENT_TEST_STATUS')) then sts.activeflag else 't' end);
 	</insert>
 	
 	<insert id="generateStudentExitDetailsExtract">
 		
 		update studentexitdetails set activeflag = false, modifieduser = #{userId,jdbcType=BIGINT}, modifieddate = now()
 		where assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} and stateid = #{organizationId,jdbcType=BIGINT}
 		and reportyear = #{reportYear,jdbcType=BIGINT} and activeflag is true;
 	
	 	insert into studentexitdetails (assessmentprogramid, studentid,   gradeid, 
	 	subjectid,  exitcode ,  exitdate , createduser, modifieduser, reportyear, stateid) 
	 	(
        select distinct sap.assessmentprogramid as assessmentprogramid,
			s.id as studentid,
			gc.id as gradeid,tc.contentareaid as subjectid,e.exitwithdrawaltype as exitcode,e.exitwithdrawaldate as exitdate,
	  		#{userId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{reportYear,jdbcType=BIGINT}, ot.stateid
		from student s
		join studentassessmentprogram sap on s.id = sap.studentid
		join enrollment e on s.id = e.studentid
		join organizationtreedetail ot on e.attendanceschoolid = ot.schoolid
		join gradecourse gc on e.currentgradelevel = gc.id
		left join studentexitcodes sec on e.exitwithdrawaltype = sec.code
		left join studentstests st on s.id = st.studentid
		left join testsession ts on st.testsessionid = ts.id and e.currentschoolyear = ts.schoolyear
		left join operationaltestwindow otw on otw.id = ts.operationaltestwindowid
		left join testcollection tc on st.testcollectionid = tc.id
		left join contentarea ca on tc.contentareaid = ca.id
        where sap.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
			and ot.stateid = #{organizationId,jdbcType=BIGINT}
			and e.currentschoolyear = #{reportYear,jdbcType=BIGINT}
			and (e.exitwithdrawaltype != 0 or exitwithdrawaldate is not null)
			and sec.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
        	<if test="isStateHaveSpecificExitCode==true">
				and sec.stateid = #{organizationId}
				and sec.schoolyear = #{reportYear}
			</if> 
			<if test="isStateHaveSpecificExitCode!=true">
				and sec.stateid is null
				and sec.schoolyear is null
			</if> 
        );
 	</insert>
 	
 	 <select id="getAvailableSSIDByStudentId" resultType="String">
  		select distinct(statestudentidentifier)
  		 from uploadgrffile where studentid = #{studentId}
  		 <if test="batchUploadId != null" >
		 and batchuploadprocessid = #{batchUploadId}
		 </if>
  		  <if test="reportYear != null" >
	      and reportyear = #{reportYear}
		 </if>
  	</select>
  	
  	<select id="getStudentGrfDataByStudentandSubjectId" resultMap="editStudentGrfResultMap" >
       select grf.id,externalUniqueRowIdentifier,studentid,subjectid,ca.name as subject,grf.reportyear,grf.stateid,
		invalidationcode,studentlegalfirstname,studentlegalmiddlename,studentlegallastname,
		upper(generationcode) as generationcode,dateofbirth,statestudentidentifier,
		initcap(gender) as gender,comprehensiverace,hispanicethnicity,firstlanguage,
		upper(primarydisabilitycode) as primarydisabilitycode,esolparticipationcode,upper(currentgradelevel) as currentGradelevel,
		attendanceschoolprogramidentifier,aypschoolidentifier,accountabilityDistrictIdentifier,schoolcode,schoolorg.organizationname as school,
		districtcode,districtorg.organizationname as district,schoolentrydate,districtentrydate,stateentrydate,
		stateorg.displayidentifier as stateCode,
		educatoridentifier,au.firstname as educatorfirstname,localstudentidentifier,
		au.surname as educatorlastname,exitwithdrawaldate,exitwithdrawalcode,		
		(select organizationname from organization_children_active_or_inactive(grf.stateid) 
		where displayidentifier = grf.attendanceschoolprogramidentifier limit 1)			
		as attendanceschoolprogramname,		
		(select organizationname from organization_children_active_or_inactive(grf.stateid) 
		where displayidentifier = grf.aypschoolidentifier limit 1) as aypschoolname		
		from uploadgrffile grf
		inner join organization stateorg on stateorg.id = grf.stateid 
		inner join organization districtorg on districtorg.id = grf.districtid 
		inner join organization schoolorg on schoolorg.id = grf.schoolid
		left join contentarea ca on ca.id = grf.subjectid
		inner join aartuser au on au.id = grf.kiteeducatoridentifier::int 
			where grf.stateid = #{stateId,jdbcType=BIGINT} 
			and grf.activeflag is true 
			and grf.reportyear =  #{reportYear,jdbcType=BIGINT}
			and grf.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
			and grf.recentversion is true
			<if test="uniqueRowIdentifier == null">
				and (grf.statestudentidentifier = #{stateStudentIdentifier,jdbcType=VARCHAR}
				 <if test="subjectId == 0"> 
				   and grf.subjectid is null)
				 </if>	
				  <if test="subjectId > 0"> 
				   and grf.subjectid =  #{subjectId,jdbcType=BIGINT})
				 </if>	
		  </if>
		<if test="uniqueRowIdentifier != null">
			and grf.externaluniquerowidentifier = #{uniqueRowIdentifier,jdbcType=BIGINT}
			<if test="stateStudentIdentifier != null and subjectId != null">
				or (grf.statestudentidentifier = #{stateStudentIdentifier,jdbcType=VARCHAR} 
					<if test="subjectId == 0"> 
					   and grf.subjectid is null)
					</if>	
					<if test="subjectId > 0"> 
					   and grf.subjectid =  #{subjectId,jdbcType=BIGINT})
					</if>
			</if>		
		</if>
		limit 1
	</select>
	
	 <select id="getDistinctSubjectNamesFromGRF" resultType="edu.ku.cete.domain.content.ContentArea" >    
	 		  select distinct 
	 		  case when grf.subjectid is null then 0 else grf.subjectid end as id, 
			  case when ca.name is null then 'No subject' else ca.name end as name 
			  from uploadgrffile grf
			  left join contentarea ca on ca.id = grf.subjectid 
			  where stateid =  #{stateId,jdbcType=BIGINT}
			  and grf.activeflag is true 
			  and reportyear =  #{reportYear,jdbcType=BIGINT}
			  and assessmentprogramid =  #{assessmentProgramId,jdbcType=BIGINT}
			  order by name
   </select>
    <select id="getCurrentGradeFromGRF" resultType="java.lang.String">
	   select upper(currentgradelevel) as currentGradelevel  from uploadgrffile
		where studentid = #{studentId,jdbcType=BIGINT}
		and reportyear = #{reportYear,jdbcType=BIGINT}
		and subjectid = #{subjectId,jdbcType=BIGINT}
		and recentversion is true
		limit 1
   </select>

   <select id="countByUniqueRowIdentifier" resultType="java.lang.Integer">
    select count(id) from uploadgrffile where externaluniquerowidentifier =  #{externalUniqueRowIdentifier,jdbcType=BIGINT} 
    and batchuploadprocessid= #{batchUploadId,jdbcType=BIGINT}
   </select>
   
   <update id="setRecentFlag">
   	WITH selectedrow AS 
	(select studentid,subjectid, (versionid-1) as versionid
				from uploadgrffile 
				where batchuploadprocessid  = #{batchUploadId,jdbcType=BIGINT})
	
	 update uploadgrffile ugf set recentversion = true
	 FROM selectedrow s
	 WHERE s.studentid = ugf.studentid 
	 and s.subjectid = ugf.subjectid
	 and s.versionid = ugf.versionid
	 and ugf.reportyear = #{reportYear,jdbcType=BIGINT}   
   </update>
	
	<select id="getOriginalGRFUploadAudit" resultType="edu.ku.cete.domain.GrfStateApproveAudit">
    SELECT id, stateid, activeflag, updatedsuserid, updateddate, source, 
       operation, createddate, createduser, modifieddate, modifieduser, 
       schoolyear
     from grfstateapprove 
     where stateid = #{stateId,jdbcType=BIGINT} 
     and schoolyear =#{year,jdbcType=BIGINT}
     and activeflag is true 
     and operation in ('Original GRF','Updated GRF') 
     order by id desc limit 1;
   </select>

   	<select id="getValidGRFRecordsForProcess" resultType="edu.ku.cete.domain.UploadGrfFile">
     WITH organization_users as (select distinct BTRIM(au.uniquecommonidentifier) as identifier, au.id as educatoridentifier, au.activeflag
	from aartuser au 
	join usersorganizations uo on au.id = uo.aartuserid and uo.activeflag = true
	join userorganizationsgroups uog on uog.userorganizationid=uo.id and groupid=(select id from groups  where groupcode ='TEA')
	where uo.organizationid in (select id from organization_children_active_or_inactive(#{stateId,jdbcType=BIGINT}) union select #{stateId,jdbcType=BIGINT}))

     SELECT studentid as studentId, 				  
				  uniquerowidentifier 	as externalUniqueRowIdentifier,
  				  stateStudentIdentifier as stateStudentIdentifier,
				  aypSchoolIdentifier as aypSchoolIdentifier,
				  accountabilityDistrictIdentifier as accountabilityDistrictIdentifier,
				  localStudentIdentifier as localStudentIdentifier,
				  upper(currentGradelevel) as currentGradelevel,
				  course as course,
				  studentlegalfirstname as legalFirstName,
				  studentlegalmiddlename as legalMiddleName,
				  studentlegallastname as legalLastName,
				  generationCode as generationCode,
				  userName as userName,
				  firstLanguage as firstLanguage,
				  to_date(dateOfBirth, 'mm/dd/yyyy') as dateOfBirth, stateuse as stateUse,
				  gender as gender,
				  comprehensiveRace as comprehensiveRace,
				  hispanicEthnicity as hispanicEthnicity,
				  primaryDisabilityCode as primaryDisabilityCode,
				  esolParticipationCode as esolParticipationCode,
				  to_date(schoolEntryDate, 'mm/dd/yyyy')  as schoolEntryDate,
				  (select case when districtentrydate is null then null else to_date(districtentrydate, 'mm/dd/yyyy') end) as districtentrydate,
				  (select case when stateentrydate is null then null else to_date(stateentrydate, 'mm/dd/yyyy')  end) as stateentrydate,
				  attendanceSchoolProgramIdentifier as attendanceSchoolProgramIdentifier,
				  state as state,
				  districtcode as residenceDistrictIdentifier,
				  district as districtName,
				  schoolcode as schoolIdentifier,
				  school as schoolName,
				  educatorFirstName as educatorFirstName,
				  educatorLastName as educatorLastName,
				  educatorUserName as educatorUserName,
				  tmp.educatorIdentifier as educatorIdentifier,
				  subject as subject,
				  finalBand as finalBand,
				  sgp as sgp,
				  performanceLevel as performanceLevel,
				  nyPerformanceLevel as nyPerformanceLevel,
				  invalidationCode as invalidationCode,
				  totalLinkageLevelSmastered as totalLinkageLevelsMastered,
				  (select case when exitwithdrawaldate is null then null else to_date(exitwithdrawaldate, 'mm/dd/yyyy')  end) as exitWithdrawalDate,
				  iowalinkagelevelsmastered as iowaLinkageLevelsMastered,
				  exitwithdrawalcode as exitWithdrawalType,
				  gradechange as gradeChange,
				  ee1 as ee1,
				  ee2 as ee2,
				  ee3 as ee3,
				  ee4 as ee4,
				  ee5 as ee5,
				  ee6 as ee6,
				  ee7 as ee7,
				  ee8 as ee8,
				  ee9 as ee9,
				  ee10 as ee10,
				  ee11 as ee11,
				  ee12 as ee12,
				  ee13 as ee13,
				  ee14 as ee14,
				  ee15 as ee15,
				  ee16 as ee16,
				  ee17 as ee17,
				  ee18 as ee18,
				  ee19 as ee19,
				  ee20 as ee20,
				  ee21 as ee21,
				  ee22 as ee22,
				  ee23 as ee23,
				  ee24 as ee24,
				  ee25 as ee25,
				  ee26 as ee26, 
         tmp.kiteeducatoridentifier as strKiteEducatorIdentifier,
         (select educatoridentifier from organization_users where lower(identifier) = trim(lower(tmp.educatoridentifier)) order by activeflag DESC limit 1) as kiteEducatorIdentifier
      
     from tempuploadgrffile tmp     
     where batchuploadid = #{batchUploadId,jdbcType=BIGINT}
     and districtcode = #{districtCode,jdbcType=VARCHAR}
     order by studentid asc
     offset  #{offset,jdbcType=INTEGER}
     limit #{pageSize,jdbcType=INTEGER};
   </select>

   <select id="validateUploadFile" resultType="edu.ku.cete.report.domain.BatchUploadReason">
     <if test="isCommon == true">
       select * from GRF_File_Main_Validator(#{stateId,jdbcType=BIGINT}, #{batchUploadId,jdbcType=BIGINT},#{uploadType,jdbcType=BIGINT},#{assessmentProgramId,jdbcType=BIGINT}, #{reportYear,jdbcType=BIGINT},#{createdUser,jdbcType=BIGINT}) as x(batchuploadid bigint,
		  line text,
		  fieldname text,
		  reason text,
		  errortype text);
	 </if>
	 <if test="isCommon == false">
	    select * from grf_file_Updated_validator(#{stateId,jdbcType=BIGINT}, #{batchUploadId,jdbcType=BIGINT},#{uploadType,jdbcType=BIGINT},#{assessmentProgramId,jdbcType=BIGINT}, #{reportYear,jdbcType=BIGINT},#{createdUser,jdbcType=BIGINT}) as x(batchuploadid bigint,
		  line text,
		  fieldname text,
		  reason text,
		  errortype text);
	 </if>	  
   </select>
   
   <update id="resetEEValuesOnGradeCahange" >
   				WITH selectedrow AS 
						(select distinct tmp.uniquerowidentifier  
 						     from tempuploadgrffile tmp
 						     inner join uploadgrffile ugf 
 						     on ugf.externaluniquerowidentifier = tmp.uniquerowidentifier::bigint 
 						     and lower(tmp.currentgradelevel)!=lower(ugf.currentgradelevel)
 						     and versionid = 0
 						     where tmp.batchuploadid = #{batchUploadId,jdbcType=BIGINT}
 						     and ugf.stateid = #{stateId,jdbcType=BIGINT}
 						     and ugf.reportyear = #{reportYear,jdbcType=BIGINT}
 						     )
 
 					update tempuploadgrffile tmp 
 					          set 
 					          gradechange = true,
 					          performancelevel = '9', 
 					          ee1= '9',ee2= '9',ee3= '9',ee4= '9',ee5= '9',ee6= '9',ee7= '9',ee8= '9',ee9= '9',ee10= '9',ee11= '9',ee12= '9',
 					          ee13= '9',ee14= '9',ee15= '9',ee16= '9',ee17= '9',ee18= '9',ee19= '9',ee20= '9', ee21= '9',ee22= '9',ee23= '9',
 					          ee24= '9',ee25= '9',ee26= '9' 
 					  FROM selectedrow s
 						 WHERE s.uniquerowidentifier = tmp.uniquerowidentifier;
 						  						 
   </update>
   
   <insert id="insertToTempTable">
     INSERT INTO tempuploadgrffile 
         <if test="columns != null  and columns.size > 0">
      		 <foreach close=")" collection="columnName" item="column" open="(" separator=",">
	    	    	${column}
	        </foreach>	        	
		</if>      
     
      VALUES
          
          <if test="columns != null  and columns.size > 0">
      		 <foreach close=")" collection="columns" item="column" open="(" separator="),(">
	    	    	${column}
	        </foreach>	        	
		</if>          
   </insert>
   
    <select id="getDistinctDistrictsByStateId" resultType="java.lang.String" >    
		select distinct districtcode from tempuploadgrffile 
			  where batchuploadid = #{batchUploadId,jdbcType=BIGINT}
		 order by districtcode
   </select>
   
  </mapper>