<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ku.cete.model.StudentTrackerMapper">
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.StudentTracker">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 20 12:26:27 CST 2015.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="studentid" jdbcType="BIGINT" property="studentId" />
    <result column="contentareaid" jdbcType="BIGINT" property="contentAreaId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="activeflag" jdbcType="BIT" property="activeFlag" />
    <result column="createddate" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="createduser" jdbcType="BIGINT" property="createdUser" />
    <result column="modifieddate" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="modifieduser" jdbcType="BIGINT" property="modifiedUser" />
    <result column="courseid" jdbcType="BIGINT" property="courseId" />
    <result column="schoolyear" jdbcType="BIGINT" property="schoolYear" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 20 12:26:27 CST 2015.
    -->
    id, studentid, contentareaid, status, activeflag, createddate, createduser, modifieddate, 
    modifieduser, courseid, schoolyear
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 20 12:26:27 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from studenttracker
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="edu.ku.cete.domain.StudentTracker">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 20 12:26:27 CST 2015.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('studenttracker_id_seq')
    </selectKey>
    insert into studenttracker (id, studentid, contentareaid, 
      status, activeflag, createddate, 
      createduser, modifieddate, modifieduser, 
      courseid, schoolyear)
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{contentAreaId,jdbcType=BIGINT}, 
      #{status,jdbcType=VARCHAR}, #{activeFlag,jdbcType=BIT}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{createdUser,jdbcType=BIGINT}, #{modifiedDate,jdbcType=TIMESTAMP}, #{modifiedUser,jdbcType=BIGINT}, 
      #{courseId,jdbcType=BIGINT}, #{schoolYear,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.StudentTracker">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 20 12:26:27 CST 2015.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('studenttracker_id_seq')
    </selectKey>
    insert into studenttracker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="studentId != null">
        studentid,
      </if>
      <if test="contentAreaId != null">
        contentareaid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="activeFlag != null">
        activeflag,
      </if>
      <if test="createdDate != null">
        createddate,
      </if>
      <if test="createdUser != null">
        createduser,
      </if>
      <if test="modifiedDate != null">
        modifieddate,
      </if>
      <if test="modifiedUser != null">
        modifieduser,
      </if>
      <if test="courseId != null">
        courseid,
      </if>
      <if test="schoolYear != null">
        schoolyear,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="contentAreaId != null">
        #{contentAreaId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="activeFlag != null">
        #{activeFlag,jdbcType=BIT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null">
        #{modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="schoolYear != null">
        #{schoolYear,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.StudentTracker">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 20 12:26:27 CST 2015.
    -->
    update studenttracker
    <set>
      <if test="studentId != null">
        studentid = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="contentAreaId != null">
        contentareaid = #{contentAreaId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="activeFlag != null">
        activeflag = #{activeFlag,jdbcType=BIT},
      </if>
      <if test="createdDate != null">
        createddate = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        createduser = #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedDate != null">
        modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null">
        modifieduser = #{modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        courseid = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="schoolYear != null">
        schoolyear = #{schoolYear,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.StudentTracker">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 20 12:26:27 CST 2015.
    -->
    update studenttracker
    set studentid = #{studentId,jdbcType=BIGINT},
      contentareaid = #{contentAreaId,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      activeflag = #{activeFlag,jdbcType=BIT},
      createddate = #{createdDate,jdbcType=TIMESTAMP},
      createduser = #{createdUser,jdbcType=BIGINT},
      modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      modifieduser = #{modifiedUser,jdbcType=BIGINT},
      courseid = #{courseId,jdbcType=BIGINT},
      schoolyear = #{schoolYear,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
<!--   	<resultMap id="studentTrackerStudent" type="edu.ku.cete.domain.StudentTrackerStudent">
		<result column="id" jdbcType="BIGINT" property="id" />
		<result column="studentid" jdbcType="BIGINT" property="studentId" />			
		<result column="gradeid" jdbcType="BIGINT" property="gradeId" />
		<result column="finalbandid" jdbcType="BIGINT" property="finalBandId" />
		<result column="enrollmentid" jdbcType="BIGINT" property="enrollmentId" />
		<result column="rosterid" jdbcType="BIGINT" property="rosterId" />
		<result column="enrollmentrosterid" jdbcType="BIGINT" property="enrollmentRosterId" />
		<result column="attendanceschoolid" jdbcType="BIGINT" property="attendanceSchoolId" />
		<result column="currentSchoolYear" jdbcType="INTEGER" property="currentSchoolYear" />
		<result column="legalfirstname" jdbcType="VARCHAR" property="legalFirstName" />
		<result column="legallastname" jdbcType="VARCHAR" property="legalLastName" />
		<result column="attendanceSchoolName" jdbcType="VARCHAR" property="attendanceSchoolName" />
		<result column="attendanceSchoolIdentifier" jdbcType="VARCHAR" property="attendanceSchoolIdentifier" />
		<result column="studentbandrecommendationid" jdbcType="BIGINT" property="studentBandRecommendationId" />
	</resultMap>
	 -->
	<resultMap extends="BaseResultMap" id="ExBaseResultMap" type="edu.ku.cete.domain.StudentTracker">
		<result column="surveybandid" jdbcType="BIGINT" property="surveyBandId" />
		<result column="writingbandid" jdbcType="BIGINT" property="writingBandId"/>
		<result column="gradecourseid" jdbcType="BIGINT" property="gradeCourseId" />
		<result column="gradecode" jdbcType="VARCHAR" property="gradeCode" />
		<result column="courseid" jdbcType="BIGINT" property="courseId" />
		<result column="coursecode" jdbcType="VARCHAR" property="courseCode" />
		<result column="excludestudentcourseid" jdbcType="BIGINT" property="excludeStudentCourseId" />
		<result column="exclude" jdbcType="BIT" property="exclude" />
		<result column="excludestudentactiveflag" jdbcType="BIT" property="excludeStudentActiveflag" />
		<result column="excludestudentsubjectid" jdbcType="VARCHAR" property="excludeStudentSubjectId" />
	</resultMap>
	
	<select id="selectByStudentAndContentArea" resultMap="BaseResultMap">
		select distinct sts.id, sts.studentid, sts.contentareaid, sts.status, sts.activeflag, sts.createddate, sts.createduser, sts.modifieddate, 
    		sts.modifieduser, sts.courseid, sts.schoolyear from studenttracker sts 
    		join studenttrackerband stb on stb.studenttrackerid = sts.id
		 where sts.studentid= #{studentId,jdbcType=BIGINT} 
			and sts.contentareaid = #{contentAreaId,jdbcType=BIGINT} 
			<if test="courseId != null">
        	 and sts.courseid = #{courseId}		
        	</if> 
			and stb.operationalwindowid = #{operationalWindowId,jdbcType=BIGINT}
			and sts.activeflag is true
			and sts.schoolyear = #{schoolYear}
	</select>
	
	<select id="getUntrackedStudents" resultMap="ExBaseResultMap">	
		/* NO LOAD BALANCE */
		WITH excludestudents AS (select str.studentid from  studenttracker str
  				join studenttrackerblueprintstatus strs on strs.studenttrackerid = str.id
  				where strs.operationalwindowid = #{operationalTestWindowId,jdbcType=BIGINT}
  				and strs.statuscode = 'STCOMPLETED'
  				and str.contentareaid =#{contentArea.id,jdbcType=BIGINT}
  				and str.activeflag is true and str.schoolyear = #{currentSchoolYear,jdbcType=BIGINT})	
		select distinct st.id as studentid,
		<if test="contentArea.abbreviatedName == &quot;ELA&quot;">
        	st.finalelabandid as surveybandid
      	</if> 
      	<if test="contentArea.abbreviatedName == &quot;M&quot;">
        	st.finalmathbandid as surveybandid
      	</if> 
      	<if test="contentArea.abbreviatedName == &quot;Sci&quot;">
        	st.finalscibandid as surveybandid
      	</if>
      	<if test="contentArea.abbreviatedName == &quot;SS&quot;">
        	st.commbandid as surveybandid
      	</if>
      	, st.writingbandid as writingbandid
      	,r.statesubjectareaid as contentareaid, e.currentgradelevel as gradecourseid 
      	, gc.abbreviatedname as gradecode,  r.statecoursesid as courseid, r.statecoursecode as courseCode, e.currentschoolyear as schoolyear,
      	otws.exclude,otws.contentareaid as excludestudentsubjectid, otws.courseid as excludestudentcourseid, otws.activeflag as excludestudentactiveflag
		  from student st inner join enrollment e on st.id=e.studentid 
				inner join enrollmentsrosters er on er.enrollmentid=e.id
				inner join roster r on er.rosterid=r.id
				inner join gradecourse gc on gc.id=e.currentgradelevel
				inner join studentassessmentprogram sap on st.id = sap.studentid				
				inner join organizationtreedetail otd on e.attendanceschoolid=otd.schoolid		
				left join  operationaltestwindowstudent otws on (otws.studentid = st.id 
                                                                        and  r.statesubjectareaid = otws.contentareaid 
                                                                        and ( r.statecoursesid = otws.courseid  or otws.courseid is null)
                                                                        and otws.operationaltestwindowid = #{operationalTestWindowId,jdbcType=BIGINT}
		where er.activeflag is true and st.activeflag is true 
			and e.activeflag is true  
			and r.activeflag is true 
			and sap.activeflag = true
			and sap.assessmentprogramid=#{assessmentProgramId,jdbcType=BIGINT}
			and e.currentschoolyear=#{currentSchoolYear,jdbcType=BIGINT} 
			and (e.exitwithdrawaldate is null or (e.exitwithdrawaldate &lt; e.schoolentrydate))
			and otd.stateid = #{contractingOrganizationId,jdbcType=BIGINT}
			and (r.statesubjectareaid=#{contentArea.id,jdbcType=BIGINT} 
			and r.currentschoolyear=#{currentSchoolYear,jdbcType=BIGINT})
			and not exists(select studentid from excludestudents where studentid = st.id)			
			order by st.id asc LIMIT #{pageSize} OFFSET #{offset}
	</select>
	
	<select id="getOnlyUntrackedStudents" resultMap="ExBaseResultMap">	
		/* NO LOAD BALANCE */	
		select distinct e.studentid,		
		<if test="contentArea.abbreviatedName == &quot;ELA&quot;">
        	st.finalelabandid as surveybandid
      	</if> 
      	<if test="contentArea.abbreviatedName == &quot;M&quot;">
        	st.finalmathbandid as surveybandid
      	</if> 
      	<if test="contentArea.abbreviatedName == &quot;Sci&quot;">
        	st.finalscibandid as surveybandid
      	</if>
      	<if test="contentArea.abbreviatedName == &quot;SS&quot;">
        	st.commbandid as surveybandid
      	</if>
      	, st.writingbandid as writingbandid
      	,r.statesubjectareaid as contentareaid, e.currentgradelevel as gradecourseid 
      	, gc.abbreviatedname as gradecode,  r.statecoursesid as courseid, r.statecoursecode as courseCode, e.currentschoolyear as schoolyear,
      	otws.exclude,otws.contentareaid as excludestudentsubjectid, otws.courseid as excludestudentcourseid, otws.activeflag as excludestudentactiveflag
		  from student st inner join enrollment e on st.id=e.studentid 
				inner join enrollmentsrosters er on er.enrollmentid=e.id
				inner join roster r on er.rosterid=r.id
				inner join gradecourse gc on gc.id=e.currentgradelevel
				inner join studenttracker stut on stut.studentid=st.id
				inner join studentassessmentprogram sap on st.id = sap.studentid
				inner join organizationtreedetail otd on e.attendanceschoolid=otd.schoolid
				left join studenttrackerblueprintstatus strs on strs.studenttrackerid = stut.id and strs.operationalwindowid = #{operationalTestWindowId,jdbcType=BIGINT}
				left join  operationaltestwindowstudent otws on (otws.studentid = st.id 
                                                                        and  r.statesubjectareaid = otws.contentareaid 
                                                                        and ( r.statecoursesid = otws.courseid  or otws.courseid is null)
                                                                        and otws.operationaltestwindowid = #{operationalTestWindowId,jdbcType=BIGINT})         
		where er.activeflag is true and st.activeflag is true 
			and e.activeflag is true  
			and r.activeflag is true
			and sap.activeflag is true
			and strs.studenttrackerid is null 
			and sap.assessmentprogramid=#{assessmentProgramId,jdbcType=BIGINT}
			and e.currentschoolyear=#{currentSchoolYear,jdbcType=BIGINT} 
			and (e.exitwithdrawaldate is null or (e.exitwithdrawaldate &lt; e.schoolentrydate))
			and otd.stateid = #{contractingOrganizationId,jdbcType=BIGINT}
			and (r.statesubjectareaid=#{contentArea.id,jdbcType=BIGINT} 
			and r.currentschoolyear=#{currentSchoolYear,jdbcType=BIGINT})
			and stut.contentareaid=r.statesubjectareaid
			and stut.activeflag=true and stut.status='UNTRACKED'
			and stut.schoolyear = #{currentSchoolYear,jdbcType=BIGINT}
			order by e.studentid asc LIMIT #{pageSize}
	</select>	
	
	<resultMap extends="BaseResultMap" id="AutoRegResultMap" type="edu.ku.cete.domain.StudentTracker">
		<result column="gradecourseid" jdbcType="BIGINT" property="gradeCourseId" />
		<result column="gradecode" jdbcType="VARCHAR" property="gradeCode" />
		<result column="courseid" jdbcType="BIGINT" property="courseId" />
		<result column="schoolyear" jdbcType="BIGINT" property="schoolYear" />
		<association javaType="edu.ku.cete.domain.StudentTrackerBand" property="recommendedBand">
		    <id column="studenttrackerbandid" jdbcType="BIGINT" property="id" />
		    <result column="studenttrackerid" jdbcType="BIGINT" property="studentTrackerId" />
		    <result column="complexitybandid" jdbcType="BIGINT" property="complexityBandId" />
		    <result column="testsessionid" jdbcType="BIGINT" property="testSessionId" />
		    <result column="source" jdbcType="VARCHAR" property="source" />
		    <result column="essentialelementid" jdbcType="VARCHAR" property="essentialElementId" />
		    <result column="essentialelementcode" jdbcType="VARCHAR" property="essentialElementCode" />
   		    <result column="operationalwindowid" jdbcType="BIGINT" property="operationalWindowId" />
		</association>
		<association column="enrollmentid" javaType="edu.ku.cete.domain.enrollment.Enrollment" property="enrollment">
			<id column="enrollmentid" jdbcType="BIGINT" property="id" />
		    <result column="gradecourseid" jdbcType="INTEGER" property="currentGradeLevel" />
		    <result column="currentschoolyear" jdbcType="INTEGER" property="currentSchoolYear" />
		    <result column="studentid" jdbcType="BIGINT" property="studentId" />
		    <result column="attendanceschoolid" jdbcType="BIGINT" property="attendanceSchoolId" />
		    <association column="attendanceSchoolId" javaType="edu.ku.cete.domain.common.Organization" property="attendanceSchool">
		        <id column="attendanceschoolid" jdbcType="BIGINT" property="id" />
		        <result column="attendanceschoolname" javaType="String" property="organizationName" />
		        <result column="attendanceschoolidentifier" javaType="String" property="displayIdentifier" />
			</association>
			<association column="studentid" javaType="edu.ku.cete.domain.student.Student" property="student">
		        <id column="studentid" jdbcType="BIGINT" property="id" />
		        <result column="legalfirstname" javaType="String" property="legalFirstName" />
		        <result column="legallastname" javaType="String" property="legalLastName" />
			</association>
		</association>
	</resultMap>
	
	<select id="getTrackedStudents" resultMap="AutoRegResultMap">		
		select distinct st.id, st.studentid, st.contentareaid, st.status,
		    st.courseid, st.schoolyear,
			(select stb.id from studenttrackerband stb where 
			stb.testsessionid is null and st.id=stb.studenttrackerid and stb.activeflag=true order by id desc limit 1)  as studenttrackerbandid,
			(select stb.complexitybandid from studenttrackerband stb where 
			stb.testsessionid is null and st.id=stb.studenttrackerid and stb.activeflag=true order by id desc limit 1)  as complexitybandid,
			(select stb.source from studenttrackerband stb where 
			stb.testsessionid is null and st.id=stb.studenttrackerid and stb.activeflag=true order by id desc limit 1)  as source,
			stb1.studenttrackerid, stb1.testsessionid, stb1.operationalwindowid
			<if test="poolType == &quot;SINGLEEE&quot;">
				,(select stb.essentialelementid from studenttrackerband stb where 
				stb.testsessionid is null and st.id=stb.studenttrackerid and stb.activeflag=true order by id desc limit 1)  as essentialelementid,
				(select contentcode from contentframeworkdetail where id=(select stb.essentialelementid from studenttrackerband stb where 
				stb.testsessionid is null and st.id=stb.studenttrackerid and stb.activeflag=true order by id desc limit 1)) as essentialelementcode
			</if>
			from studenttracker st
			inner join studenttrackerband stb1 on stb1.studenttrackerid=st.id and stb1.activeflag=true
			inner join student stu on stu.id=st.studentid and stu.activeflag=true
			left join studenttrackerblueprintstatus strs on strs.studenttrackerid = st.id and strs.operationalwindowid = #{operationalTestWindowId,jdbcType=BIGINT}
		where st.activeflag is true  and stu.stateid=#{contractingOrganizationId,jdbcType=BIGINT}
		and stb1.operationalwindowid = #{operationalTestWindowId,jdbcType=BIGINT}
		and strs.studenttrackerid is null
		and st.schoolyear = #{currentSchoolYear,jdbcType=BIGINT}
		and st.contentareaid=#{contentAreaId,jdbcType=BIGINT}
		and st.status='TRACKED'
		<if test="isInterim">
			and st.modifieddate &gt; (now() - interval '1 hours')
		</if>
		order by stb1.testsessionid nulls first, st.studentid asc LIMIT #{pageSize} OFFSET #{offset}
	</select>
	
  <update id="changeStatusToUnTrackedByIds">
	update studenttracker set status='UNTRACKED',modifieddate=CURRENT_TIMESTAMP,modifieduser=#{userId,jdbcType=BIGINT} where id in 
	<foreach close=")" collection="studentTrackerIds" item="studentTrackerId" open="(" separator=",">
		#{studentTrackerId}
	</foreach> 
  </update>  
	
</mapper>