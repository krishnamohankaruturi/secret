<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.UserModuleDao" >
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.UserModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userid" property="userId" jdbcType="BIGINT" />
    <result column="moduleid" property="moduleId" jdbcType="BIGINT" />
    <result column="enrollmentstatusid" property="enrollmentstatusid" jdbcType="BIGINT" />
    <result column="createddate" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="modifieddate" property="modifiedDate" jdbcType="TIMESTAMP" />
    <result column="createduser" property="createdUser" jdbcType="BIGINT" />
    <result column="modifieduser" property="modifiedUser" jdbcType="BIGINT" />
    <result column="activeflag" property="activeFlag" jdbcType="BIT" />
    <result column="stateid" property="stateId" jdbcType="BIGINT" />
	<result column="testfinalscore" property="testFinalScore" jdbcType="NUMERIC" />
    <result column="testresult" property="testResult" jdbcType="BIT" />
    <result column="earnedceu" property="earnedCEU" jdbcType="INTEGER" />
    <result column="testcompletiondate" property="testCompletionDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    id, userid, moduleid, enrollmentstatusid, createddate, modifieddate, createduser, 
    modifieduser, activeflag, stateid, testfinalscore, testresult, earnedceu, testcompletiondate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ku.cete.domain.UserModuleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from usermodule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from usermodule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    delete from usermodule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <!-- Manoj Kumar O : Added for US_16244(provide UI TO merge Users) -->
  <delete id="deleteByUserId">
  	Delete from usermodule where userId=#{id}
  </delete>
  
  <delete id="deleteByExample" parameterType="edu.ku.cete.domain.UserModuleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    delete from usermodule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ku.cete.domain.UserModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('usermodule_id_seq')
    </selectKey>
    insert into usermodule (id, userid, moduleid, 
      enrollmentstatusid, createddate, modifieddate, 
      createduser, modifieduser, activeflag, stateid
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{moduleId,jdbcType=BIGINT}, 
      #{enrollmentstatusid,jdbcType=BIGINT}, #{createdDate,jdbcType=TIMESTAMP}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{createdUser,jdbcType=BIGINT}, #{modifiedUser,jdbcType=BIGINT}, #{activeFlag,jdbcType=BIT}, #{stateId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.UserModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('usermodule_id_seq')
    </selectKey>    
    insert into usermodule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        userid,
      </if>
      <if test="moduleId != null" >
        moduleid,
      </if>
      <if test="enrollmentstatusid != null" >
        enrollmentstatusid,
      </if>
      <if test="createdDate != null" >
        createddate,
      </if>
      <if test="modifiedDate != null" >
        modifieddate,
      </if>
      <if test="createdUser != null" >
        createduser,
      </if>
      <if test="modifiedUser != null" >
        modifieduser,
      </if>
      <if test="activeFlag != null" >
        activeflag,
      </if>
      <if test="stateId != null" >
        stateid,
      </if> 
      <if test="testFinalScore != null" >
        testfinalscore,
      </if>   
      <if test="testResult != null" >
        testresult,
      </if>
      <if test="earnedCEU != null" >
        earnedceu,
      </if>
      <if test="testCompletionDate != null" >
        testcompletiondate,
      </if>                 
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="moduleId != null" >
        #{moduleId,jdbcType=BIGINT},
      </if>
      <if test="enrollmentstatusid != null" >
        #{enrollmentstatusid,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null" >
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedUser != null" >
        #{modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="activeFlag != null" >
        #{activeFlag,jdbcType=BIT},
      </if>
      <if test="stateId != null" >
        #{stateId,jdbcType=BIGINT},
      </if>
      <if test="testFinalScore != null" >
        #{testFinalScore,jdbcType=NUMERIC},
      </if>   
      <if test="testResult != null" >
        #{testResult,jdbcType=BIT},
      </if>
      <if test="earnedCEU != null" >
        #{earnedCEU,jdbcType=INTEGER},
      </if>
      <if test="testCompletionDate != null" >
        #{testCompletionDate,jdbcType=TIMESTAMP},
      </if>              
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ku.cete.domain.UserModuleExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    select count(*) from usermodule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    update usermodule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        userid = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.moduleId != null" >
        moduleid = #{record.moduleId,jdbcType=BIGINT},
      </if>
      <if test="record.enrollmentstatusid != null" >
        enrollmentstatusid = #{record.enrollmentstatusid,jdbcType=BIGINT},
      </if>
      <if test="record.createdDate != null" >
        createddate = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedDate != null" >
        modifieddate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdUser != null" >
        createduser = #{record.createdUser,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedUser != null" >
        modifieduser = #{record.modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="record.activeFlag != null" >
        activeflag = #{record.activeFlag,jdbcType=BIT},
      </if>
      <if test="record.stateId != null" >
        moduleid = #{record.stateId,jdbcType=BIGINT},
      </if>
      <if test="record.testFinalScore != null" >
        testfinalscore = #{record.testFinalScore,jdbcType=NUMERIC},
      </if>   
      <if test="record.testResult != null" >
        testresult = #{record.testResult,jdbcType=BIT},
      </if>
      <if test="record.earnedCEU != null" >
        earnedceu = #{record.earnedCEU,jdbcType=INTEGER},
      </if>
      <if test="record.testCompletionDate != null" >
        testcompletiondate = #{record.testCompletionDate,jdbcType=TIMESTAMP},
      </if>            
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    update usermodule
    set id = #{record.id,jdbcType=BIGINT},
      userid = #{record.userId,jdbcType=BIGINT},
      moduleid = #{record.moduleId,jdbcType=BIGINT},
      enrollmentstatusid = #{record.enrollmentstatusid,jdbcType=BIGINT},
      createddate = #{record.createdDate,jdbcType=TIMESTAMP},
      modifieddate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      createduser = #{record.createdUser,jdbcType=BIGINT},
      modifieduser = #{record.modifiedUser,jdbcType=BIGINT},
      activeflag = #{record.activeFlag,jdbcType=BIT},
	  stateid = #{record.stateId,jdbcType=BIGINT},
      testfinalscore = #{testFinalScore,jdbcType=NUMERIC},
      testresult = #{testResult,jdbcType=BIT},
      earnedceu = #{earnedCEU,jdbcType=INTEGER},
      testcompletiondate = #{testCompletionDate,jdbcType=TIMESTAMP}	  
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.UserModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    update usermodule
    <set >
      <if test="userId != null" >
        userid = #{userId,jdbcType=BIGINT},
      </if>
      <if test="moduleId != null" >
        moduleid = #{moduleId,jdbcType=BIGINT},
      </if>
      <if test="enrollmentstatusid != null" >
        enrollmentstatusid = #{enrollmentstatusid,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null" >
        createddate = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null" >
        modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        createduser = #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedUser != null" >
        modifieduser = #{modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="activeFlag != null" >
        activeflag = #{activeFlag,jdbcType=BIT},
      </if>
      <if test="stateId != null" >
        stateid = #{stateId,jdbcType=BIGINT},
      </if>      
      <if test="testFinalScore != null" >
        testfinalscore = #{testFinalScore,jdbcType=NUMERIC},
      </if>   
      <if test="testResult != null" >
        testresult = #{testResult,jdbcType=BIT},
      </if>
      <if test="earnedCEU != null" >
        earnedceu = #{earnedCEU,jdbcType=INTEGER},
      </if>  
      <if test="testCompletionDate != null" >
        testcompletiondate = #{testCompletionDate,jdbcType=TIMESTAMP},
      </if>                  
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.UserModule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    update usermodule
    set userid = #{userId,jdbcType=BIGINT},
      moduleid = #{moduleId,jdbcType=BIGINT},
      enrollmentstatusid = #{enrollmentstatusid,jdbcType=BIGINT},
      createddate = #{createdDate,jdbcType=TIMESTAMP},
      modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      createduser = #{createdUser,jdbcType=BIGINT},
      modifieduser = #{modifiedUser,jdbcType=BIGINT},
      activeflag = #{activeFlag,jdbcType=BIT},
	  stateid = #{stateId,jdbcType=BIGINT},
      testfinalscore = #{testFinalScore,jdbcType=NUMERIC},
      testresult = #{testResult,jdbcType=BIT},
      earnedceu = #{earnedCEU,jdbcType=INTEGER},
      testcompletiondate = #{testCompletionDate,jdbcType=TIMESTAMP}    
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getModuleForUser" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 19 18:56:34 CDT 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from usermodule
    where moduleid = #{moduleId} and userid = #{userId} and activeflag=true
  </select>
  <select id="getUserModuleByModuleStateStatus" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
	from usermodule 
    where activeflag=true and moduleid = #{moduleId, jdbcType=BIGINT}
    <if test="enrollmentStatusId != null" >
		AND enrollmentstatusid = #{enrollmentStatusId, jdbcType=BIGINT}
	</if>
    <if test="stateId != null" >
		AND stateid = #{stateId, jdbcType=BIGINT}
	</if> 	    
  </select>
  
  <resultMap id="TranscriptsResultMap" extends="BaseResultMap" type="edu.ku.cete.domain.UserModule">
    					
    <association property="module" javaType="edu.ku.cete.domain.professionaldevelopment.Module">
	    <id column="mid" property="id" jdbcType="BIGINT" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="assessmentprogramid" property="assessmentprogramid" jdbcType="BIGINT" />
	    <result column="testid" property="testid" jdbcType="BIGINT" />
	    <result column="tutorialid" property="tutorialid" jdbcType="BIGINT" />
	    <result column="passingscore" property="passingScore" jdbcType="INTEGER" />
	    <result column="requiredflag" property="requiredflag" jdbcType="BIT" />
	    <result column="assessmentProgramName" property="assessmentProgramName" jdbcType="VARCHAR" />
  </association>
  
    <association property="user" javaType="edu.ku.cete.domain.user.User">
	    <id column="auid" property="id" jdbcType="BIGINT"/>
    	<result column="firstname" jdbcType="VARCHAR" property="firstName" />
    	<result column="surname" jdbcType="VARCHAR" property="surName" />	    
	    <result column="organizationname" property="orgName" jdbcType="VARCHAR"/>	    
  </association>  
  </resultMap>  
  
   <select id="getTranscripts" resultMap="TranscriptsResultMap">
	select um.*, m.id as mid, m.name, m.assessmentprogramid, m.testid, 
		m.tutorialid, m.passingscore, m.requiredflag,  
		ap.programname as assessmentProgramName, au.id as auid, au.firstname, au.surname, org.organizationname
		from usermodule um
		inner join module m on um.moduleid = m.id
	    inner JOIN assessmentprogram ap ON ap.id = m.assessmentprogramid
	    inner join aartuser au on au.id = um.userid
	    inner join usersorganizations userorgs on (au.id = userorgs.aartuserid and userorgs.activeflag = true and userorgs.organizationid = (
		select organizationid from usersorganizations uo 
		join (select id,organizationtypeid from organization_children(#{organizationId}) 
				union select id,organizationtypeid from organization where id=#{organizationId}) as orgs on orgs.id=uo.organizationid
		where uo.aartuserid=au.id and uo.activeflag = true order by organizationtypeid desc limit 1))
		inner join organization org on org.id = userorgs.organizationid				    
		where um.activeflag is true and um.testcompletiondate is not null
		    <if test="userId != null" >		 
				AND um.userid = #{userId, jdbcType=BIGINT}
			</if>				
			AND um.stateid = (select id from organization_parent(#{organizationId}) where contractingorganization is true union 
				select id from organization where id=#{organizationId} and contractingorganization is true)		
		<include refid="Extended_Transcripts_Where_Clause" />
		<if test="sortByColumn != null">
    	ORDER BY 
			<choose>
	      		<when test="sortByColumn == 'm.id'">m.id</when>
	      		<when test="sortByColumn == 'm.name'">m.name</when>
	      		<when test="sortByColumn == 'testcompletiondate'">um.testcompletiondate</when>
	      		<when test="sortByColumn == 'testresult'">testresult</when>
	      		<when test="sortByColumn == 'earnedceu'">um.earnedceu</when>
	      		<when test="sortByColumn == 'requiredflag'">m.requiredflag</when>
	      		<when test="sortByColumn == 'displayname'">(au.firstname, au.surname)</when>
	      		<when test="sortByColumn == 'organizationname'">org.organizationname</when>
	      		<when test="sortByColumn == 'assessmentprogramname'">assessmentProgramName</when>
	      	</choose>
    		<if test="sortType=='desc'">
	    		desc
    	 	</if>
    	 	<if test="sortType=='asc' or sortType==null">
    	 		asc
    	 	</if>
		</if>
    	limit #{limit}
		offset #{offset}
  </select>
  
   <select id="countTranscripts" resultType="int">
	select 
		count(distinct um.id)
	from usermodule um
	inner join module m on um.moduleid = m.id
    inner JOIN assessmentprogram ap ON ap.id = m.assessmentprogramid
    inner join aartuser au on au.id = um.userid
    inner join usersorganizations userorgs on au.id = userorgs.aartuserid and userorgs.activeflag = true
    inner join organization org on org.id = userorgs.organizationid 
    inner join (select id,organizationtypeid from organization_children(#{organizationId}) 
				union select id,organizationtypeid from organization where id=#{organizationId}) as orgs on orgs.id=userorgs.organizationid and userorgs.aartuserid=au.id
	where um.activeflag is true and um.testcompletiondate is not null
    	<if test="userId != null" >		 
			AND um.userid = #{userId, jdbcType=BIGINT}
		</if>				
		AND um.stateid = (select id from organization_parent(#{organizationId}) where contractingorganization is true union 
			select id from organization where id=#{organizationId} and contractingorganization is true)			
		<include refid="Extended_Transcripts_Where_Clause" />		
  </select>
  
  <select id="countRequiredNotCompletedModulesByUserState" resultType="int">
	  select count(*) from (select m.id, m.name,um.id,um.userid,umstatus.categorycode, um.testresult
		from module m
		join modulestate ms on (ms.moduleid = m.id and m.requiredflag is true)
		join category msstatus on ms.statusid = msstatus.id
		left join usermodule um on (um.moduleid = ms.moduleid and um.activeflag = true and um.userid = #{userId, jdbcType=BIGINT}) 
		--left join usermodule um on ((um.moduleid = ms.moduleid) 
		--and (um.activeflag=true or (um.activeflag=false and um.testcompletiondate is not null)))
		left join category umstatus on um.enrollmentstatusid = umstatus.id
		where msstatus.categorycode = 'RELEASED' 
		and ms.stateid = #{organizationId} ) umastatus where (categorycode is null or categorycode != 'PASSED')
  </select>
  
  <sql id="Extended_Transcripts_Where_Clause">
 	<if test="transcriptsCriteriaMap.mid != null">
  		AND (m.id || '') ilike #{transcriptsCriteriaMap.mid}
  	</if>
 	<if test="transcriptsCriteriaMap.modulename != null">
  		AND (m.name || '') ilike #{transcriptsCriteriaMap.modulename}
  	</if>
  	<if test="transcriptsCriteriaMap.earnedceu != null and transcriptsCriteriaMap.earnedceu != '%All%' and transcriptsCriteriaMap.earnedceu == '%NA%'">
  		AND (earnedceu is null)
  	</if>
  	<if test="transcriptsCriteriaMap.earnedceu != null and transcriptsCriteriaMap.earnedceu != '%All%' and transcriptsCriteriaMap.earnedceu != '%NA%'">
  		AND (earnedceu || '') = TRIM(#{transcriptsCriteriaMap.earnedceu}, '%')
  	</if>
  	<if test="transcriptsCriteriaMap.testcompletiondate != null">
  		AND date(testcompletiondate) = to_date(TRIM(#{transcriptsCriteriaMap.testcompletiondate}, '%'), 'mm/dd/yy')
  	</if>  	
 	<if test="transcriptsCriteriaMap.displayname != null">
  		AND ((au.firstname || '') ilike #{transcriptsCriteriaMap.displayname} OR (au.surname || '') ilike #{transcriptsCriteriaMap.displayname})
  	</if>
  	<if test="transcriptsCriteriaMap.organizationname != null">
  		AND (org.organizationname || '') ilike #{transcriptsCriteriaMap.organizationname}
  	</if>
  	<if test="transcriptsCriteriaMap.assessmentprogramname != null">
  		AND (ap.programname || '') ilike #{transcriptsCriteriaMap.assessmentprogramname}
  	</if>  	
  	<if test="transcriptsCriteriaMap.requiredflag != null and transcriptsCriteriaMap.requiredflag != '%All%' and transcriptsCriteriaMap.requiredflag == '%true%'">
  		AND (m.requiredflag is true)
  	</if>   	
  	<if test="transcriptsCriteriaMap.requiredflag != null and transcriptsCriteriaMap.requiredflag != '%All%' and transcriptsCriteriaMap.requiredflag == '%false%'">
  		AND (m.requiredflag is null OR m.requiredflag is false)
  	</if>
  	<if test="transcriptsCriteriaMap.testresult != null and transcriptsCriteriaMap.testresult != '%All%' and transcriptsCriteriaMap.testresult == '%true%'">
  		AND (um.testresult is true)
  	</if>   	
  	<if test="transcriptsCriteriaMap.testresult != null and transcriptsCriteriaMap.testresult != '%All%' and transcriptsCriteriaMap.testresult == '%false%'">
  		AND (um.testresult is null OR um.testresult is false)
  	</if>
 </sql>  

   <update id="addOrUpdate" parameterType="edu.ku.cete.domain.UserModule" >
    /*NO LOAD BALANCE*/ SELECT pdenrolltomodule(#{moduleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{enrollmentstatusid,jdbcType=BIGINT}, 
    		#{stateId,jdbcType=BIGINT}, #{createdUser,jdbcType=BIGINT})
  </update>
</mapper>