<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.StudentSpecialCircumstanceDao" >
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.StudentSpecialCircumstance" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="studenttestid" property="studentTestid" jdbcType="BIGINT" />
    <result column="specialcircumstanceid" property="specialCircumstanceId" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="BIGINT" />
    <result column="approvedby" property="approvedBy" jdbcType="BIGINT" />
  </resultMap>
  
	<resultMap type="edu.ku.cete.web.StudentSpecialCircumstanceDTO" id="studentsSpecialCircumstanceInfoMap">
		<result column="studenttestid" property="studentTestid" />
		<result column="scid" property="specialCircumstanceId" />
		<result column="scstatus" property="status" />
		<result column="state" property="stateName"/> 
		<result column="district" property="districtName"/> 
		<result column="schoolname" property="schoolName"/> 
		<result column="educatorlastname" property="educatorLastName"/>
		<result column="educatorfirstname" property="educatorFirstName"/>
		<result column="studentlastname" property="studentLastName"/>
		<result column="studentfirstname" property="studentFirstName"/> 
		<result column="studentmiddlename" property="studentMiddleName"/> 
		<result column="statestudentidentifier" property="stateStudentIdentifier"/>
		<result column="assessmentprogram" property="assessmentProgram"/>
		<result column="subject" property="subjectName"/>
		<result column="testsessionname" property="testSessionName"/>
		<result column="sccodedescription" property="scCodeDescription"/>
		<result column="cedscodenumber" property="cedsCodeNumber" />
		<result column="statecodenumber" property="stateCodeNumber" />
		<result column="approvalstatus" property="approvalStatus" />
		<result column="approverlastname" property="approverLastName"/>
		<result column="approverfirstname" property="approverFirstName" />
		<result column="approvaldatetime" property="approvalDateTime" />
	</resultMap>
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    studenttestid, specialcircumstanceid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ku.cete.domain.StudentSpecialCircumstanceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from studentspecialcircumstance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <update id="deleteApproval" >
  	update studentspecialcircumstance set status = #{status,jdbcType=BIGINT},
        modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
        modifieduser = #{modifiedUser,jdbcType=BIGINT}
    <if test="studentTestId != null" >
      where studentTestId = #{studentTestId,jdbcType=BIGINT} and activeflag is true
    </if>
  </update>
  
  <update id="deleteByExample" parameterType="edu.ku.cete.domain.StudentSpecialCircumstanceExample" >
    update studentspecialcircumstance set activeflag = false,
        modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
        modifieduser = #{modifiedUser,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  
  <insert id="insert" parameterType="edu.ku.cete.domain.StudentSpecialCircumstance" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    insert into studentspecialcircumstance (studenttestid, specialcircumstanceid,
    createdate, createduser, modifieddate, modifieduser, status, activeflag
      )
    values (#{studentTestid,jdbcType=BIGINT}, #{specialCircumstanceId,jdbcType=BIGINT},
   		#{createdDate,jdbcType=TIMESTAMP}, #{createdUser,jdbcType=BIGINT}, 
    	#{modifiedDate,jdbcType=TIMESTAMP}, #{modifiedUser,jdbcType=BIGINT},
    	#{status, jdbcType=BIGINT}, #{activeFlag, jdbcType=BOOLEAN}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.StudentSpecialCircumstance" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    insert into studentspecialcircumstance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentTestid != null" >
        studenttestid,
      </if>
      <if test="specialCircumstanceId != null" >
        specialcircumstanceid,
      </if>
      <if test="createdDate != null" >
        createdate,
      </if>
      <if test="createdUser != null" >
        createduser,
      </if>
      <if test="modifiedDate != null" >
        modifieddate,
      </if>
      <if test="modifiedUser != null" >
        modifieduser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentTestid != null" >
        #{studentTestid,jdbcType=BIGINT},
      </if>
      <if test="specialCircumstanceId != null" >
        #{specialCircumstanceId,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedDate != null" >
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null" >
        #{modifiedUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ku.cete.domain.StudentSpecialCircumstanceExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    select count(*) from studentspecialcircumstance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    update studentspecialcircumstance
    <set >
      <if test="record.specialCircumstanceId != null" >
        specialcircumstanceid = #{record.specialCircumstanceId,jdbcType=BIGINT},
      </if>
       <if test="record.modifiedDate != null" >
        modifieddate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedUser != null" >
        modifieduser = #{record.modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIGINT},
      </if>
      <if test="record.approvedBy != null" >
        approvedby = #{record.approvedBy,jdbcType=BIGINT},
      </if>
    </set>
    where studenttestid = #{record.studentTestid} and activeflag is true
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 02 14:11:45 CST 2014.
    -->
    update studentspecialcircumstance
    set studenttestid = #{record.studentTestid,jdbcType=BIGINT},
      specialcircumstanceid = #{record.specialCircumstanceId,jdbcType=BIGINT},
      modifieddate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      modifieduser = #{record.modifiedUser,jdbcType=BIGINT},
      status = #{record.status, jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

	<select id="getStudentSpecialCircumstanceInfo" resultMap="studentsSpecialCircumstanceInfoMap">
		select ssc.studenttestid as studenttestid, ssc.specialcircumstanceid as scid, ssc.status as scstatus,
		otd.statename as state, otd.districtname as district, otd.schoolname as schoolname,
		(select  au.surname from enrollmentsrosters enrlroster  
			JOIN roster r ON r.id = enrlroster.rosterid and r.activeflag IS TRUE 
			JOIN aartuser au ON au.id = r.teacherid
			where enrlroster.enrollmentid = st.enrollmentid
			and enrlroster.activeflag IS TRUE 
			order by r.modifieddate desc limit 1) as educatorlastname,
		(select  au.firstname from enrollmentsrosters enrlroster  
			JOIN roster r ON r.id = enrlroster.rosterid and r.activeflag IS TRUE 
			JOIN aartuser au ON au.id = r.teacherid
			where enrlroster.enrollmentid = st.enrollmentid
			and enrlroster.activeflag IS TRUE 
			order by r.modifieddate desc limit 1) as educatorfirstname,
		s.legallastname as studentlastname, s.legalfirstname as studentfirstname,
		s.legalmiddlename as studentmiddlename, s.statestudentidentifier as statestudentidentifier,
		array_to_string(array(select distinct abbreviatedname from assessmentprogram ap 
		inner join studentassessmentprogram sap on ap.id = sap.assessmentprogramid and  sap.studentid = s.id and sap.activeflag = true),', ')
		as assessmentprogram,
		conArea.name as subject, ts.name as testsessionname,
		sc.description as sccodedescription, sc.cedscode as cedscodenumber, 'SC-'||sc.ksdecode as statecodenumber,
		(select categoryname from category where id = ssc.status) as approvalstatus,
		au.surname as approverlastname, au.firstname as approverfirstname, ssc.modifieddate as approvaldatetime
		from studentspecialcircumstance  ssc
		join specialcircumstance sc on ssc.specialcircumstanceid = sc.id
		join studentstests st on st.id = ssc.studenttestid
		join student s on st.studentid = s.id 
		join testsession ts on st.testsessionid =ts.id
		join testcollection tc on ts.testcollectionid = tc.id  
		join contentarea conArea on conArea.id = tc.contentareaid
		left join aartuser au on au.id = ssc.approvedby
		join enrollment enrl on enrl.studentid = st.studentid
		join organizationtreedetail otd on enrl.attendanceschoolid=otd.schoolid
		inner join studentassessmentprogram sap on sap.studentid = s.id and sap.activeflag = true
		where
		ssc.activeflag is true and 
		sc.activeflag is true and
		st.activeflag is true and
		ts.activeflag is true and 
		st.activeflag is true and
		enrl.activeflag is true and
		enrl.currentschoolyear = #{currentSchoolYear, jdbcType=INTEGER} and
		(otd.schoolid=#{orgChildrenById,jdbcType=BIGINT} or 
			otd.districtid=#{orgChildrenById,jdbcType=BIGINT} or 
			otd.stateid=#{orgChildrenById,jdbcType=BIGINT})	
			<if test="assessmentPrograms !=null">
			and sap.assessmentprogramid in 
			<foreach collection="assessmentPrograms" item="assessmentprogramid" open="(" close=")" separator=",">
			#{assessmentprogramid}
			</foreach>
			</if>		 
	</select>	
	<select id="selectActiveByStudentTestId" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
    	from studentspecialcircumstance where studenttestid = #{studentTestId} and activeflag = #{activeFlag}
	</select>
  	<update id="deleteByStudentTestId" >
  		update studentspecialcircumstance set activeflag = #{activeFlag,jdbcType=BOOLEAN},
  		modifieduser = #{modifiedUser,jdbcType=BIGINT}, modifieddate = #{modifiedDate,jdbcType=TIMESTAMP} 
   		where studenttestid = #{studentTestid,jdbcType=BIGINT} and activeflag is true
  </update>
  
  <select id="selectById" parameterType="map" resultMap="BaseResultMap">
    select id, studenttestid, specialcircumstanceid, status, approvedby
    from studentspecialcircumstance
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <update id="updateStatusAndApprovedBy" parameterType="edu.ku.cete.domain.StudentSpecialCircumstance">
    update studentspecialcircumstance
    set status = #{status,jdbcType=BIGINT},
    approvedby = #{approvedBy,jdbcType=BIGINT},
    modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
    modifieduser = #{modifiedUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>