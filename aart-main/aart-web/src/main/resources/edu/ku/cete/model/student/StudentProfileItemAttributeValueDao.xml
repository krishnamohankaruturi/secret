<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.student.StudentProfileItemAttributeValueDao" >
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.student.StudentProfileItemAttributeValue" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="selectedValue" property="selectedValue" jdbcType="VARCHAR" />
    <result column="createdDate" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="createdUser" property="createdUser" jdbcType="INTEGER" />
    <result column="activeFlag" property="activeFlag" jdbcType="BIT" />
    <result column="modifiedDate" property="modifiedDate" jdbcType="TIMESTAMP" />
    <result column="modifiedUser" property="modifiedUser" jdbcType="INTEGER" />
    <result column="profileItemAttributenameAttributeContainerId" property="profileItemAttributenameAttributeContainerId" jdbcType="BIGINT" />
    <result column="studentId" property="studentId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    id, selectedValue, createdDate, createdUser, activeFlag, modifiedDate, modifiedUser, 
    profileItemAttributenameAttributeContainerId, studentId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ku.cete.domain.student.StudentProfileItemAttributeValueExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.StudentProfileItemAttributeValue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.StudentProfileItemAttributeValue
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    delete from public.StudentProfileItemAttributeValue
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ku.cete.domain.student.StudentProfileItemAttributeValueExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    delete from public.StudentProfileItemAttributeValue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ku.cete.domain.student.StudentProfileItemAttributeValue" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    insert into public.StudentProfileItemAttributeValue (selectedValue, createdDate, 
      createdUser, activeFlag, modifiedDate, 
      modifiedUser, profileItemAttributenameAttributeContainerId, studentId
      )
    values (#{selectedValue,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{createdUser,jdbcType=INTEGER}, #{activeFlag,jdbcType=BIT}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{modifiedUser,jdbcType=INTEGER}, #{profileItemAttributenameAttributeContainerId,jdbcType=BIGINT},
      #{studentId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.student.StudentProfileItemAttributeValue" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    insert into public.StudentProfileItemAttributeValue
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="selectedValue != null" >
        selectedValue,
      </if>
      <if test="createdDate != null" >
        createdDate,
      </if>
      <if test="createdUser != null" >
        createdUser,
      </if>
      <if test="activeFlag != null" >
        activeFlag,
      </if>
      <if test="modifiedDate != null" >
        modifiedDate,
      </if>
      <if test="modifiedUser != null" >
        modifiedUser,
      </if>
      <if test="profileItemAttributenameAttributeContainerId != null" >
        ProfileItemAttributenameAttributeContainerId,
      </if>
      <if test="studentId != null" >
        studentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="selectedValue != null" >
        #{selectedValue,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="activeFlag != null" >
        #{activeFlag,jdbcType=BIT},
      </if>
      <if test="modifiedDate != null" >
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null" >
        #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="profileItemAttributenameAttributeContainerId != null" >
        #{profileItemAttributenameAttributeContainerId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ku.cete.domain.student.StudentProfileItemAttributeValueExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    select count(*) from public.StudentProfileItemAttributeValue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByStateStudentIdentifier" parameterType="java.lang.Long" resultType="edu.ku.cete.web.StudentProfileItemAttributeDTO">
 	SELECT 
		spiav.id, spiav.studentid AS studentId, s.statestudentidentifier AS stateStudentIdentifier,
		spiav.profileitemattributenameattributecontainerid as attributeNameAttributeContainerId,
		piac.id AS attributeContainerId, piac.attributecontainer AS attributeContainerName,
		pia.id AS attributeNameId, pia.attributename AS attributeName,
		spiav.selectedvalue AS selectedValue
	FROM 
		profileitemattribute pia 
			JOIN profileItemAttributenameAttributeContainer pianc ON pia.id =  pianc.attributenameid
			JOIN profileitemattributecontainer piac ON pianc.attributecontainerid = piac.id
			JOIN studentprofileitemattributevalue spiav ON  pianc.id = spiav.profileItemAttributenameAttributeContainerId
			JOIN student s ON spiav.studentid = s.id
	WHERE spiav.studentid = #{studentId}
	AND spiav.activeflag = TRUE
	ORDER By piac.attributecontainer, pia.attributename
  </select>

  <select id="selectAllAttributesDataAndStudentSelection" resultType="edu.ku.cete.web.StudentProfileItemAttributeDTO"> 		
		(SELECT DISTINCT
			pianc.id as "id",pia.id as "attributeNameId",pia.attributename as "attributeName",
			piac.id as "attributeContainerId",piac.attributecontainer as "attributeContainerName",
			 spiav.studentid as "studentId", spiav.selectedvalue as "selectedValue",
			 case when pss.viewoption is not null then pss.viewoption when pianacvo.viewoption is not null then pianacvo.viewoption else 'enable' end as "viewOption"
		FROM 
			profileitemattribute pia 
				JOIN profileItemAttributenameAttributeContainer pianc ON pia.id =  pianc.attributenameid
				JOIN profileitemattributecontainer piac ON pianc.attributecontainerid = piac.id
				LEFT JOIN studentprofileitemattributevalue spiav ON pianc.id = spiav.profileitemattributenameattributecontainerid
				LEFT OUTER JOIN profileitemattrnameattrcontainerviewoptions pianacvo ON pianacvo.pianacid = pianc.id and pianacvo.assessmentprogramid = #{currentAssessmentProgramId, jdbcType=BIGINT}
				INNER JOIN enrollment enrl on enrl.studentid = spiav.studentid and enrl.activeflag = true
				inner join student st on st.id = enrl.studentid
				left join pnpstatesettings pss on pss.pinacid = pianc.id and 
				pss.assessmentprogramid = #{currentAssessmentProgramId, jdbcType=BIGINT} and pss.activeflag is true
				and pss.stateid = st.stateid
			WHERE spiav.studentid = #{studentId,jdbcType=BIGINT} and spiav.activeflag = true
			and enrl.currentschoolyear = #{currentSchoolYear, jdbcType=INTEGER}
			 order by piac.attributecontainer, pia.attributename)
		UNION ALL 	
		SELECT 
			distinct pianc.id as "id",pia.id as "attributeNameId",pia.attributename as "attributeName",
			piac.id as "attributeContainerId",piac.attributecontainer as "attributeContainerName",
			0 as "studentId", '' as "selectedValue", 
			case when pss.viewoption is not null then pss.viewoption when pianacvo.viewoption is not null then pianacvo.viewoption else 'enable' end as "viewOption"
		FROM 
			profileitemattribute pia 
				JOIN profileItemAttributenameAttributeContainer pianc ON pia.id =  pianc.attributenameid
				JOIN profileitemattributecontainer piac ON pianc.attributecontainerid = piac.id
				LEFT JOIN profileitemattrnameattrcontainerviewoptions pianacvo ON pianacvo.pianacid = pianc.id and pianacvo.assessmentprogramid = #{currentAssessmentProgramId, jdbcType=BIGINT}
				INNER JOIN enrollment enrl on enrl.studentid = #{studentId,jdbcType=BIGINT} and enrl.currentschoolyear =#{currentSchoolYear, jdbcType=INTEGER}
				inner join student st on st.id = enrl.studentid
				left join pnpstatesettings pss on pss.pinacid = pianc.id and pss.assessmentprogramid = #{currentAssessmentProgramId, jdbcType=BIGINT}
				and pss.stateid = st.stateid and pss.activeflag is true
  </select>
  
  
  <select id="selectAllAttributesAndContainers" resultType="edu.ku.cete.web.StudentProfileItemAttributeDTO" > 	
		SELECT 
			pianc.id as "id",pia.id as "attributeNameId",pia.attributename as "attributeName",
			piac.id as "attributeContainerId",piac.attributecontainer as "attributeContainerName"
		FROM 
			profileitemattribute pia 
				JOIN profileItemAttributenameAttributeContainer pianc ON pia.id =  pianc.attributenameid
				JOIN profileitemattributecontainer piac ON pianc.attributecontainerid = piac.id
			
  </select>
  
  <select id="selectStudentAttributesAndContainers" resultType="edu.ku.cete.web.StudentProfileItemAttributeDTO"> 
	
      SELECT DISTINCT pianc.id as "id",pia.id as "attributeNameId",pia.attributename as "attributeName",
            piac.id as "attributeContainerId",piac.attributecontainer as "attributeContainerName",
            spiav.selectedvalue as "selectedValue", pianacvo.viewoption as "viewOption"
     FROM profileitemattribute pia 
	    JOIN profileItemAttributenameAttributeContainer pianc ON pia.id =  pianc.attributenameid
	    JOIN profileitemattributecontainer piac ON pianc.attributecontainerid = piac.id
	    LEFT JOIN studentprofileitemattributevalue spiav ON pianc.id = spiav.profileitemattributenameattributecontainerid
        LEFT OUTER JOIN profileitemattrnameattrcontainerviewoptions pianacvo ON pianacvo.pianacid = pianc.id and pianacvo.assessmentprogramid =#{currentAssessmentProgramId, jdbcType=BIGINT}
	    INNER JOIN enrollment enrl on enrl.studentid = spiav.studentid and enrl.activeflag = true
    WHERE spiav.studentid = #{studentId,jdbcType=BIGINT} and spiav.activeflag = true and
	   enrl.currentschoolyear =#{currentSchoolYear, jdbcType=INTEGER}
			order by piac.attributecontainer;
 </select>
  
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    update public.StudentProfileItemAttributeValue
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.selectedValue != null" >
        selectedValue = #{record.selectedValue,jdbcType=VARCHAR},
      </if>
      <if test="record.activeFlag != null" >
        activeFlag = #{record.activeFlag,jdbcType=BIT},
      </if>
      <if test="record.modifiedDate != null" >
        modifiedDate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedUser != null" >
        modifiedUser = #{record.modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="record.profileItemAttributenameAttributeContainerId != null" >
        profileItemAttributenameAttributeContainerId = #{record.profileItemAttributenameAttributeContainerId,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null" >
        studentId = #{record.studentId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    update public.StudentProfileItemAttributeValue
    set
      selectedValue = #{record.selectedValue,jdbcType=VARCHAR},
      activeFlag = #{record.activeFlag,jdbcType=BIT},
      modifiedDate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      modifiedUser = #{record.modifiedUser,jdbcType=INTEGER},
      profileItemAttributenameAttributeContainerId = #{record.profileItemAttributenameAttributeContainerId,jdbcType=BIGINT},
      studentId = #{record.studentId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.student.StudentProfileItemAttributeValue" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    update public.StudentProfileItemAttributeValue
    <set >
      <if test="selectedValue != null" >
        selectedValue = #{selectedValue,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        createdDate = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        createdUser = #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="activeFlag != null" >
        activeFlag = #{activeFlag,jdbcType=BIT},
      </if>
      <if test="modifiedDate != null" >
        modifiedDate = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null" >
        modifiedUser = #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="profileItemAttributenameAttributeContainerId != null" >
        profileItemAttributenameAttributeContainerId = #{profileItemAttributenameAttributeContainerId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        studentId = #{studentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.student.StudentProfileItemAttributeValue" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 16 20:43:08 CST 2013.
    -->
    update public.StudentProfileItemAttributeValue
    set selectedValue = #{selectedValue,jdbcType=VARCHAR},
      createdDate = #{createdDate,jdbcType=TIMESTAMP},
      createdUser = #{createdUser,jdbcType=INTEGER},
      activeFlag = #{activeFlag,jdbcType=BIT},
      modifiedDate = #{modifiedDate,jdbcType=TIMESTAMP},
      modifiedUser = #{modifiedUser,jdbcType=INTEGER},
      profileItemAttributenameAttributeContainerId = #{profileItemAttributenameAttributeContainerId,jdbcType=BIGINT},
      studentId = #{studentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <resultMap id="PNPResultMap" type="edu.ku.cete.web.StudentProfileItemAttributeDTO">
    <result column="studentid" jdbcType="BIGINT" property="studentId" />
     <result column="attributename" jdbcType="VARCHAR" property="attributeName" />
     <result column="attributecontainer" jdbcType="VARCHAR" property="attributeContainerName" />
    <result column="selectedvalue" jdbcType="VARCHAR" property="selectedValue" />
    <result column="attributenameattributecontainerid" jdbcType="VARCHAR" property="attributeNameAttributeContainerId" />
  </resultMap>
  
  <select id="selectStudentProfileItemAttribute" resultMap="PNPResultMap">
	select piac.attributecontainer as attributename, pianac.id as attributenameattributecontainerid , spav.selectedvalue
	from profileitemattributenameattributecontainer pianac
	join profileitemattribute pia on pianac.attributenameid = pia.id and pia.attributename = 'assignedSupport'
	join profileitemattributecontainer piac on pianac.attributecontainerid = piac.id  
	left join studentprofileitemattributevalue spav on pianac.id = spav.profileitemattributenameattributecontainerid and spav.studentid = #{studentId,jdbcType=BIGINT} and spav.activeflag = true
	where piac.attributecontainer in 
	<foreach close=")" collection="itemAttributeList" item="itemAttribute" open="(" separator=",">
      #{itemAttribute}
    </foreach>
  </select>  
  <select id="selectStudentProfileItemContainer" resultMap="PNPResultMap">
	select studentid, pia.attributename, selectedvalue, pianac.id as attributenameattributecontainerid
	from profileitemattributenameattributecontainer pianac
	join profileitemattribute pia  on pianac.attributenameid = pia.id 
	left join studentprofileitemattributevalue spav on pianac.id = spav.profileitemattributenameattributecontainerid and spav.studentid = #{studentId,jdbcType=BIGINT} and spav.activeflag = true
	where  pia.attributename in 
	<foreach close=")" collection="itemAttributeList" item="itemAttribute" open="(" separator=",">
      #{itemAttribute}
    </foreach>
  </select>
  
  <select id="countValuesInAttributeAndContainerForStudentIds" parameterType="map" resultType="Long">
    SELECT COUNT(spiav.id)
    FROM studentprofileitemattributevalue spiav
        INNER JOIN profileitemattributenameattributecontainer pianac
        ON spiav.profileitemattributenameattributecontainerid = pianac.id
        INNER JOIN profileitemattributecontainer piac
        ON pianac.attributecontainerid = piac.id
        INNER JOIN profileitemattribute pia
        ON pianac.attributenameid = pia.id
    WHERE spiav.studentid IN 
        <foreach collection="studentIds" item="studentId" open="(" close=")" separator=",">
          #{studentId,jdbcType=BIGINT}
        </foreach>
        AND spiav.activeflag = TRUE
        AND piac.attributecontainer = #{containerName,jdbcType=VARCHAR}
        AND pia.attributename = #{attributeName,jdbcType=VARCHAR}
        <!--
        use LIKE because of containers like setting/presentation/response,
        where all of the values are comma-separated in ONE db record
         -->
        <choose>
	        <when test="condition == 'LIKE'">
	        	AND spiav.selectedvalue LIKE ('%' || #{value,jdbcType=VARCHAR} || '%')
	        </when>
	        <otherwise>
	        	AND spiav.selectedvalue = #{value,jdbcType=VARCHAR}
	        </otherwise>
        </choose>
  </select>
  
  <select id="getStudentIdsWithAttributeValueForStudents" parameterType="map" resultType="Long">
    SELECT DISTINCT spiav.studentid
    FROM studentprofileitemattributevalue spiav
        INNER JOIN profileitemattributenameattributecontainer pianac
        ON spiav.profileitemattributenameattributecontainerid = pianac.id
        INNER JOIN profileitemattributecontainer piac
        ON pianac.attributecontainerid = piac.id
        INNER JOIN profileitemattribute pia
        ON pianac.attributenameid = pia.id
    WHERE spiav.studentid IN 
        <foreach collection="studentIds" item="studentId" open="(" close=")" separator=",">
          #{studentId,jdbcType=BIGINT}
        </foreach>
        AND spiav.activeflag = TRUE
        AND piac.attributecontainer = #{containerName,jdbcType=VARCHAR}
        AND pia.attributename = #{attributeName,jdbcType=VARCHAR}
        <!--
        use LIKE because of containers like setting/presentation/response,
        where all of the values are comma-separated in ONE db record
        -->
        <choose>
	        <when test="condition == 'LIKE'">
	        	AND spiav.selectedvalue LIKE ('%' || #{value,jdbcType=VARCHAR} || '%')
	        </when>
	        <otherwise>
	        	AND spiav.selectedvalue = #{value,jdbcType=VARCHAR}
	        </otherwise>
        </choose>
  </select>
 
  <select id="selectStudentPNPValuesByTestSession" parameterType="map" resultType="String">  
  	select A.studentpnpvalues from 
	(select 	
		case when (piac.attributecontainer='itemTranslationDisplay' and pia.attributename ='assignedSupport' and selectedvalue='true') 
			then sts.studentid || ',' || pia.attributename || ',' || selectedvalue 
		     when (pia.attributename ='largePrintBooklet' and selectedvalue='true') then sts.studentid || ',' || pia.attributename || ',' || selectedvalue 		
		     when (pia.attributename ='paperAndPencil' and selectedvalue='true') then sts.studentid || ',' || pia.attributename || ',' || selectedvalue 	
		     when (pia.attributename ='Language' ) then sts.studentid || ',' || pia.attributename || ',' || selectedvalue 
		end as studentpnpvalues 	
			from testsession tss 
			join studentstests sts on sts.testsessionid = tss.id and sts.testcollectionid = tss.testcollectionid 
			join studentprofileitemattributevalue spiav on sts.studentid = spiav.studentid 
			join profileitemattributenameattributecontainer pianac on spiav.profileitemattributenameattributecontainerid = pianac.id 
			join profileitemattributecontainer piac on pianac.attributecontainerid = piac.id 
			join profileitemattribute pia on pianac.attributenameid = pia.id 
			join student st on sts.studentid = st.id 
			where pia.attributename in 
				<foreach close=")" collection="itemAttributeList" item="itemAttribute" open="(" separator=",">
			      #{itemAttribute}
			    </foreach> 
			and spiav.activeflag = true
			and tss.activeflag is true and spiav.activeflag is true
			and 'DLM' not in (
      		  select ap.abbreviatedname
      		  from assessmentprogram ap
      		  inner join studentassessmentprogram sap on (sap.studentid = st.id and ap.id = sap.assessmentprogramid)
      		  where sap.activeflag = true 
      		)
      		and tss.id=#{testSessionId,jdbcType=BIGINT}
			order by pia.attributename
	) as A 
	where A.studentpnpvalues is not null
  </select>

 	<select id="getStudentPNPAttributes" resultType="edu.ku.cete.domain.ProfileAttribute">
	SELECT lower(pia.attributename) as attrName, piac.id as attrContainerId, lower(piac.attributecontainer) as attrContainer,
		lower(spiav.selectedvalue) as attrValue
		FROM profileitemattribute pia 
		INNER JOIN profileItemAttributenameAttributeContainer pianc ON pia.id=pianc.attributenameid 
		INNER JOIN profileitemattributecontainer piac ON pianc.attributecontainerid = piac.id INNER JOIN 
		studentprofileitemattributevalue spiav ON pianc.id = spiav.profileitemattributenameattributecontainerid 
		where spiav.activeflag = true and spiav.studentid = #{studentId,jdbcType=BIGINT};
	</select>
	
   <select id= "getStudentValueJson" resultType="java.lang.String">
	select jsontext from studentpnpjson where studentid = #{studentId,jdbcType=BIGINT} and activeflag is true;
   </select>
  
  <select id="existsStudentPNPAttributes" resultType="java.lang.Boolean">
  	select exists(select studentid from studentpnpjson where studentid = #{studentPNPAttributes.studentId,jdbcType=BIGINT} and activeflag is true)
  </select>

  <insert id="insertStudentPNPAttributes">
  	insert into studentpnpjson (studentid, jsontext, createddate, createduser, activeflag, modifieddate, modifieduser)
    values (#{studentPNPAttributes.studentId,jdbcType=BIGINT}, #{studentPNPAttributes.jsonText,jdbcType=VARCHAR},
    #{studentPNPAttributes.createdDate,jdbcType=TIMESTAMP}, #{studentPNPAttributes.createdUser,jdbcType=BIGINT},
	true, #{studentPNPAttributes.modifiedDate,jdbcType=TIMESTAMP}, #{studentPNPAttributes.modifiedUser,jdbcType=BIGINT})
  </insert>

  <update id="updateStudentPNPAttributes">
  	update studentpnpjson set jsontext = #{studentPNPAttributes.jsonText,jdbcType=VARCHAR},
  	modifieddate = #{studentPNPAttributes.modifiedDate,jdbcType=TIMESTAMP},
	modifieduser = #{studentPNPAttributes.modifiedUser,jdbcType=BIGINT}
  	where studentid = #{studentPNPAttributes.studentId,jdbcType=BIGINT}
  	and activeflag is true
  </update>
  
  <update id="updateStudentPNPOption">
    select upsertstudentpnpoption(
      #{studentId,jdbcType=BIGINT},
      #{containerName,jdbcType=VARCHAR},
      #{attributeName,jdbcType=VARCHAR},
      #{value,jdbcType=VARCHAR},
      #{userId,jdbcType=BIGINT}
    )
  </update>
  
  <update id="removeActivateByDefaultsFromContainersWithoutSupport">
    with studentcontainerwithoutsupport as (
      select distinct piac.*
      from profileitemattributenameattributecontainer pianac
      join profileitemattributecontainer piac on pianac.attributecontainerid = piac.id and piac.activeflag is true
      join profileitemattribute pia on pianac.attributenameid = pia.id and pia.activeflag is true
      left join studentprofileitemattributevalue spiav
        on pianac.id = spiav.profileitemattributenameattributecontainerid
        and spiav.studentid = #{studentId,jdbcType=BIGINT}
        and spiav.activeflag is true
      where pianac.activeflag is true
      and pia.attributename = 'assignedSupport'
      and (spiav.selectedvalue = 'false' or spiav.id is null)
    )
    update studentprofileitemattributevalue
    set selectedvalue = 'false',
    modifieddate = now(),
    modifieduser = #{userId,jdbcType=BIGINT}
    where selectedvalue = 'true'
    and studentid = #{studentId,jdbcType=BIGINT}
    and profileitemattributenameattributecontainerid in (
      select distinct pianac.id
      from profileitemattributenameattributecontainer pianac
      join profileitemattributecontainer piac on pianac.attributecontainerid = piac.id and piac.activeflag is true
      join profileitemattribute pia on pianac.attributenameid = pia.id and pia.activeflag is true
      where pianac.activeflag is true
      and pia.attributename = 'activateByDefault'
      and piac.id in (select id from studentcontainerwithoutsupport)
    )
  </update>
  
  <select id="selectStudentAttributesAndContainersByAttributeName" resultType="edu.ku.cete.web.StudentProfileItemAttributeDTO"> 		
		select t1.* from((SELECT DISTINCT
			pianc.id as "id",pia.id as "attributeNameId",pia.attributename as "attributeName",
			piac.id as "attributeContainerId",piac.attributecontainer as "attributeContainerName",
			 spiav.studentid as "studentId", spiav.selectedvalue as "selectedValue",
			 case when pss.viewoption is not null then pss.viewoption when pianacvo.viewoption is not null then pianacvo.viewoption else 'enable' end as viewOption
		FROM 
			profileitemattribute pia 
				JOIN profileItemAttributenameAttributeContainer pianc ON pia.id =  pianc.attributenameid 
				<if test="attributeName != null" >
				and pia.attributename=#{attributeName,jdbcType=VARCHAR}
				</if>
				JOIN profileitemattributecontainer piac ON pianc.attributecontainerid = piac.id
				LEFT JOIN studentprofileitemattributevalue spiav ON pianc.id = spiav.profileitemattributenameattributecontainerid
				LEFT OUTER JOIN profileitemattrnameattrcontainerviewoptions pianacvo ON pianacvo.pianacid = pianc.id and pianacvo.assessmentprogramid = #{currentAssessmentProgramId, jdbcType=BIGINT}
				INNER JOIN enrollment enrl on enrl.studentid = spiav.studentid and enrl.activeflag = true
				inner join student st on st.id = enrl.studentid
				left join pnpstatesettings pss on pss.pinacid = pianc.id and 
				pss.assessmentprogramid = #{currentAssessmentProgramId, jdbcType=BIGINT} and pss.activeflag is true
				and pss.stateid = st.stateid
			WHERE spiav.studentid = #{studentId,jdbcType=BIGINT} and spiav.activeflag = true
			and enrl.currentschoolyear = #{currentSchoolYear, jdbcType=INTEGER}
			 order by piac.attributecontainer, pia.attributename)
		UNION ALL 	
		SELECT 
			distinct pianc.id as "id",pia.id as "attributeNameId",pia.attributename as "attributeName",
			piac.id as "attributeContainerId",piac.attributecontainer as "attributeContainerName",
			0 as "studentId", '' as "selectedValue", 
			case when pss.viewoption is not null then pss.viewoption when pianacvo.viewoption is not null then pianacvo.viewoption else 'enable' end as viewOption
		FROM 
			profileitemattribute pia 
				JOIN profileItemAttributenameAttributeContainer pianc ON pia.id =  pianc.attributenameid 
				<if test="attributeName != null" >
				and pia.attributename=#{attributeName,jdbcType=VARCHAR}
				</if>
				JOIN profileitemattributecontainer piac ON pianc.attributecontainerid = piac.id
				LEFT JOIN profileitemattrnameattrcontainerviewoptions pianacvo ON pianacvo.pianacid = pianc.id and pianacvo.assessmentprogramid = #{currentAssessmentProgramId, jdbcType=BIGINT}
				INNER JOIN enrollment enrl on enrl.studentid = #{studentId,jdbcType=BIGINT} and enrl.currentschoolyear =#{currentSchoolYear, jdbcType=INTEGER}
				inner join student st on st.id = enrl.studentid
				left join pnpstatesettings pss on pss.pinacid = pianc.id and pss.assessmentprogramid = #{currentAssessmentProgramId, jdbcType=BIGINT}
				and pss.stateid = st.stateid and pss.activeflag is true) as t1 where t1.viewoption=#{viewOption,jdbcType=VARCHAR}
  </select>
</mapper>