<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ku.cete.model.SpecialCircumstanceMapper">
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.SpecialCircumstance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="specialcircumstancetype" jdbcType="VARCHAR" property="specialCircumstanceType" />
    <result column="cedscode" jdbcType="BIGINT" property="cedsCode" />
    <result column="ksdecode" jdbcType="VARCHAR" property="ksdeCode" />
    <result column="assessmentprogramid" jdbcType="BIGINT" property="assessmentProgramId" />
    <result column="activeflag" jdbcType="BIT" property="activeFlag" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="createduser" jdbcType="INTEGER" property="createdUser" />
    <result column="modifieddate" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="modifieduser" jdbcType="INTEGER" property="modifiedUser" />
    <result column="requireconfirmation" jdbcType="BIT" property="requireConfirmation" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="paperpencilcode" jdbcType="VARCHAR" property="paperPencilCode" />
    <result column="statusid" jdbcType="VARCHAR" property="statusId" />
    <result column="statuscode" jdbcType="VARCHAR" property="statusCode" />
    <result column="statusname" jdbcType="VARCHAR" property="statusName" />
    <result column="sscid" jdbcType="BIGINT" property="sscId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    id, specialcircumstancetype, cedscode, ksdecode, assessmentprogramid, activeflag, 
    createdate, createduser, modifieddate, modifieduser, requireconfirmation
  </sql>
  <select id="selectByExample" parameterType="edu.ku.cete.domain.SpecialCircumstanceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from specialcircumstance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from specialcircumstance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="edu.ku.cete.domain.SpecialCircumstance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('specialcircumstance_id_seq')
    </selectKey>
    insert into specialcircumstance (id, specialcircumstancetype, cedscode, 
      ksdecode, assessmentprogramid, activeflag, 
      createdate, createduser, modifieddate, 
      modifieduser, requireconfirmation)
    values (#{id,jdbcType=BIGINT}, #{specialCircumstanceType,jdbcType=VARCHAR}, #{cedsCode,jdbcType=BIGINT}, 
      #{ksdeCode,jdbcType=VARCHAR}, #{assessmentProgramId,jdbcType=BIGINT}, #{activeFlag,jdbcType=BIT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createdUser,jdbcType=INTEGER}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{modifiedUser,jdbcType=INTEGER}, #{requireConfirmation,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.SpecialCircumstance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('specialcircumstance_id_seq')
    </selectKey>
    insert into specialcircumstance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="specialCircumstanceType != null">
        specialcircumstancetype,
      </if>
      <if test="cedsCode != null">
        cedscode,
      </if>
      <if test="ksdeCode != null">
        ksdecode,
      </if>
      <if test="assessmentProgramId != null">
        assessmentprogramid,
      </if>
      <if test="activeFlag != null">
        activeflag,
      </if>
      <if test="createDate != null">
        createdate,
      </if>
      <if test="createdUser != null">
        createduser,
      </if>
      <if test="modifiedDate != null">
        modifieddate,
      </if>
      <if test="modifiedUser != null">
        modifieduser,
      </if>
      <if test="requireConfirmation != null">
        requireconfirmation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="specialCircumstanceType != null">
        #{specialCircumstanceType,jdbcType=VARCHAR},
      </if>
      <if test="cedsCode != null">
        #{cedsCode,jdbcType=BIGINT},
      </if>
      <if test="ksdeCode != null">
        #{ksdeCode,jdbcType=VARCHAR},
      </if>
      <if test="assessmentProgramId != null">
        #{assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="activeFlag != null">
        #{activeFlag,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null">
        #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="requireConfirmation != null">
        #{requireConfirmation,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.SpecialCircumstance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    update specialcircumstance
    <set>
      <if test="specialCircumstanceType != null">
        specialcircumstancetype = #{specialCircumstanceType,jdbcType=VARCHAR},
      </if>
      <if test="cedsCode != null">
        cedscode = #{cedsCode,jdbcType=BIGINT},
      </if>
      <if test="ksdeCode != null">
        ksdecode = #{ksdeCode,jdbcType=VARCHAR},
      </if>
      <if test="assessmentProgramId != null">
        assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="activeFlag != null">
        activeflag = #{activeFlag,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        createdate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        createduser = #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null">
        modifieduser = #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="requireConfirmation != null">
        requireconfirmation = #{requireConfirmation,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.SpecialCircumstance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 29 14:54:52 CST 2015.
    -->
    update specialcircumstance
    set specialcircumstancetype = #{specialCircumstanceType,jdbcType=VARCHAR},
      cedscode = #{cedsCode,jdbcType=BIGINT},
      ksdecode = #{ksdeCode,jdbcType=VARCHAR},
      assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT},
      activeflag = #{activeFlag,jdbcType=BIT},
      createdate = #{createDate,jdbcType=TIMESTAMP},
      createduser = #{createdUser,jdbcType=INTEGER},
      modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      modifieduser = #{modifiedUser,jdbcType=INTEGER},
      requireconfirmation = #{requireConfirmation,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from specialcircumstance
  </select>
  
  <select id="getCEDSList" resultMap="BaseResultMap">
  
	(select sc.id, sc.specialcircumstancetype, sc.cedscode, sc.ksdecode, sc.assessmentprogramid, sc.activeflag, 
    sc.createdate, sc.createduser, sc.modifieddate, sc.modifieduser, sc.requireconfirmation from specialcircumstance sc
	INNER JOIN assessmentprogram ap ON sc.assessmentprogramid=ap.id 
	where ap.programname=#{assessmentProgramName,jdbcType=VARCHAR} and sc.activeflag='true' and (sc.cedscode!=9999 and sc.specialcircumstancetype NOT LIKE 'Other%')
	group by sc.id
	order by sc.specialcircumstancetype asc) UNION ALL
	(select sc.id, sc.specialcircumstancetype, sc.cedscode, sc.ksdecode, sc.assessmentprogramid, sc.activeflag, 
    sc.createdate, sc.createduser, sc.modifieddate, sc.modifieduser, sc.requireconfirmation from specialcircumstance sc
	INNER JOIN assessmentprogram ap ON sc.assessmentprogramid=ap.id 
	where ap.programname=#{assessmentProgramName,jdbcType=VARCHAR} and sc.activeflag='true' and (sc.cedscode=9999 or sc.specialcircumstancetype LIKE 'Other%')
	group by sc.id
	order by sc.specialcircumstancetype asc) 
	
  </select>
	<select id="getCEDSByUserState" resultMap="BaseResultMap">
	select sc.id, sc.description, sc.specialcircumstancetype, sc.cedscode, sc.ksdecode, sc.assessmentprogramid, sc.activeflag, 
    sc.createdate, sc.createduser, sc.modifieddate, sc.modifieduser, ssc.requireconfirmation, ssc.paperpencilcode
    from specialcircumstance sc
	INNER JOIN statespecialcircumstance ssc ON ssc.specialcircumstanceid=sc.id 
	where ssc.stateid=#{stateId,jdbcType=BIGINT} and sc.activeflag='true'
	order by sc.specialcircumstancetype asc
  </select>

  <select id="getCountOfRestrictedCodesByState" resultType="java.lang.Long">
	select count(1) from statespecialcircumstance ssc
	where ssc.stateid = #{stateId,jdbcType=BIGINT} 
	and ssc.requireconfirmation is true
	and ssc.activeflag is true
  </select>
  
  <select id="getSCEntriesByStateAndAssessmentProgram" parameterType="map" resultMap="BaseResultMap">
    SELECT DISTINCT
      sc.id, sc.description, sc.specialcircumstancetype, sc.cedscode, sc.ksdecode, sc.assessmentprogramid,
      sc.createdate, sc.createduser, ssc.requireconfirmation, ssc.paperpencilcode
    FROM specialcircumstance sc
    JOIN statespecialcircumstance ssc ON sc.id = ssc.specialcircumstanceid AND ssc.activeflag IS TRUE
    WHERE sc.activeflag IS TRUE
    AND (
      sc.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
      OR sc.assessmentprogramid IS NULL
    )
    AND ssc.stateid = #{stateId,jdbcType=BIGINT}
    ORDER BY sc.specialcircumstancetype
  </select>
  
  <select id="getAppliedSCCodesByStudentsTestsId" parameterType="map" resultMap="BaseResultMap">
    SELECT
      sc.id, sc.description, sc.specialcircumstancetype, sc.cedscode, sc.ksdecode, sc.assessmentprogramid,
      sc.createdate, sc.createduser, statesc.requireconfirmation, statesc.paperpencilcode,
      c.id as statusid, c.categorycode as statuscode, c.categoryname as statusname,
      ssc.id as sscid
    FROM studentstests st
    JOIN studentspecialcircumstance ssc ON st.id = ssc.studenttestid AND ssc.activeflag IS TRUE
    JOIN category c ON ssc.status = c.id
    JOIN specialcircumstance sc ON ssc.specialcircumstanceid = sc.id AND sc.activeflag IS TRUE
    JOIN student s ON st.studentid = s.id AND s.activeflag IS TRUE
    LEFT JOIN statespecialcircumstance statesc ON s.stateid = statesc.stateid AND sc.id = statesc.specialcircumstanceid
    WHERE st.activeflag IS TRUE
    AND st.id = #{studentsTestsId,jdbcType=BIGINT}
    ORDER BY ssc.modifieddate DESC
  </select>
</mapper>