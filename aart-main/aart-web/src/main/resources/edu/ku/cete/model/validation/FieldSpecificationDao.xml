<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.validation.FieldSpecificationDao" >

  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    fieldSpec.id,fieldSpec.mappedName, fieldSpec.fieldname, fieldSpec.allowablevalues, fieldSpec.minimum, fieldSpec.maximum,
    fieldSpec.formatregex, fieldSpec.fieldlength, fieldSpec.showError, fieldSpec.rejectifempty,
    fieldspec.isKeyValuePairField,
    fieldSpec.rejectifinvalid, fieldspec.fieldtype,fieldSpec.minimumregex, fieldSpec.maximumregex, fieldSpec.regexmodeflags, fieldSpecRel.required,
    fieldSpecRel.sortorder
  </sql>
  <select id="getFieldSpecificationMap" resultType="edu.ku.cete.domain.validation.FieldSpecification" parameterType="edu.ku.cete.domain.validation.FieldSpecificationExample" >   
    select
    <if test="distinct" >
      distinct
    </if>
    fieldSpec.id,fieldSpecRel.mappedName, fieldSpec.fieldname, fieldSpec.allowablevalues, fieldSpec.minimum, fieldSpec.maximum,
    fieldSpec.formatregex, fieldSpec.fieldlength, fieldSpec.showError, fieldSpec.rejectifempty,
    fieldspec.isKeyValuePairField,
    fieldSpec.rejectifinvalid, fieldspec.fieldtype,fieldSpec.minimumregex, fieldSpec.maximumregex, fieldSpec.regexmodeflags, fieldSpecRel.required,
    fieldSpecRel.jsondata::TEXT as jsondata, fieldSpecRel.sortorder
    from public.fieldspecification fieldSpec,public.fieldspecificationsrecordtypes fieldSpecRel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
      and
    </if>
    <if test="_parameter == null" >
      where 
    </if>
    fieldSpec.id = fieldSpecRel.fieldspecificationid
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByExample" resultType="edu.ku.cete.domain.validation.FieldSpecification" parameterType="edu.ku.cete.domain.validation.FieldSpecificationExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.fieldspecification fieldSpec,public.fieldspecificationsrecordtypes fieldSpecRel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
      and
    </if>
    <if test="_parameter == null" >
      where 
    </if>
    fieldSpec.id = fieldSpecRel.fieldspecificationid
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultType="edu.ku.cete.domain.validation.FieldSpecification" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.fieldspecification
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    delete from public.fieldspecification
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ku.cete.domain.validation.FieldSpecificationExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    delete from public.fieldspecification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ku.cete.domain.validation.FieldSpecification" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    insert into fieldSpecification (mappedName, fieldName, allowableValues, 
      minimum, maximum, fieldLength, showError,
      rejectIfEmpty,isKeyValuePairField, rejectIfInvalid)
    values (#{mappedName,jdbcType=VARCHAR},#{fieldName,jdbcType=VARCHAR}, 
    #{allowableValues,jdbcType=VARCHAR}, 
      #{minimum,jdbcType=BIGINT}, #{maximum,jdbcType=BIGINT}, #{fieldLength,jdbcType=INTEGER},
      #{showError,jdbcType=BIT}, 
      #{rejectIfEmpty,jdbcType=BIT},
      #{isKeyValuePairField,jdbcType=BIT}, 
      #{rejectIfInvalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.validation.FieldSpecification" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    insert into fieldspecification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mappedName != null" >
        mappedname,
      </if>
      <if test="fieldName != null" >
        fieldname,
      </if>
      <if test="allowableValues != null" >
        allowablevalues,
      </if>
      <if test="minimum != null" >
        minimum,
      </if>
      <if test="maximum != null" >
        maximum,
      </if>
      <if test="minimumRegex!= null" >
        minimumregex,
      </if>
      <if test="maximumRegex != null" >
        maximumregex,
      </if>
      <if test="fieldLength != null" >
        fieldlength,
      </if>
      <if test="showError != null" >
        showerror,
      </if>
      <if test="rejectIfEmpty != null" >
        rejectifempty,
      </if>
      <if test="isKeyValuePairField != null" >
        isKeyValuePairField,
      </if>
      <if test="rejectIfInvalid != null" >
        rejectifinvalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mappedName != null" >
        #{mappedName,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null" >
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="allowableValues != null" >
        #{allowableValues,jdbcType=VARCHAR},
      </if>
      <if test="minimum != null" >
        #{minimum,jdbcType=BIGINT},
      </if>
      <if test="maximum != null" >
        #{maximum,jdbcType=BIGINT},
      </if>
      <if test="minimumRegex!= null" >
        #{minimumRegex,jdbcType=BIGINT},
      </if>
      <if test="maximumRegex != null" >
        #{maximumRegex,jdbcType=BIGINT},
      </if>
      <if test="fieldLength != null" >
        #{fieldLength,jdbcType=INTEGER},
      </if>
      <if test="showError != null" >
        #{showError,jdbcType=BIT},
      </if>
      <if test="rejectIfEmpty != null" >
        #{rejectIfEmpty,jdbcType=BIT},
      </if>
      <if test="isKeyValuePairField != null" >
        #{isKeyValuePairField,jdbcType=BIT},
      </if>
      <if test="rejectIfInvalid != null" >
        #{rejectIfInvalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ku.cete.domain.validation.FieldSpecificationExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    select count(*) from public.fieldspecification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    update public.fieldspecification
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mappedName != null" >
        mappedName = #{record.mappedName,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldName != null" >
        fieldname = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.allowableValues != null" >
        allowablevalues = #{record.allowableValues,jdbcType=VARCHAR},
      </if>
      <if test="record.minimum != null" >
        minimum = #{record.minimum,jdbcType=BIGINT},
      </if>
      <if test="record.maximum != null" >
        maximum = #{record.maximum,jdbcType=BIGINT},
      </if>
      <if test="record.minimumRegex != null" >
        minimumregex = #{record.minimumRegex,jdbcType=BIGINT},
      </if>
      <if test="record.maximumRegex != null" >
        maximumregex = #{record.maximumRegex,jdbcType=BIGINT},
      </if>
      <if test="record.fieldLength != null" >
        fieldlength = #{record.fieldLength,jdbcType=INTEGER},
      </if>
      <if test="record.showError != null" >
        showError = #{record.showError,jdbcType=BIT},
      </if>
      <if test="record.rejectIfEmpty != null" >
        rejectifempty = #{record.rejectIfEmpty,jdbcType=BIT},
      </if>
      <if test="record.isKeyValuePairField != null" >
        isKeyValuePairField = #{record.isKeyValuePairField,jdbcType=BIT},
      </if>
      <if test="record.rejectIfInvalid != null" >
        rejectifinvalid = #{record.rejectIfInvalid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    update public.fieldspecification
    set 
      mappedName = #{record.mappedName,jdbcType=VARCHAR},
      fieldname = #{record.fieldName,jdbcType=VARCHAR},
      allowablevalues = #{record.allowableValues,jdbcType=VARCHAR},
      minimum = #{record.minimum,jdbcType=BIGINT},
      maximum = #{record.maximum,jdbcType=BIGINT},
      fieldlength = #{record.fieldLength,jdbcType=INTEGER},
      showError = #{record.showError,jdbcType=BIT},
      rejectifempty = #{record.rejectIfEmpty,jdbcType=BIT},
      isKeyValuePairField = #{record.isKeyValuePairField,jdbcType=BIT},
      rejectifinvalid = #{record.rejectIfInvalid,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.validation.FieldSpecification" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    update public.fieldspecification
    <set >
      <if test="mappedName != null" >
        mappedName = #{mappedName,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null" >
        fieldname = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="allowableValues != null" >
        allowablevalues = #{allowableValues,jdbcType=VARCHAR},
      </if>
      <if test="minimum != null" >
        minimum = #{minimum,jdbcType=BIGINT},
      </if>
      <if test="maximum != null" >
        maximum = #{maximum,jdbcType=BIGINT},
      </if>
       <if test="minimumRegex != null" >
        minimumregex = #{minimumRegex,jdbcType=BIGINT},
      </if>
      <if test="maximumRegex != null" >
        maximumregex = #{maximumRegex,jdbcType=BIGINT},
      </if>
      <if test="fieldLength != null" >
        fieldlength = #{fieldLength,jdbcType=INTEGER},
      </if>
      <if test="showError != null" >
        showError = #{showError,jdbcType=BIT},
      </if>
      <if test="rejectIfEmpty != null" >
        rejectifempty = #{rejectIfEmpty,jdbcType=BIT},
      </if>
      <if test="isKeyValuePairField != null" >
        isKeyValuePairField = #{isKeyValuePairField,jdbcType=BIT},
      </if>
      <if test="rejectIfInvalid != null" >
        rejectifinvalid = #{rejectIfInvalid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.validation.FieldSpecification" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 16:56:04 CDT 2012.
    -->
    update public.fieldspecification
    set mappedName = #{mappedName,jdbcType=VARCHAR},
      fieldname = #{fieldName,jdbcType=VARCHAR},
      allowablevalues = #{allowableValues,jdbcType=VARCHAR},
      minimum = #{minimum,jdbcType=BIGINT},
      maximum = #{maximum,jdbcType=BIGINT},
      fieldlength = #{fieldLength,jdbcType=INTEGER},
      showError = #{showError,jdbcType=BIT},
      isKeyValuePairField = #{isKeyValuePairField,jdbcType=BIT},
      rejectifempty = #{rejectIfEmpty,jdbcType=BIT},
      rejectifinvalid = #{rejectIfInvalid,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <select id="selectByFieldCodeAndTypeCode" resultType="edu.ku.cete.domain.validation.FieldSpecification" parameterType="edu.ku.cete.domain.validation.FieldSpecificationExample" >
    SELECT distinct 
	  fieldSpec.id,
      fieldSpecRel.mappedName,
      fieldSpec.fieldname,
      fieldSpec.allowablevalues,
      fieldSpec.minimum,
      fieldSpec.maximum,
      fieldSpec.formatregex,
      fieldSpec.fieldlength,
      fieldSpec.showError,
      fieldSpec.rejectifempty,
      fieldspec.isKeyValuePairField,
      fieldSpec.rejectifinvalid,
      fieldSpec.fieldtype,
      fieldSpec.minimumregex,
      fieldSpec.maximumregex,
      fieldSpec.regexmodeflags,
      fieldSpecRel.required,
      fieldSpecRel.jsondata::TEXT as jsondata,
      fieldSpecRel.sortorder
    FROM public.fieldspecification fieldSpec,
      public.fieldspecificationsrecordtypes fieldSpecRel
	WHERE (fieldSpecRel.recordtypeid = #{recordTypeId,jdbcType=BIGINT})
  	  AND fieldSpec.id = fieldSpecRel.fieldspecificationid
  	  AND fieldSpecRel.activeflag IS TRUE
  </select>

 <select id="selectByFieldCodeAndTypeCodeForKids" resultType="edu.ku.cete.domain.validation.FieldSpecification" parameterType="edu.ku.cete.domain.validation.FieldSpecificationExample" >
    SELECT DISTINCT
	  fieldSpec.id,
      fieldSpec.mappedName,
      fieldSpec.fieldname,
      fieldSpec.allowablevalues,
      fieldSpec.minimum,
      fieldSpec.maximum,
      fieldSpec.formatregex,
      fieldSpec.fieldlength,
      fieldSpec.showError,
      fieldSpec.rejectifempty,
      fieldspec.isKeyValuePairField,
      fieldSpec.rejectifinvalid,
      fieldSpec.fieldtype,
      fieldSpec.minimumregex,
      fieldSpec.maximumregex,
      fieldSpec.regexmodeflags,
      fieldSpecRel.required,
      fieldSpecRel.jsondata::TEXT as jsondata,
      fieldSpecRel.sortorder
    FROM public.fieldspecification fieldSpec,
      public.fieldspecificationsrecordtypes fieldSpecRel
	WHERE (fieldSpecRel.recordtypeid = #{recordTypeId,jdbcType=BIGINT})
  	  AND fieldSpec.id = fieldSpecRel.fieldspecificationid
  	  AND fieldSpecRel.activeflag IS TRUE
  </select>
  
  <select id="selectPNPColumnsBySettingsForAssessmentProgramAndOrganization" resultType="edu.ku.cete.domain.validation.FieldSpecification" parameterType="map">
    with disabled_items as (
      select distinct piac.id as containerid, piac.attributecontainer, pia.id as attributeid, pia.attributename, pnp.parentid, pianac.id as pianacid
      from profileitemattributecontainer piac
      join profileitemattributenameattributecontainer pianac on piac.id = pianac.attributecontainerid and pianac.activeflag is true
      join profileitemattribute pia on pianac.attributenameid = pia.id and pia.activeflag is true
      join pnpaccomodations pnp on pianac.id = pnp.pianacid
      where piac.activeflag is true
      and pianac.id in (
        select pianacid as pianacid
        from profileitemattrnameattrcontainerviewoptions
        where viewoption ~* 'disable|hide|hidden'
        and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
        union
        select pinacid as pianacid
        from pnpstatesettings
        where viewoption ~* 'disable|hide|hidden'
        and stateid = #{organizationId,jdbcType=BIGINT}
        and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
      )
    )
    select distinct
      fs.id,
      fsrt.mappedName,
      fs.fieldname,
      fs.allowablevalues,
      fs.minimum,
      fs.maximum,
      fs.formatregex,
      fs.fieldlength,
      fs.showError,
      fs.rejectifempty,
      fs.isKeyValuePairField,
      fs.rejectifinvalid,
      fs.fieldtype,
      fs.minimumregex,
      fs.maximumregex,
      fs.regexmodeflags,
      fsrt.required,
      fsrt.jsondata::TEXT as jsondata,
      fsrt.sortorder
    from profileitemattributenameattributecontainer pianac
    join profileitemattributecontainer piac on pianac.attributecontainerid = piac.id and piac.activeflag is true
    join profileitemattribute pia on pianac.attributenameid = pia.id and pia.activeflag is true
    join fieldspecificationsrecordtypes fsrt
      on fsrt.activeflag is true
      and jsondata::text ~* ('"containerName":\s*"' || piac.attributecontainer || '"')
      and jsondata::text ~* ('"attributeName":\s*"' || pia.attributename || '"')
    join fieldspecification fs on fsrt.fieldspecificationid = fs.id and fs.activeflag is true
    join category c on fsrt.recordtypeid = c.id
    join categorytype ct on c.categorytypeid = ct.id
    where pianac.activeflag is true
    and ct.typecode = 'CSV_RECORD_TYPE'
    and c.categorycode = 'PERSONAL_NEEDS_PROFILE_RECORD_TYPE'
    and piac.id not in (
      select containerid
      from disabled_items
      where lower(attributename) = lower('assignedSupport')
      and parentid is null
    )
    and pianac.id not in (select pianacid from disabled_items)
    order by fsrt.sortorder
  </select>
</mapper>