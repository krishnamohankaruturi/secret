<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.StudentAssessmentProgramMapper" >
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.StudentAssessmentProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 11 13:39:06 IST 2015.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="studentid" property="studentId" jdbcType="BIGINT" />
    <result column="assessmentprogramid" property="assessmentProgramId" jdbcType="BIGINT" />
    <result column="activeflag" property="activeFlag" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 11 13:39:06 IST 2015.
    -->
    id, studentid, assessmentprogramid, activeflag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 11 13:39:06 IST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from studentassessmentprogram
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="edu.ku.cete.domain.StudentAssessmentProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 11 13:39:06 IST 2015.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT nextval('studentassessmentprogram_id_seq')
    </selectKey>
    insert into studentassessmentprogram (id, studentid, assessmentprogramid, 
      activeflag)
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{assessmentProgramId,jdbcType=BIGINT}, 
      #{activeFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.StudentAssessmentProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 11 13:39:06 IST 2015.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT nextval('studentassessmentprogram_id_seq')
    </selectKey>
    insert into studentassessmentprogram
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="studentId != null" >
        studentid,
      </if>
      <if test="assessmentProgramId != null" >
        assessmentprogramid,
      </if>
      <if test="activeFlag != null" >
        activeflag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="assessmentProgramId != null" >
        #{assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="activeFlag != null" >
        #{activeFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  
  <delete id="deleteAssessmentPrograms" parameterType="Long">
  	delete from studentassessmentprogram where studentid = #{studentId}
   </delete>
  
  <insert id="insertMultipleAssessmentProgram" parameterType="java.util.Map" >
    insert into studentassessmentprogram (studentid, assessmentprogramid) values (
        <foreach collection="assessmentProgramIds" item="assessmentProgramId" open="" close="" separator="),(">
             #{studentId},#{assessmentProgramId}
        </foreach>
        );
   </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.StudentAssessmentProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 11 13:39:06 IST 2015.
    -->
    update studentassessmentprogram
    <set >
      <if test="studentId != null" >
        studentid = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="assessmentProgramId != null" >
        assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="activeFlag != null" >
        activeflag = #{activeFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.StudentAssessmentProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 11 13:39:06 IST 2015.
    -->
    update studentassessmentprogram
    set studentid = #{studentId,jdbcType=BIGINT},
      assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT},
      activeflag = #{activeFlag,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getByStudentId" resultType="StudentAssessmentProgram" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 11 13:39:06 IST 2015.
    -->
    <!-- Do not check activeflag as true here because it should return all the assessment program based on the student id-->
    select 
    <include refid="Base_Column_List" />
    from studentassessmentprogram
    where studentid = #{studentId,jdbcType=BIGINT}
  </select>
  
  <select id="isStudentInAssessmentProgram" resultType="Boolean" parameterType="map">
    select
      case when exists (
        select 1
        from studentassessmentprogram
        where studentid = #{studentId} and assessmentprogramid = #{apId} and activeflag = true
      )
      then true
      else false end;
  </select>
  <select id="isStudentOnlyInThisAssessmentProgram" resultType="Boolean" parameterType="map">   
     	select 	(
   				(select count(*)
				from studentassessmentprogram sap
				join assessmentprogram ap on sap.assessmentprogramid = ap.id
				where sap.studentid = #{studentId} and sap.activeflag = true and ap.abbreviatedname = #{assessmentProgramAbbrName})
			-	
				(select count(*)
				from studentassessmentprogram sap
				join assessmentprogram ap on sap.assessmentprogramid = ap.id
				where sap.studentid = #{studentId} and sap.activeflag = true 
				and ap.abbreviatedname != #{assessmentProgramAbbrName}
				<if test="assessmentProgramAbbrName!= null and assessmentProgramAbbrName == 'DLM'">
					and ap.abbreviatedname not in('I-SMART')
				</if>
				)
    		> 0
      	)   
  </select>  
   <select id="updateAndReturnByStudentId" resultMap="BaseResultMap" >
    UPDATE studentassessmentprogram SET activeflag= false where studentid = #{studentId,jdbcType=BIGINT}  RETURNING id, studentid, assessmentprogramid, activeflag
   </select>
   
  <update id="deactivateByStudentIdAndAssessmentProgramId">
    UPDATE studentassessmentprogram
    SET activeflag = FALSE
    WHERE studentid = #{studentId,jdbcType=BIGINT}
    AND assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
  </update>
  
  <update id="deactivateStudentIdAndAssessmentProgramIds">
    UPDATE studentassessmentprogram
    SET activeflag = FALSE
    WHERE studentid = #{studentId,jdbcType=BIGINT}
    AND assessmentprogramid = ANY(ARRAY
      <foreach collection="assessmentProgramIds" item="apId" open="[" close="]" separator=",">
        #{apId,jdbcType=BIGINT}
      </foreach>)
  </update>
  
    <update id="deactivateByorgIdAndassessmentId">
    UPDATE studentassessmentprogram
    SET activeflag = FALSE, modifieddate = now(), modifieduser = #{modifiedUserId,jdbcType=BIGINT}    
    WHERE studentid in (select distinct e.studentid from enrollment e
						where e.activeflag is true 
						and e.currentschoolyear = #{schoolYear,jdbcType=BIGINT} 
						and e.attendanceschoolid in (select id from organization_children_active_or_inactive(#{organizationId,jdbcType=BIGINT}) where organizationtypeid = 
					(select id from organizationtype where typecode = 'SCH')))	
	and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
	and activeflag is true					
    </update> 
    
    <select id="getStudentAssessPgmId" resultType="Long">
    	select assessmentprogramid
    	from studentassessmentprogram
    	where studentid = (select id from student where statestudentidentifier = #{stateStudentIdentifier} and stateid = #{stateId})
    	limit 1
  	</select>
   
   
    <select id="getStudentAssessPgmIds" resultType="Long">
    	select assessmentprogramid
    	from studentassessmentprogram
    	where studentid = (select id from student where statestudentidentifier = #{stateStudentIdentifier} and stateid = #{stateId})
  	</select>
   
</mapper>