<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ku.cete.model.DailyAccessCodeMapper">
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.DailyAccessCode">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 05 22:17:27 CST 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="contentareaid" jdbcType="BIGINT" property="contentAreaId" />
    <result column="gradecourseid" jdbcType="BIGINT" property="gradeCourseId" />
    <result column="stageid" jdbcType="BIGINT" property="stageId" />
    <result column="partnumber" jdbcType="INTEGER" property="partNumber" />
    <result column="createduser" jdbcType="BIGINT" property="createdUser" />
    <result column="createddate" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="modifieduser" jdbcType="BIGINT" property="modifiedUser" />
    <result column="modifieddate" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="effectivedate" jdbcType="TIMESTAMP" property="effectiveDate" />
    <result column="accesscode" jdbcType="VARCHAR" property="accessCode" />
    <result column="operationaltestwindowid" jdbcType="BIGINT" property="operationalTestwindowId" />
    <result column="contentareaname" jdbcType="VARCHAR" property="contentAreaName" />
    <result column="gradecoursename" jdbcType="VARCHAR" property="gradeCourseName" />
    <result column="gradebandid" jdbcType="BIGINT" property="gradeBandId" />
    <result column="gradebandname" jdbcType="VARCHAR" property="gradeBandName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 05 22:17:27 CST 2016.
    -->
    id, contentareaid, gradecourseid, stageid, partnumber, createduser, createddate, 
    modifieduser, modifieddate, effectivedate, accesscode, operationaltestwindowid, gradebandid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 05 22:17:27 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from dailyaccesscode
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="edu.ku.cete.domain.DailyAccessCode">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 05 22:17:27 CST 2016.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('dailyaccesscode_id_seq')
    </selectKey>
    insert into dailyaccesscode (id, contentareaid, gradecourseid, 
      stageid, partnumber, createduser, 
      createddate, modifieduser, modifieddate, 
      effectivedate, accesscode, operationaltestwindowid, gradebandid
      )
    values (#{id,jdbcType=BIGINT}, #{contentAreaId,jdbcType=BIGINT}, #{gradeCourseId,jdbcType=BIGINT}, 
      #{stageId,jdbcType=BIGINT}, #{partNumber,jdbcType=INTEGER}, #{createdUser,jdbcType=BIGINT}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{modifiedUser,jdbcType=BIGINT}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{effectiveDate,jdbcType=DATE}, #{accessCode,jdbcType=VARCHAR}, #{operationalTestwindowId,jdbcType=BIGINT},
      #{gradeBandId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.DailyAccessCode">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 05 22:17:27 CST 2016.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('dailyaccesscode_id_seq')
    </selectKey>
    insert into dailyaccesscode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="contentAreaId != null">
        contentareaid,
      </if>
      <if test="gradeCourseId != null">
        gradecourseid,
      </if>
      <if test="stageId != null">
        stageid,
      </if>
      <if test="partNumber != null">
        partnumber,
      </if>
      <if test="createdUser != null">
        createduser,
      </if>
      <if test="createdDate != null">
        createddate,
      </if>
      <if test="modifiedUser != null">
        modifieduser,
      </if>
      <if test="modifiedDate != null">
        modifieddate,
      </if>
      <if test="effectiveDate != null">
        effectivedate,
      </if>
      <if test="accessCode != null">
        accesscode,
      </if>
      <if test="operationalTestwindowId != null">
        operationaltestwindowid,
      </if>
      <if test=" gradeBandId != null">
        gradebandid,
 	  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="contentAreaId != null">
        #{contentAreaId,jdbcType=BIGINT},
      </if>
      <if test="gradeCourseId != null">
        #{gradeCourseId,jdbcType=BIGINT},
      </if>
      <if test="stageId != null">
        #{stageId,jdbcType=BIGINT},
      </if>
      <if test="partNumber != null">
        #{partNumber,jdbcType=INTEGER},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null">
        #{modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveDate != null">
        #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="accessCode != null">
        #{accessCode,jdbcType=VARCHAR},
      </if>
      <if test="operationalTestwindowId != null">
        #{operationalTestwindowId,jdbcType=BIGINT},
      </if>
      <if test="gradeBandId != null">
       #{ gradeBandId,jdbcType=BIGINT},
 	  </if>   
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.DailyAccessCode">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 05 22:17:27 CST 2016.
    -->
    update dailyaccesscode
    <set>
      <if test="contentAreaId != null">
        contentareaid = #{contentAreaId,jdbcType=BIGINT},
      </if>
      <if test="gradeCourseId != null">
        gradecourseid = #{gradeCourseId,jdbcType=BIGINT},
      </if>
      <if test="stageId != null">
        stageid = #{stageId,jdbcType=BIGINT},
      </if>
      <if test="partNumber != null">
        partnumber = #{partNumber,jdbcType=INTEGER},
      </if>
      <if test="createdUser != null">
        createduser = #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null">
        createddate = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null">
        modifieduser = #{modifiedUser,jdbcType=BIGINT},
      </if>
      <if test="modifiedDate != null">
        modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveDate != null">
        effectivedate = #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="accessCode != null">
        accesscode = #{accessCode,jdbcType=VARCHAR},
      </if>
      <if test="operationalTestwindowId != null">
        operationaltestwindowid = #{operationalTestwindowId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.DailyAccessCode">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 05 22:17:27 CST 2016.
    -->
    update dailyaccesscode
    set contentareaid = #{contentAreaId,jdbcType=BIGINT},
      gradecourseid = #{gradeCourseId,jdbcType=BIGINT},
      stageid = #{stageId,jdbcType=BIGINT},
      partnumber = #{partNumber,jdbcType=INTEGER},
      createduser = #{createdUser,jdbcType=BIGINT},
      createddate = #{createdDate,jdbcType=TIMESTAMP},
      modifieduser = #{modifiedUser,jdbcType=BIGINT},
      modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      effectivedate = #{effectiveDate,jdbcType=DATE},
      accesscode = #{accessCode,jdbcType=VARCHAR},
      operationaltestwindowid = #{operationalTestwindowId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findExistingAccessCodes" resultMap="BaseResultMap" parameterType="edu.ku.cete.domain.DailyAccessCode">
   select 
    <include refid="Base_Column_List" />
    from dailyaccesscode where contentareaid = #{contentAreaId,jdbcType=BIGINT} 
    	<if test="gradeCourseId != null">
    		and gradecourseid = #{gradeCourseId,jdbcType=BIGINT} 
    	</if>
    	<if test="gradeBandId != null">
    		and gradebandid = #{gradeBandId,jdbcType=BIGINT}
    	</if>
    	
    	and stageid = #{stageId,jdbcType=BIGINT} and operationaltestwindowid = #{operationalTestwindowId,jdbcType=BIGINT}
  </select>
  
  <select id="getDailyAccessCodes" resultMap="BaseResultMap" >
	  	<include refid="getDailyAccessCodeQuery" /> 
	  	<if test="dacCriteriaMap.contentAreaName != null">
		 		AND ca.name ilike #{dacCriteriaMap.contentAreaName}
		 </if>
		<if test="dacCriteriaMap.gradeCourseName != null">
	 		AND gc.name ilike #{dacCriteriaMap.gradeCourseName}
	 	</if>	
	 	<if test="dacCriteriaMap.gradeBandName != null">
	 		AND gb.name ilike #{dacCriteriaMap.gradeBandName}
	 	</if>		
	 	<if test="sortByColumn != null">
	     		ORDER BY 
	     		<if test="!includeGradeBand ">	 
	      	<choose>
	      		<!-- F820 Grids Sort Order -->
	      		<when test="sortByColumn == 'contentAreaName,gradeCourseName'">ca.name, gc.name</when>
	      		<when test="sortByColumn == 'contentAreaName'">ca.name</when>
	      		<when test="sortByColumn == 'gradeCourseName'">gc.name</when>
	      		<otherwise>ca.name</otherwise>
			</choose> 
			</if>
			<if test="includeGradeBand ">	 
	      	<choose>
	      		<!-- F820 Grids Sort Order -->
	      		<when test="sortByColumn == 'contentAreaName,gradeBandName'">ca.name, gb.name</when>
	      		<when test="sortByColumn == 'contentAreaName'">ca.name</when>
	      		<when test="sortByColumn == 'gradeBandName'">gb.name</when>
	      		<otherwise>ca.name</otherwise>
			</choose> 
			</if>
	      <if test="sortType!=null and sortType=='desc'">
	    		desc
    	  </if>
    	  <if test="sortType=='asc' or sortType==null">
    	 		asc
    	  </if>
	    </if>
	   <if test="limit != null and limit != 0 ">
			limit #{limit} 
		</if>
		<if test="offset!=null">
			offset #{offset}
		</if>
	    
	</select>
  
   <select id="getCountDailyAccessCode" resultType="INTEGER" >
	 select count(dacCount.*) from (<include refid="getDailyAccessCodeQuery" />) as dacCount
	</select>
  
  <sql id="getDailyAccessCodeQuery">
  	select distinct dac.contentareaid,<!--  dac.gradecourseid , --> ca.name as contentareaname, 
  	<if test="!includeGradeBand ">
  	gc.name as gradecoursename ,
  	</if>
  	<if test="includeGradeBand ">
  	gb.name as gradebandname ,
  	</if>
  	<if test="!includeGradeBand ">
	dac.gradecourseid  
	</if>
	<if test="includeGradeBand ">
	dac.gradebandid 
	</if>
  	from dailyaccesscode dac
			join operationaltestwindow otw on dac.operationaltestwindowid = otw.id
			join operationaltestwindowstate otws on otw.id = otws.operationaltestwindowid
			join contentarea ca on ca.id = dac.contentareaid
			<if test="userId != null">
			join roster rs on rs.statesubjectareaid=ca.id and rs.teacherid=#{userId,jdbcType=BIGINT} and rs.activeflag is true 
			join enrollmentsrosters enr on enr.rosterid=rs.id and enr.activeflag is true
			join enrollment en on en.id=enr.enrollmentid and en.activeflag is true and en.currentschoolyear=#{currentSchoolyear,jdbcType=BIGINT}
			</if>
			<if test="!includeGradeBand ">
			join gradecourse gc on gc.id = dac.gradecourseid
			</if>
			<if test="includeGradeBand ">
			join gradeband gb on gb.id = dac.gradebandid
			</if>
			<!-- join gradecourse gc on gc.id = dac.gradecourseid --> 
			join stage stg on stg.id = dac.stageid and stg.activeflag is true
			where 
			otw.assessmentprogramid=#{assessmentProgramId,jdbcType=BIGINT}
			and otws.stateid = #{stateId,jdbcType=BIGINT}
			and dac.effectivedate = to_date(#{testDate},'MM/DD/YYYY')			
  </sql>
  
  
  <resultMap id="ExtendedResultMap" type="edu.ku.cete.domain.DailyAccessCode" extends="BaseResultMap">
	    <result column="begindate" jdbcType="TIMESTAMP" property="beginDate" />
	    <result column="enddate" jdbcType="TIMESTAMP" property="endDate" />
	    <result column="contentareaname" jdbcType="VARCHAR" property="contentAreaName" />
	    <result column="gradecode" jdbcType="VARCHAR" property="gradeCode" />
	    <result column="stagename" jdbcType="VARCHAR" property="stageName" />
	    <result column="stagecode" jdbcType="VARCHAR" property="stageCode" />
	    <result column="assessmentprogramcode" jdbcType="VARCHAR" property="assessmentProgramCode" />
	    <result column="gradebandcode" jdbcType="VARCHAR" property="gradeBandCode" />    
  </resultMap>
  
  <select id="findByApDateSubjectAndGrade" resultMap="ExtendedResultMap">
   SELECT dac.id, dac.operationaltestwindowid, dac.contentareaid, dac.gradecourseid, dac.gradebandid, dac.stageid, 
       dac.partnumber, dac.effectivedate, dac.accesscode, otwsr.dacstarttime as begindate, 
       otwsr.dacendtime as enddate,
       ca.name as contentareaname, gc.abbreviatedname as gradecode, stg.name as stagename, stg.code as stagecode, 
       ap.abbreviatedname as assessmentprogramcode, gb.abbreviatedname as gradebandcode
	  FROM dailyaccesscode dac
	inner join operationaltestwindow otw on dac.operationaltestwindowid=otw.id
	inner join operationaltestwindowstate otws on otw.id = otws.operationaltestwindowid
	inner join contentarea ca on ca.id=dac.contentareaid
	left join gradecourse gc on gc.id=dac.gradecourseid
	left join gradeband gb on gb.id=dac.gradebandid 
	inner join assessmentprogram ap on ap.id = otw.assessmentprogramid 
	inner join stage stg on stg.id=dac.stageid
	inner join operationaltestwindowsessionrule otwsr on otwsr.operationaltestwindowid=otw.id
	WHERE otwsr.activeflag is true and otwsr.sessionruleid = (select id from category where categorycode='DAILY_ACCESS_CODES')
	AND otw.assessmentprogramid=#{assessmentProgramId,jdbcType=BIGINT}
	and otws.stateid = #{stateId,jdbcType=BIGINT}
	and dac.effectivedate=#{effectiveDate,jdbcType=DATE}
	and (dac.contentareaid, 
	<if test="!isPLTW">
	dac.gradecourseid
	</if>
	<if test="isPLTW">
	dac.gradebandid
	</if>
	) in 
	<foreach item="entries" index="index" collection="cgList" open="(" separator="," close=")">
	    <foreach item="value" index="key" collection="entries" open="(" separator="),(" close=")">
	        #{key},#{value}
	    </foreach>
    </foreach>
  </select>
  <select id="findByApAndDate" resultMap="ExtendedResultMap">
  	SELECT distinct dac.contentareaid, dac.gradecourseid, ca.name as contentareaname, gc.abbreviatedname as gradecode
		  FROM dailyaccesscode dac
			inner join operationaltestwindow otw on dac.operationaltestwindowid=otw.id
			inner join contentarea ca on ca.id=dac.contentareaid
			inner join gradecourse gc on gc.id=dac.gradecourseid
		WHERE otw.assessmentprogramid=#{assessmentProgramId,jdbcType=BIGINT}
			and dac.effectivedate=#{effectiveDate,jdbcType=DATE}  
			and now() &lt;= otw.expirydate
  </select>
</mapper>