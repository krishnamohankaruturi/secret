<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.student.survey.StudentSurveyResponseDao" >
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.student.survey.StudentSurveyResponse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="surveyId" property="surveyId" jdbcType="BIGINT" />
    <result column="surveyResponseId" property="surveyResponseId" jdbcType="BIGINT" />
    <result column="createdDate" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="createdUser" property="createdUser" jdbcType="INTEGER" />
    <result column="activeFlag" property="activeFlag" jdbcType="BIT" />
    <result column="modifiedDate" property="modifiedDate" jdbcType="TIMESTAMP" />
    <result column="modifiedUser" property="modifiedUser" jdbcType="INTEGER" />
    <result column="responseText" property="responseText" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    id, surveyId, surveyResponseId, createdDate, createdUser, activeFlag, modifiedDate, 
    modifiedUser, responseText
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ku.cete.domain.student.survey.StudentSurveyResponseExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.StudentSurveyResponse
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.StudentSurveyResponse
    where id = #{id,jdbcType=BIGINT}
  </select>  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    delete from public.StudentSurveyResponse
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ku.cete.domain.student.survey.StudentSurveyResponseExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    delete from public.StudentSurveyResponse
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ku.cete.domain.student.survey.StudentSurveyResponse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    insert into public.StudentSurveyResponse (surveyId, surveyResponseId, 
      createdDate, createdUser, activeFlag, 
      modifiedDate, modifiedUser, responseText
      )
    values (#{surveyId,jdbcType=BIGINT}, #{surveyResponseId,jdbcType=BIGINT}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{createdUser,jdbcType=INTEGER}, #{activeFlag,jdbcType=BIT}, 
      #{modifiedDate,jdbcType=TIMESTAMP}, #{modifiedUser,jdbcType=INTEGER}, #{responseText,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.student.survey.StudentSurveyResponse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    insert into public.StudentSurveyResponse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="surveyId != null" >
        surveyId,
      </if>
      <if test="surveyResponseId != null" >
        surveyResponseId,
      </if>
      <if test="createdDate != null" >
        createdDate,
      </if>
      <if test="createdUser != null" >
        createdUser,
      </if>
      <if test="activeFlag != null" >
        activeFlag,
      </if>
      <if test="modifiedDate != null" >
        modifiedDate,
      </if>
      <if test="modifiedUser != null" >
        modifiedUser,
      </if>
      <if test="responseText != null" >
        responseText,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="surveyId != null" >
        #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="surveyResponseId != null" >
        #{surveyResponseId,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="activeFlag != null" >
        #{activeFlag,jdbcType=BIT},
      </if>
      <if test="modifiedDate != null" >
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null" >
        #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="responseText != null" >
        #{responseText,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ku.cete.domain.student.survey.StudentSurveyResponseExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    select count(*) from public.StudentSurveyResponse
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    update public.StudentSurveyResponse
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.surveyId != null" >
        surveyId = #{record.surveyId,jdbcType=BIGINT},
      </if>
      <if test="record.surveyResponseId != null" >
        surveyResponseId = #{record.surveyResponseId,jdbcType=BIGINT},
      </if>
      <if test="record.createdDate != null" >
        createdDate = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdUser != null" >
        createdUser = #{record.createdUser,jdbcType=INTEGER},
      </if>
      <if test="record.activeFlag != null" >
        activeFlag = #{record.activeFlag,jdbcType=BIT},
      </if>
      <if test="record.modifiedDate != null" >
        modifiedDate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedUser != null" >
        modifiedUser = #{record.modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="record.responseText != null" >
        responseText = #{record.responseText,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    update public.StudentSurveyResponse
    set id = #{record.id,jdbcType=BIGINT},
      surveyId = #{record.surveyId,jdbcType=BIGINT},
      surveyResponseId = #{record.surveyResponseId,jdbcType=BIGINT},
      createdDate = #{record.createdDate,jdbcType=TIMESTAMP},
      createdUser = #{record.createdUser,jdbcType=INTEGER},
      activeFlag = #{record.activeFlag,jdbcType=BIT},
      modifiedDate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      modifiedUser = #{record.modifiedUser,jdbcType=INTEGER},
      responseText = #{record.responseText,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.student.survey.StudentSurveyResponse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    update public.StudentSurveyResponse
    <set >
      <if test="surveyId != null" >
        surveyId = #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="surveyResponseId != null" >
        surveyResponseId = #{surveyResponseId,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null" >
        createdDate = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        createdUser = #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="activeFlag != null" >
        activeFlag = #{activeFlag,jdbcType=BIT},
      </if>
      <if test="modifiedDate != null" >
        modifiedDate = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null" >
        modifiedUser = #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="responseText != null" >
        responseText = #{responseText,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.student.survey.StudentSurveyResponse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 13 11:42:30 CDT 2013.
    -->
    update public.StudentSurveyResponse
    set surveyId = #{surveyId,jdbcType=BIGINT},
      surveyResponseId = #{surveyResponseId,jdbcType=BIGINT},
      activeFlag = #{activeFlag,jdbcType=BIT},
      modifiedDate = #{modifiedDate,jdbcType=TIMESTAMP},
      modifiedUser = #{modifiedUser,jdbcType=INTEGER},
      responseText = #{responseText,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findByStudentId" resultType="edu.ku.cete.domain.student.survey.Survey" parameterType="java.lang.Long" >
   <!--
   	Selects the survey for a given student with studentId
   -->
    SELECT 
		id AS id, studentid AS studentId, surveyname AS surveyName, createddate AS createdDate,
		createduser AS createdUser, activeflag AS activeFlag, modifieddate AS createdUser,
		modifieduser AS modifiedUser, status, lasteditedoption as lastEditedOption
    FROM public.survey
    WHERE studentid = #{studentId,jdbcType=BIGINT} and activeflag = true
  </select>
  
    <select id="findBySurveyId" resultType="edu.ku.cete.domain.student.survey.Survey" parameterType="java.lang.Long" >
   <!--
   	Selects the survey for a given student with surveyId
   -->
    SELECT 
		id AS id, studentid AS studentId, surveyname AS surveyName, createddate AS createdDate,
		createduser AS createdUser, activeflag AS activeFlag, modifieddate AS createdUser,
		modifieduser AS modifiedUser, status, lasteditedoption as lastEditedOption
    FROM public.survey
    WHERE id = #{surveyId,jdbcType=BIGINT}
  </select>
  <select id="findSurveyByOrgId" resultType="edu.ku.cete.domain.student.survey.Survey" parameterType="java.lang.Long" >
    SELECT 
		id AS id, studentid AS studentId, surveyname AS surveyName, createddate AS createdDate,
		createduser AS createdUser, activeflag AS activeFlag, modifieddate AS createdUser,
		modifieduser AS modifiedUser, status, lasteditedoption as lastEditedOption
    FROM survey
    WHERE activeflag is true and 
    	studentid in (select distinct studentid from organizationtreedetail orglist
    	inner join enrollment enrl on enrl.attendanceschoolid = orglist.schoolid 
    	<!-- removing enrollment active flag check below so that updating first contact surveys will include all
    		students, not just actively enrolled ones. (otherwise they can never be updated between All and Core questions
    		if they miss the initial change) DO NOT enable the Enrollment activeflag check below without being aware of this -->
    	<!-- and enrl.activeflag is true -->
    	where enrl.currentschoolyear = 
    	(select extract(YEAR from schoolenddate) as currentschoolyear from organization 
    		where id = #{organizationId, jdbcType=BIGINT} and activeflag is true)
    	and (orglist.stateid = #{organizationId, jdbcType=BIGINT}))
  </select>
  <insert id="insertSurvey" parameterType="edu.ku.cete.domain.student.survey.Survey" >
  <!--
   	Inserts the survey object values into the table.
   -->   
    INSERT INTO public.survey (studentid, surveyname, status, createddate, modifieddate, createduser, 
    activeflag, modifiedUser,lasteditedoption, includescienceflag, includeelaflag, includemathflag, allquestionsflag)
    VALUES ( #{studentId,jdbcType=BIGINT}, #{surveyName,jdbcType=VARCHAR}, #{status,jdbcType=BIGINT}, #{createdDate,jdbcType=TIMESTAMP}, 
      	#{modifiedDate,jdbcType=TIMESTAMP}, #{createdUser,jdbcType=INTEGER}, #{activeFlag,jdbcType=BIT}, #{modifiedUser,jdbcType=INTEGER},
      	#{lastEditedOption,jdbcType=BIGINT}, #{includeScienceFlag}, #{includeElaFlag}, #{includeMathFlag}, #{allQuestionsFlag})
  </insert>
  
  <update id="updateSurveyStatus" parameterType="edu.ku.cete.domain.student.survey.Survey" >
  <!--
   	Inserts the survey object values into the table.
   -->   
    UPDATE public.survey 
     set status= #{status,jdbcType=BIGINT}
     <if test="modifiedDate != null">
     	, modifieddate = #{modifiedDate,jdbcType=TIMESTAMP}
     </if>
     <if test="modifiedUser != null">
     	, modifieduser = #{modifiedUser,jdbcType=INTEGER}
     </if>
     <if test="lastEditedOption != null">
     	, lasteditedoption = #{lastEditedOption,jdbcType=INTEGER}
     </if>
     where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findResponseValueByResponseId" resultType="String" parameterType="java.lang.Long" >
    select responsevalue 
    from public.surveyresponse 
    where id = (select surveyresponseid from public.studentsurveyresponse where id=#{studentSurveyResponseId,jdbcType=BIGINT})
  </select>
  <select id="findDependentResponses"
    resultMap="BaseResultMap">
		select * from studentsurveyresponse where surveyresponseid in
			 (select id from surveyresponse where labelid in (select id from surveylabel where 
			 labelnumber ~ (select '^(' || array_to_string(array_agg(case when position('_' in labelnumber)>0 
			 then substring(labelnumber from 1 for position('_' in labelnumber)) else labelnumber end),'|') || ')'
			 from surveylabel where id in (select surveylabelid 
			 from surveylabelprerequisite where surveyresponseid=#{responseId} and activeflag is true) and activeflag is true))) 
			 and surveyid=#{surveyId} and activeflag=true;
  </select>
  
  <select id="findResponsesBySurveyId"
    resultMap="BaseResultMap">
		select * from studentsurveyresponse where surveyid=#{surveyId} and activeflag=true;
  </select>
  
   <select id="findDependentResponseLabelsNotInSamePage"
    resultType="edu.ku.cete.domain.student.survey.StudentSurveyResponseLabel">
		 SELECT 
			sl.id AS surveyLabelId, sl.labelnumber AS labelNumber, sl.label AS label,sl.globalpagenum AS globalPageNum,
			sr.id AS surveyResponseId, sr.responselabel AS responseLabel, sr.responsevalue AS responseValue,
			ssr.id AS studentSurveyResponseId, ssr.surveyresponseid AS studentResponseId, 
			ssr.responsetext AS studentSurveyResponseText,
			sl.optional AS optional,
			ssr.activeflag AS activeFlag, ssr.surveyid AS surveyId
			from studentsurveyresponse ssr inner join surveyresponse sr on ssr.surveyresponseid=sr.id inner join surveylabel sl on sr.labelid=sl.id
			where ssr.surveyresponseid in
			  (select id from surveyresponse where labelid in(select id from surveylabel where 
			 labelnumber ~ (select '^(' || array_to_string(array_agg(case when position('_' in labelnumber)>0 then 
			 substring(labelnumber from 1 for position('_' in labelnumber)) else labelnumber end),'|') || ')'
			 from surveylabel where id in (select surveylabelid 
			 from surveylabelprerequisite where prerequisitecondition='and' and activeflag is true) and activeflag is true )))
			 and ssr.activeflag=true and sl.activeflag=true and sl.optional=false and ssr.surveyid=${surveyId} and sr.activeflag=true
  </select>
  
  
</mapper>