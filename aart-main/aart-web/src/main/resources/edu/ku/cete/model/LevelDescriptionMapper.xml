<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ku.cete.model.LevelDescriptionMapper">
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.report.LevelDescription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 29 15:39:22 CDT 2015.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="schoolyear" jdbcType="BIGINT" property="schoolYear" />
    <result column="assessmentprogramid" jdbcType="BIGINT" property="assessmentProgramId" />
    <result column="subjectid" jdbcType="BIGINT" property="subjectId" />
    <result column="gradeid" jdbcType="BIGINT" property="gradeId" />
    <result column="level" jdbcType="BIGINT" property="level" />
    <result column="levelname" jdbcType="VARCHAR" property="levelName" />
    <result column="batchuploadid" jdbcType="BIGINT" property="batchUploadId" />
    <result column="createddate" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="createduser" jdbcType="BIGINT" property="createdUser" />
    <result column="activeflag" jdbcType="BIT" property="activeFlag" />
    <result column="leveldescription" jdbcType="VARCHAR" property="levelDescription" />
    <result column="descriptiontype" jdbcType="VARCHAR" property="descriptionType" />
    <result column="descriptionparagraphpagebottom" jdbcType="VARCHAR" property="descriptionParagraphPageBottom" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 29 15:39:22 CDT 2015.
    -->
    id, schoolyear, assessmentprogramid, subjectid, gradeid, level, 
    levelname, batchuploadid, createddate, createduser, activeflag, leveldescription, descriptiontype, descriptionparagraphpagebottom
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 29 15:39:22 CDT 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from leveldescription
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="edu.ku.cete.domain.report.LevelDescription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 29 15:39:22 CDT 2015.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('leveldescription_id_seq')
    </selectKey>
    insert into leveldescription (id, schoolyear, assessmentprogramid, 
      subjectid, gradeid, level, levelname, 
      batchuploadid, createddate, createduser, 
      activeflag, leveldescription, descriptiontype, descriptionparagraphpagebottom)
    values (#{id,jdbcType=BIGINT}, #{schoolYear,jdbcType=BIGINT}, #{assessmentProgramId,jdbcType=BIGINT}, 
      #{subjectId,jdbcType=BIGINT}, #{gradeId,jdbcType=BIGINT}, #{level,jdbcType=BIGINT}, #{levelName,jdbcType=VARCHAR}, 
      #{batchUploadId,jdbcType=BIGINT}, #{createdDate,jdbcType=TIMESTAMP}, #{createdUser,jdbcType=BIGINT}, 
      #{activeFlag,jdbcType=BIT}, #{levelDescription,jdbcType=VARCHAR},  #{descriptionType,jdbcType=VARCHAR}, #{descriptionParagraphPageBottom,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.report.LevelDescription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 29 15:39:22 CDT 2015.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('leveldescription_id_seq')
    </selectKey>
    insert into leveldescription
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="schoolYear != null">
        schoolyear,
      </if>
      <if test="assessmentProgramId != null">
        assessmentprogramid,
      </if>
      <if test="subjectId != null">
        subjectid,
      </if>
      <if test="gradeId != null">
        gradeid,
      </if>     
      <if test="level != null">
        level,
      </if>
      <if test="levelName != null">
        levelname,
      </if>
      <if test="batchUploadId != null">
        batchuploadid,
      </if>
      <if test="createdDate != null">
        createddate,
      </if>
      <if test="createdUser != null">
        createduser,
      </if>
      <if test="activeFlag != null">
        activeflag,
      </if>
      <if test="levelDescription != null">
        leveldescription,
      </if>
      <if test="descriptionType != null">
        descriptiontype,
      </if>
      <if test="descriptionParagraphPageBottom != null">
        descriptionparagraphpagebottom,
      </if>
      <if test="testingProgramId != null">
        testingprogramid,
      </if>
      <if test="reportCycle != null">
        reportcycle,
      </if>
        <if test="testType != null">
       assessmentcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="schoolYear != null">
        #{schoolYear,jdbcType=BIGINT},
      </if>
      <if test="assessmentProgramId != null">
        #{assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=BIGINT},
      </if>
      <if test="levelName != null">
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="batchUploadId != null">
        #{batchUploadId,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="activeFlag != null">
        #{activeFlag,jdbcType=BIT},
      </if>
      <if test="levelDescription != null">
        #{levelDescription,jdbcType=VARCHAR},
      </if>
      <if test="descriptionType != null">
        #{descriptionType,jdbcType=VARCHAR},
      </if>
      <if test="descriptionParagraphPageBottom != null">
        #{descriptionParagraphPageBottom,jdbcType=VARCHAR},
      </if>
      <if test="testingProgramId != null">
         #{testingProgramId,jdbcType=BIGINT},
      </if>
      <if test="reportCycle != null">
        #{reportCycle,jdbcType=VARCHAR},
      </if>
       <if test="testType != null">
        #{testType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.report.LevelDescription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 29 15:39:22 CDT 2015.
    -->
    update leveldescription
    <set>
      <if test="schoolYear != null">
        schoolyear = #{schoolYear,jdbcType=BIGINT},
      </if>
      <if test="assessmentProgramId != null">
        assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null">
        subjectid = #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="gradeId != null">
        gradeid = #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=BIGINT},
      </if>
      <if test="levelName != null">
        levelname = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="batchUploadId != null">
        batchuploadid = #{batchUploadId,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null">
        createddate = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        createduser = #{createdUser,jdbcType=BIGINT},
      </if>
      <if test="activeFlag != null">
        activeflag = #{activeFlag,jdbcType=BIT},
      </if>
      <if test="levelDescription != null">
        leveldescription = #{levelDescription,jdbcType=VARCHAR},
      </if>
       <if test="descriptionType != null">
        #{descriptionType,jdbcType=VARCHAR},
      </if>
      <if test="descriptionParagraphPageBottom != null">
        #{descriptionParagraphPageBottom,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.report.LevelDescription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 29 15:39:22 CDT 2015.
    -->
    update leveldescription
    set schoolyear = #{schoolYear,jdbcType=BIGINT},
      assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT},
      subjectid = #{subjectId,jdbcType=BIGINT},
      gradeid = #{gradeId,jdbcType=BIGINT},
      level = #{level,jdbcType=BIGINT},
      levelname = #{levelName,jdbcType=VARCHAR},
      batchuploadid = #{batchUploadId,jdbcType=BIGINT},
      createddate = #{createdDate,jdbcType=TIMESTAMP},
      createduser = #{createdUser,jdbcType=BIGINT},
      activeflag = #{activeFlag,jdbcType=BIT},
      leveldescription = #{levelDescription,jdbcType=VARCHAR},
      descriptiontype =  #{descriptionType,jdbcType=VARCHAR},
      descriptionparagraphpagebottom = #{descriptionParagraphPageBottom,jdbcType=VARCHAR} 
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <delete id="deleteAll">
    delete from leveldescription
    <if test="schoolYear != null">
    	where schoolyear = #{schoolYear,jdbcType=BIGINT}
     </if>
  </delete>
  
  <delete id="deleteLevelDescriptions">
    delete from leveldescription
    where assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} and subjectid = #{subjectId,jdbcType=BIGINT}
    <if test="schoolYear != null">
    	and schoolyear = #{schoolYear,jdbcType=BIGINT}
     </if>
     <if test="testingProgramId != null">
    	and testingprogramid = #{testingProgramId,jdbcType=BIGINT}
    </if>
    <if test="reportCycle != null">
    	and reportcycle = #{reportCycle,jdbcType=VARCHAR}
    </if>
  </delete>  
  
  <select id="selectLevelsByAssessmentProgramSubjectGradeYearLevel" resultMap="BaseResultMap">
   	select  <include refid="Base_Column_List" />
   	from leveldescription 
   	where assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
   	 	and subjectid = #{subjectId,jdbcType=BIGINT}
    	and gradeid = #{gradeId,jdbcType=BIGINT}
    	<if test="schoolYear != null">
    		and schoolyear = #{schoolYear,jdbcType=BIGINT}
    	</if>
    	<if test="level != null">
        	and level = #{level,jdbcType=BIGINT}
     	</if>
     	<if test="testingProgramId != null">
    		and testingprogramid = #{testingProgramId,jdbcType=BIGINT}
    	</if>
    order by level
  </select>
  
    <select id="selectLevelsByAssessmentProgramSubjectGradeYearLevelCycle" resultMap="BaseResultMap">
   	select  <include refid="Base_Column_List" />
   	from leveldescription 
   	where assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
   	 	and subjectid = #{contentAreaId,jdbcType=BIGINT}
    	and gradeid = #{gradeId,jdbcType=BIGINT}
    	and schoolyear = #{schoolYear,jdbcType=BIGINT}
        and testingprogramid = #{testingProgramId,jdbcType=BIGINT}
        and reportcycle = #{reportCycle}
        and activeflag is true
        and level = 3
   </select>
			
   <resultMap extends="BaseResultMap" id="ExtBaseResultMap" type="edu.ku.cete.domain.report.LevelDescription">
    <result column="levellowcutscore" jdbcType="BIGINT" property="levelLowCutScore" />
    <result column="levelhighcutscore" jdbcType="BIGINT" property="levelHighCutScore" />
   </resultMap>
  
   <select id="selectLevelsAndTestCutMinMaxByTestId1TestId2" resultMap="ExtBaseResultMap">
   select distinct tcs.*, ld.id, ld.levelname, ld.leveldescription
   from leveldescription ld
	join testcutscores tcs on tcs.assessmentprogramid = ld.assessmentprogramid 
	and tcs.subjectid = ld.subjectid and tcs.gradeid = ld.gradeid and ld.level = tcs.level and ld.testid1 = tcs.testid1 
	<if test="testIds.size &gt; 1">
       and ld.testid2 = tcs.testid2
    </if>
	where 
	ld.testid1 = ANY(ARRAY
    <foreach close="]" collection="testIds" item="testId" open="[" separator=",">
			#{testId}
	</foreach>
	)
   <if test="testIds.size &gt; 1">
        and ld.testid2 = ANY(ARRAY
   		<foreach close="]" collection="testIds" item="testId" open="[" separator=",">
			#{testId}
		</foreach>
	)
   </if>
   <if test="testIds.size == 1">
         and ld.testid2 is null and tcs.testid2 is null
   </if>
    and ld.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} 
    and ld.subjectid = #{subjectId,jdbcType=BIGINT}
	and ld.gradeid = #{gradeId,jdbcType=BIGINT}
  </select>
  
  <select id="selectDistinctLevelsAndTestCutMinMax" resultMap="ExtBaseResultMap">
   select distinct  ld.levelname,ld.level, ld.leveldescription, ld.levelname ,tcs.level, tcs.levellowcutscore, tcs.levelhighcutscore
    from leveldescription ld
	join testcutscores tcs on tcs.assessmentprogramid = ld.assessmentprogramid 
	and tcs.subjectid = ld.subjectid and tcs.gradeid = ld.gradeid and ld.level = tcs.level
	where ld.assessmentprogramid =#{assessmentProgramId,jdbcType=BIGINT} 
    and ld.subjectid = #{subjectId,jdbcType=BIGINT}
	and ld.gradeid = #{gradeId,jdbcType=BIGINT}
	and ld.schoolyear = #{schoolYear,jdbcType=BIGINT}
	order by ld.level
  </select>
  
   <select id="selectLevelDescriptionByLevelId" resultMap="ExtBaseResultMap">
   	Select distinct tcs.*, ld.id, ld.levelname, ld.leveldescription,ld.descriptiontype,ld.descriptionparagraphpagebottom 
   	as descriptionparagraphpagebottom from leveldescription ld 
    join testcutscores tcs on 
    tcs.assessmentprogramid = ld.assessmentprogramid and tcs.subjectid = ld.subjectid and tcs.gradeid = ld.gradeid and tcs.schoolyear = ld.schoolyear and 
	ld.level = tcs.level and ld.testingprogramid = tcs.testingprogramid
   	where ld.schoolyear =  #{schoolYear,jdbcType=BIGINT}
   	and ld.assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
   	and ld.subjectid = #{subjectId,jdbcType=BIGINT} 
   	and ld.testingprogramid = #{testingProgramId,jdbcType=BIGINT} 
   	and ld.gradeid = #{gradeId,jdbcType=BIGINT}
   	and ld.descriptiontype = #{descriptionType,jdbcType=VARCHAR} 
   	and tcs.activeflag is true and ld.activeflag is true
  </select>
  
  <select id="selectLevelDescriptionByLevelIdMdptIdCombinedId" resultMap="BaseResultMap">
   	Select id,schoolyear,assessmentprogramid,subjectid,gradeid,level,levelname,leveldescription,descriptiontype,
   	descriptionparagraphpagebottom from leveldescription 
   	where id in (
   	#{levelId,jdbcType=BIGINT},#{mdptLevelId,jdbcType=BIGINT},#{combinedLevelId,jdbcType=BIGINT})
  </select>
  
  
   <select id="getLevelDescriptionByLevelIdAndTestType" resultMap="BaseResultMap">
   	Select id,schoolyear,assessmentprogramid,subjectid,gradeid,level,levelname,leveldescription,descriptiontype,
   	descriptionparagraphpagebottom from leveldescription 
   	where schoolyear = #{schoolYear,jdbcType=BIGINT}
   	and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
   	and assessmentcode = #{testTypeCode,jdbcType=VARCHAR}
   	and  level = #{levelNumber,jdbcType=BIGINT}
  </select>
  </mapper>