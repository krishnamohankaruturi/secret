<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ku.cete.model.mapper.StudentsTestSectionsDao">
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.StudentsTestSections">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="studentstestid" jdbcType="BIGINT" property="studentsTestId" />
    <result column="testsectionid" jdbcType="BIGINT" property="testSectionId" />
    <result column="ticketno" jdbcType="VARCHAR" property="ticketNo" />
    <result column="statusid" jdbcType="BIGINT" property="statusId" />
    <result column="createddate" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="createduser" jdbcType="INTEGER" property="createdUser" />
    <result column="activeflag" jdbcType="BIT" property="activeFlag" />
    <result column="modifieduser" jdbcType="INTEGER" property="modifiedUser" />
    <result column="modifieddate" jdbcType="TIMESTAMP" property="modifiedDate" />
  </resultMap>
  <sql id="StudentsTestSectionsCriteria_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_StudentsTestSectionsCriteria_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    <where>
      <foreach collection="studentsTestSectionsCriteria.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    id, studentstestid, testsectionid, ticketno, 
    statusid,
    createddate, createduser, activeflag, 
    modifieduser, modifieddate
  </sql>
  <select id="selectByStudentsTestSectionsCriteria"
   parameterType="edu.ku.cete.domain.StudentsTestSectionsCriteria"
    resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.studentstestsections
    <if test="_parameter != null">
      <include refid="StudentsTestSectionsCriteria_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey"
   parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.studentstestsections
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByStudentsTestIdAndStatusId"
   parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.studentstestsections
    where studentstestid in
	<foreach collection="studentsTestsIdsList"
	 item="studentsTestsId" open="(" close=")" separator="," >
	   #{studentsTestsId,jdbcType=BIGINT}
	</foreach>
	and statusId = #{studentsTestSectionsStatusId,jdbcType=BIGINT}
  </select>  
  
  <select id="selectByStudentsTestIdAndStatus" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.studentstestsections
    where studentstestid in
	<foreach collection="studentsTestsIdsList"
	 item="studentsTestsId" open="(" close=")" separator="," >
	   #{studentsTestsId,jdbcType=BIGINT}
	</foreach>
	and statusId in
	<foreach collection="statusIds"
	 item="statusId" open="(" close=")" separator="," >
	   #{statusId,jdbcType=BIGINT}
	</foreach>
	
	</select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    delete from public.studentstestsections
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByStudentsTestSectionsCriteria"
   parameterType="edu.ku.cete.domain.StudentsTestSectionsCriteria">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    delete from public.studentstestsections
    <if test="_parameter != null">
      <include refid="StudentsTestSectionsCriteria_Where_Clause" />
    </if>
  </delete>
  
  <delete id="deleteByStudentsTestsIds">   
    delete from public.studentstestsections
    where studentstestid in    
	<foreach collection="studentsTestsIds" item="studentsTestsId" open="(" close=")" separator="," >
		#{studentsTestsId}
	</foreach>
  </delete>
  
  <insert id="insert" parameterType="edu.ku.cete.domain.StudentsTestSections"
   useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    insert into public.studentstestsections (id, studentstestid, testsectionid, 
      ticketno,statusId, createddate, createduser, 
      activeflag, modifieduser, modifieddate
      )
    values (#{id,jdbcType=BIGINT}, #{studentsTestId,jdbcType=BIGINT},
     #{testSectionId,jdbcType=BIGINT}, 
      #{ticketNo,jdbcType=VARCHAR}, 
      #{statusId,jdbcType=BIGINT},
      #{createdDate,jdbcType=TIMESTAMP},
       #{createdUser,jdbcType=INTEGER}, 
      #{activeFlag,jdbcType=BIT}, #{modifiedUser,jdbcType=INTEGER},
       now()
      )
  </insert>
    <insert id="insertInterim" parameterType="edu.ku.cete.domain.StudentsTestSections"
   useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    <!--
      @vamshikrishna.akundi Adding this change as part of DEFECT DE
      Idea is to generate StudentTestSections Directly from JAVA instead of depending on Randomize Function
    -->
    insert into public.studentstestsections (studentstestid, testsectionid, 
      ticketno,statusId, createddate, createduser, 
      modifieduser, modifieddate
      )
    values ( #{studentsTestId,jdbcType=BIGINT},
     #{testSectionId,jdbcType=BIGINT}, 
      #{ticketNo,jdbcType=VARCHAR}, 
      (select  category.id from public.category 
	JOIN public.categorytype ON category.categorytypeid = categorytype.id
	where categorytype.typecode = 'STUDENT_TESTSECTION_STATUS'
	and category.categorycode = 'unused'),
      #{createdDate,jdbcType=TIMESTAMP},
       #{createdUser,jdbcType=INTEGER}, 
      #{modifiedUser,jdbcType=INTEGER},
       now()
      )
  </insert>
  <insert id="insertSelective"
   parameterType="edu.ku.cete.domain.StudentsTestSections"
    useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    insert into public.studentstestsections
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentsTestId != null">
        studentstestid,
      </if>
      <if test="testSectionId != null">
        testsectionid,
      </if>
      <if test="ticketNo != null">
        ticketno,
      </if>
      <if test="statusId != null">
        statusId,
      </if>
      <if test="createdDate != null">
        createddate,
      </if>
      <if test="createdUser != null">
        createduser,
      </if>
      <if test="activeFlag != null">
        activeflag,
      </if>
      <if test="modifiedUser != null">
        modifieduser,
      </if>
      <if test="modifiedDate != null">
        modifieddate
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentsTestId != null">
        #{studentsTestId,jdbcType=BIGINT},
      </if>
      <if test="testSectionId != null">
        #{testSectionId,jdbcType=BIGINT},
      </if>
      <if test="ticketNo != null">
        #{ticketNo,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=BIGINT},
      </if>      
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="activeFlag != null">
        #{activeFlag,jdbcType=BIT},
      </if>
      <if test="modifiedUser != null">
        #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        now()
      </if>
    </trim>
  </insert>
  <select id="countByStudentsTestSectionsCriteria"
   parameterType="edu.ku.cete.domain.StudentsTestSectionsCriteria"
    resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    select count(*) from public.studentstestsections
    <if test="_parameter != null">
      <include refid="StudentsTestSectionsCriteria_Where_Clause" />
    </if>
  </select>
  <update id="updateByStudentsTestSectionsCriteriaSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    update public.studentstestsections
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.studentsTestId != null">
        studentstestid = #{record.studentsTestId,jdbcType=BIGINT},
      </if>
      <if test="record.testSectionId != null">
        testsectionid = #{record.testSectionId,jdbcType=BIGINT},
      </if>
      <if test="record.ticketNo != null">
        ticketno = #{record.ticketNo,jdbcType=VARCHAR},
      </if>
      <if test="record.statusId != null">
        statusId = #{record.statusId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null">
        createddate = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdUser != null">
        createduser = #{record.createdUser,jdbcType=INTEGER},
      </if>
      <if test="record.activeFlag != null">
        activeflag = #{record.activeFlag,jdbcType=BIT},
      </if>
      <if test="record.modifiedUser != null">
        modifieduser = #{record.modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="record.modifiedDate != null">
        modifieddate =now(),
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_StudentsTestSectionsCriteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByStudentsTestSectionsCriteria" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    update public.studentstestsections
    set id = #{record.id,jdbcType=BIGINT},
      studentstestid = #{record.studentsTestId,jdbcType=BIGINT},
      testsectionid = #{record.testSectionId,jdbcType=BIGINT},
      ticketno = #{record.ticketNo,jdbcType=VARCHAR},
      statusid =  #{record.statusId,jdbcType=BIGINT},
      createddate = #{record.createdDate,jdbcType=TIMESTAMP},
      createduser = #{record.createdUser,jdbcType=INTEGER},
      activeflag = #{record.activeFlag,jdbcType=BIT},
      modifieduser = #{record.modifiedUser,jdbcType=INTEGER},
      modifieddate = now()
    <if test="_parameter != null">
      <include refid="Update_By_StudentsTestSectionsCriteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.StudentsTestSections">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    update public.studentstestsections
    <set>
      <if test="studentsTestId != null">
        studentstestid = #{studentsTestId,jdbcType=BIGINT},
      </if>
      <if test="testSectionId != null">
        testsectionid = #{testSectionId,jdbcType=BIGINT},
      </if>
      <if test="ticketNo != null">
        ticketno = #{ticketNo,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        statusId = #{statusId,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        createddate = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        createduser = #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="activeFlag != null">
        activeflag = #{activeFlag,jdbcType=BIT},
      </if>
      <if test="modifiedUser != null">
        modifieduser = #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        modifieddate = now(),
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
    and activeFlag = true
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.StudentsTestSections">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 15:45:42 CST 2012.
    -->
    update public.studentstestsections
    set studentstestid = #{studentsTestId,jdbcType=BIGINT},
      testsectionid = #{testSectionId,jdbcType=BIGINT},
      ticketno = #{ticketNo,jdbcType=VARCHAR},
      statusId = #{statusId,jdbcType=VARCHAR},
      createddate = #{createdDate,jdbcType=TIMESTAMP},
      createduser = #{createdUser,jdbcType=INTEGER},
      activeflag = #{activeFlag,jdbcType=BIT},
      modifieduser = #{modifiedUser,jdbcType=INTEGER},
      modifieddate = now()
    where id = #{id,jdbcType=BIGINT}
    and activeFlag = true
  </update>
  <update id="updateStatusByStudentsTestsIds">
    update public.studentstestsections
    set
      statusId = #{studentsTestSections.statusId,jdbcType=BIGINT},
      modifieduser = #{studentsTestSections.modifiedUser,jdbcType=INTEGER},
      modifieddate = now()
	where studentstestid in
	<foreach collection="studentsTestsIdsList"
	 item="studentsTestsId" open="(" close=")" separator="," >
	   #{studentsTestsId,jdbcType=BIGINT}
	</foreach>
	and statusId = #{studentsTestSectionsStatusId,jdbcType=BIGINT}
  </update>

  <update id="updateStatusByStudentTestAndStatus">
    update public.studentstestsections
    set
      statusId = #{studentTestSection.statusId,jdbcType=BIGINT},
      modifieduser = #{studentTestSection.modifiedUser,jdbcType=INTEGER},
      modifieddate = now()
	where studentstestid in
	<foreach collection="studentTestIds"
	 item="studentTestId" open="(" close=")" separator="," >
	   #{studentTestId,jdbcType=BIGINT}
	</foreach>
	and statusId in
	<foreach collection="statusIds"
	 item="statusId" open="(" close=")" separator="," >
	   #{statusId,jdbcType=BIGINT}
	</foreach>
  </update>
  
  <update id="updateStatusForReactivationByStudentTest">
    update public.studentstestsections
    set
      statusId = #{studentTestSection.statusId,jdbcType=BIGINT},
      modifieduser = #{studentTestSection.modifiedUser,jdbcType=INTEGER},
      modifieddate = now(),
      startdatetime = null,
      enddatetime = null
	where id in (
		select sts.id from studentstestsections sts,studentstests st
			where sts.studentstestid=st.id 
			and st.activeflag is true and st.status in (
				select c.id
				from category c
				inner join categorytype ct on c.categorytypeid = ct.id
				where ct.typecode='STUDENT_TEST_STATUS'
				and c.categorycode in ('unused', 'inprogress', 'inprogresstimedout', 'complete')
			)
			AND st.testsessionId=#{testSessionId,jdbcType=BIGINT}
			AND st.studentid in 	
			<foreach collection="studentIds"
		 		item="studentId" open="(" close=")" separator="," >
		   			#{studentId,jdbcType=BIGINT}
			</foreach>
		);
		
    update public.studentstests
    set
      status = #{studentTest.status,jdbcType=BIGINT},
      modifieduser = #{studentTest.modifiedUser,jdbcType=INTEGER},
      modifieddate = now(),
      enddatetime = null
	where testsessionId=#{testSessionId,jdbcType=BIGINT}
	and activeflag is true and status in (
		select c.id
		from category c
		inner join categorytype ct on c.categorytypeid = ct.id
		where ct.typecode='STUDENT_TEST_STATUS'
		and c.categorycode in ('unused', 'inprogress', 'inprogresstimedout', 'complete')
	) and studentid in 	
		<foreach collection="studentIds"
	 		item="studentId" open="(" close=")" separator="," >
	   			#{studentId,jdbcType=BIGINT}
		</foreach>			
  </update>


 <update id="deleteByStudentsTestId">
	UPDATE public.studentstestsections set activeflag = false, 
		statusid=(select c.id from category c inner join categorytype ct on c.categorytypeid=ct.id where ct.typecode='STUDENT_TESTSECTION_STATUS' and categorycode='complete')
    	   WHERE studentstestid = #{studentTestId}
 </update>
 
 <update id="unenrollByStudentsTestId">
	UPDATE public.studentstestsections set activeflag=false,modifieddate=now(),
		<if test="userId != null">
			modifieduser=#{userId,jdbcType=BIGINT},
		</if> 
		statusid=(select c.id from category c inner join categorytype ct on c.categorytypeid=ct.id 
		where ct.typecode='STUDENT_TESTSECTION_STATUS' and categorycode=#{statusCode,jdbcType=VARCHAR})
    	   WHERE studentstestid = #{studentTestId,jdbcType=BIGINT}
 </update> 
 
  <update id="unenrollByStudentsTestSectionsId">
	UPDATE public.studentstestsections set activeflag=false,modifieddate=now(),
		<if test="userId != null">
			modifieduser=#{userId,jdbcType=BIGINT},
		</if> 
		statusid=(select c.id from category c inner join categorytype ct on c.categorytypeid=ct.id 
		where ct.typecode='STUDENT_TESTSECTION_STATUS' and categorycode=#{statusCode,jdbcType=VARCHAR})
    	   WHERE id = #{studentTestSectionsId,jdbcType=BIGINT}
 </update> 
  
  <update id="updateStatusByStudentTestIds">
    update public.studentstestsections
    set
      statusId = #{studentTestSection.statusId,jdbcType=BIGINT}
      ,modifieduser = #{studentTestSection.modifiedUser,jdbcType=INTEGER}
      ,modifieddate = now()
      <if test="studentTestSection.activeFlag != null">
        ,activeflag = #{studentTestSection.activeFlag}
      </if>
	where studentstestid in
	<foreach collection="studentTestIds"
	 item="studentTestId" open="(" close=")" separator="," >
	   #{studentTestId,jdbcType=BIGINT}
	</foreach>
  </update>
  
  <select id="selectByStudentsTestsId" parameterType="map" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM studentstestsections
    WHERE studentstestid = #{studentsTestId,jdbcType=BIGINT}
    AND activeflag = TRUE
    ORDER BY id
  </select>
  
  <update id="updateStatusByStudentAndTestSession" parameterType="map">
    update studentstestsections
    set statusid = #{studentTestSection.statusId,jdbcType=BIGINT},
      modifieduser = #{studentTest.modifiedUser,jdbcType=INTEGER},
      modifieddate = now()
    where studentstestid in (
      select id
      from studentstests st
      where activeflag = true
      and testsessionid = #{testSessionId,jdbcType=BIGINT}
      and studentid = ANY(
        ARRAY
        <foreach collection="studentIds" item="studentId" open="[" close="]" separator=",">
          #{studentId,jdbcType=BIGINT}
        </foreach>
      )
    )
  </update> 

 <update id="updateStatusAndPreviousStatusByStudentAndTestSession" parameterType="map">
    update studentstestsections sts1
    set 
      previousstatusid = (select statusid from studentstestsections sts2 where sts2.id = sts1.id),
      statusid = #{studentTestSection.statusId,jdbcType=BIGINT},
      modifieduser = #{studentTestSection.modifiedUser,jdbcType=INTEGER},
      modifieddate = now()
    where studentstestid in (
      select id
      from studentstests st
      where activeflag = true
      and testsessionid = #{testSessionId,jdbcType=BIGINT}
      and studentid = ANY(
        ARRAY
        <foreach collection="studentIds" item="studentId" open="[" close="]" separator=",">
          #{studentId,jdbcType=BIGINT}
        </foreach>
      )
    )
  </update> 
   <select id="selectByStudentsIds" parameterType="map" resultMap="BaseResultMap">
    SELECT sts.id, sts.studentstestid, sts.testsectionid, sts.ticketno, 
    sts.statusid,sts.createddate, sts.createduser, sts.activeflag, 
    sts.modifieduser, sts.modifieddate
    FROM studentstestsections sts, studentstests st
    WHERE sts.studentstestid = st.id and
    sts.
    st.studentid in 
    <foreach collection="studentsIds"
	 item="studentId" open="(" close=")" separator="," >
	   #{studentId,jdbcType=BIGINT}
	</foreach>
    AND sts.activeflag is true
    ORDER BY sts.id
  </select>
 	<select id="findIdsByStudentsTests" resultType="Long" >
	    SELECT sts.id
	    FROM studentstestsections sts
	    WHERE sts.studentstestid in
		<foreach collection="studentsTestIds" item="studentsTestId" open="(" close=")" separator="," >
			#{studentsTestId}
		</foreach>
  	</select>
  	<select id="findStudentTestSectionsIdsByStudentsTestsForDeactivation" resultType="Long" >
  		SELECT sts.id
	    FROM studentstestsections sts
	    WHERE sts.activeflag=true 
	    and sts.statusid in (select c.id from category c join categorytype ct on ct.id = c.categorytypeid where categorycode in ('complete', 'inprogress', 'inprogresstimedout', 'pending', 'unused') and ct.typecode = 'STUDENT_TESTSECTION_STATUS')
	    and sts.studentstestid in
		<foreach collection="studentsTestIds" item="studentsTestId" open="(" close=")" separator="," >
			#{studentsTestId}
		</foreach>
  	</select>  
  	
	  <update id="deactivateByPrimaryKeyWithStatus" parameterType="java.util.Map">	
			update studentstestsections 
			set modifieduser = #{modifiedUserId},
			modifieddate = now(),
			activeflag = false, 
			statusid=(select id from category 
					where categorycode = #{newStatusPrefix} || 
					(select categorycode from category 
						where id = (select statusid from studentstestsections where id = #{studentsTestSectionsId})  
						and categorytypeid = (select id from categorytype where typecode = 'STUDENT_TESTSECTION_STATUS'))
						and categorytypeid = (select id from categorytype where typecode = 'STUDENT_TESTSECTION_STATUS')) 
			where id = #{studentsTestSectionsId}
	  </update>
	  <update id="reactivateByPrimaryKeyForGradeChange" parameterType="java.util.Map">	
			update studentstestsections 
			set modifieduser = #{modifiedUserId},
			modifieddate = now(),
			activeflag = true, 
			statusid=(select id from category 
					where categorycode =
					(select split_part(categorycode, '-', 2) from category 
						where id = (select statusid from studentstestsections where id = #{studentsTestSectionsId})  
						and categorytypeid = (select id from categorytype where typecode = 'STUDENT_TESTSECTION_STATUS'))
						and categorytypeid = (select id from categorytype where typecode = 'STUDENT_TESTSECTION_STATUS')) 
			where id = #{studentsTestSectionsId}
	  </update>	  
	  
	  <update id="reactivateByPrimaryKeyForRosterChange" parameterType="java.util.Map">		
			update studentstestsections 
			set modifieduser = #{modifiedUserId},
			modifieddate = now(),
			activeflag = true, 
			statusid=(select id from category 
					where categorycode = (
							select (
							CASE WHEN (select categorycode from category 
									where id = (select statusid from studentstestsections where id = #{studentsTestSectionsId})  
									and categorytypeid = (select id from categorytype where typecode = 'STUDENT_TESTSECTION_STATUS')) = 'complete'
								THEN (select categorycode from category 
									where id = (select statusid from studentstestsections where id = #{studentsTestSectionsId})  
									and categorytypeid = (select id from categorytype where typecode = 'STUDENT_TESTSECTION_STATUS'))
								ELSE (select split_part(categorycode, '-', 2) from category 
									where id = (select statusid from studentstestsections where id = #{studentsTestSectionsId})  
									and categorytypeid = (select id from categorytype where typecode = 'STUDENT_TESTSECTION_STATUS'))
							END))
						and categorytypeid = (select id from categorytype where typecode = 'STUDENT_TESTSECTION_STATUS')) 
			where id = #{studentsTestSectionsId};
	  </update>	  	 
	  
	  <update id="softDeleteByUserAndStudent">	
			update studentstests
			set modifieduser = 12,
			modifieddate = now(),
			activeflag = false 
			where createduser = #{userId,jdbcType=BIGINT} and studentid=#{studentId,jdbcType=BIGINT}
	  </update>	   
	  
	  
</mapper>