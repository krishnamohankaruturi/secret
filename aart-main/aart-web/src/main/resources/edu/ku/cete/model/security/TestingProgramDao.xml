<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ku.cete.model.security.TestingProgramDao" >
  <resultMap id="BaseResultMap" type="edu.ku.cete.domain.security.TestingProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="externalid" property="externalId" jdbcType="BIGINT" />
    <result column="programname" property="programName" jdbcType="VARCHAR" />
    <result column="programdescription" property="programDescription" jdbcType="VARCHAR" />
    <result column="assessmentprogramid" property="assessmentProgramId" jdbcType="BIGINT" />
    <result column="createdate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modifieddate" property="modifiedDate" jdbcType="TIMESTAMP" />
    <result column="originationcode" property="originationCode" jdbcType="VARCHAR" />
    <result column="programabbr" property="programAbbr" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    id, externalid, programname, programdescription, assessmentprogramid, createdate, 
    modifieddate, originationcode, programabbr
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ku.cete.domain.security.TestingProgramExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.testingprogram
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.testingprogram
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    delete from public.testingprogram
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ku.cete.domain.security.TestingProgramExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    delete from public.testingprogram
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ku.cete.domain.security.TestingProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    insert into public.testingprogram (id, externalid, programname, 
      programdescription, assessmentprogramid, 
      createdate, modifieddate, originationcode, 
      programabbr)
    values (#{id,jdbcType=BIGINT}, #{externalId,jdbcType=BIGINT}, #{programName,jdbcType=VARCHAR}, 
      #{programDescription,jdbcType=VARCHAR}, #{assessmentProgramId,jdbcType=BIGINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{modifiedDate,jdbcType=TIMESTAMP}, #{originationCode,jdbcType=VARCHAR}, 
      #{programAbbr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.domain.security.TestingProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    insert into public.testingprogram
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="externalId != null" >
        externalid,
      </if>
      <if test="programName != null" >
        programname,
      </if>
      <if test="programDescription != null" >
        programdescription,
      </if>
      <if test="assessmentProgramId != null" >
        assessmentprogramid,
      </if>
      <if test="createDate != null" >
        createdate,
      </if>
      <if test="modifiedDate != null" >
        modifieddate,
      </if>
      <if test="originationCode != null" >
        originationcode,
      </if>
      <if test="programAbbr != null" >
        programabbr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="externalId != null" >
        #{externalId,jdbcType=BIGINT},
      </if>
      <if test="programName != null" >
        #{programName,jdbcType=VARCHAR},
      </if>
      <if test="programDescription != null" >
        #{programDescription,jdbcType=VARCHAR},
      </if>
      <if test="assessmentProgramId != null" >
        #{assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null" >
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="originationCode != null" >
        #{originationCode,jdbcType=VARCHAR},
      </if>
      <if test="programAbbr != null" >
        #{programAbbr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ku.cete.domain.security.TestingProgramExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    select count(*) from public.testingprogram
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    update public.testingprogram
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.externalId != null" >
        externalid = #{record.externalId,jdbcType=BIGINT},
      </if>
      <if test="record.programName != null" >
        programname = #{record.programName,jdbcType=VARCHAR},
      </if>
      <if test="record.programDescription != null" >
        programdescription = #{record.programDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.assessmentProgramId != null" >
        assessmentprogramid = #{record.assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null" >
        createdate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedDate != null" >
        modifieddate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.originationCode != null" >
        originationcode = #{record.originationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.programAbbr != null" >
        programabbr = #{record.programAbbr,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    update public.testingprogram
    set id = #{record.id,jdbcType=BIGINT},
      externalid = #{record.externalId,jdbcType=BIGINT},
      programname = #{record.programName,jdbcType=VARCHAR},
      programdescription = #{record.programDescription,jdbcType=VARCHAR},
      assessmentprogramid = #{record.assessmentProgramId,jdbcType=BIGINT},
      createdate = #{record.createDate,jdbcType=TIMESTAMP},
      modifieddate = #{record.modifiedDate,jdbcType=TIMESTAMP},
      originationcode = #{record.originationCode,jdbcType=VARCHAR},
      programabbr = #{record.programAbbr,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ku.cete.domain.security.TestingProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    update public.testingprogram
    <set >
      <if test="externalId != null" >
        externalid = #{externalId,jdbcType=BIGINT},
      </if>
      <if test="programName != null" >
        programname = #{programName,jdbcType=VARCHAR},
      </if>
      <if test="programDescription != null" >
        programdescription = #{programDescription,jdbcType=VARCHAR},
      </if>
      <if test="assessmentProgramId != null" >
        assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        createdate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null" >
        modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="originationCode != null" >
        originationcode = #{originationCode,jdbcType=VARCHAR},
      </if>
      <if test="programAbbr != null" >
        programabbr = #{programAbbr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ku.cete.domain.security.TestingProgram" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 12 11:18:45 CST 2012.
    -->
    update public.testingprogram
    set externalid = #{externalId,jdbcType=BIGINT},
      programname = #{programName,jdbcType=VARCHAR},
      programdescription = #{programDescription,jdbcType=VARCHAR},
      assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT},
      createdate = #{createDate,jdbcType=TIMESTAMP},
      modifieddate = #{modifiedDate,jdbcType=TIMESTAMP},
      originationcode = #{originationCode,jdbcType=VARCHAR},
      programabbr = #{programAbbr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="Aliased_Column_List" >
    testingprogram.id, testingprogram.externalId, testingprogram.programName, testingprogram.programDescription, 
    testingprogram.assessmentProgramId, testingprogram.createDate, testingprogram.modifiedDate, testingprogram.programAbbr, 
    testingprogram.originationCode
  </sql>
  
  <select id="selectByTestCollection" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Aliased_Column_List" />
    from public.testingProgram left outer join assessment on testingprogram.id = assessment.testingprogramid
    left outer join public.assessmentstestcollections on assessment.id = assessmentstestcollections.assessmentid 
    where assessmentstestcollections.testCollectionId = #{testCollectionId,jdbcType=BIGINT}
  </select>
  
   <select id="selectByTestCollectionAndAssessment" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Aliased_Column_List" />
    from public.testingProgram left outer join assessment on testingprogram.id = assessment.testingprogramid
    left outer join public.assessmentstestcollections on assessment.id = assessmentstestcollections.assessmentid 
    where assessmentstestcollections.testCollectionId = #{testCollectionId,jdbcType=BIGINT} and
    assessmentstestcollections.assessmentId = #{assessmentId,jdbcType=BIGINT}
  </select>
  
  <select id="getByAssessmentProgramId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Aliased_Column_List" />
    from public.testingProgram  where activeflag is true and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
    and exists (select 1 from public.assessment a
	inner join public.assessmentstestcollections atc on a.id = atc.assessmentid
	inner join public.testcollection tc on atc.testcollectionid = tc.id
	inner join public.testcollectionstests tct on tc.id = tct.testcollectionid
	inner join public.test t on tct.testid = t.id
	join public.category ct on t.status=ct.id and ct.activeflag is true and ct.categorycode ='DEPLOYED'
	join public.categorytype ctype on ct.categorytypeid=ctype.id and ctype.typecode='TESTSTATUS' and ctype.activeflag is true
	where a.activeflag = true and a.testingprogramid = testingprogram.id and atc.activeflag = true
	and tc.activeflag = true and t.activeflag = true ) 
	 order by testingprogram.programName </select>
   
   <select id="getDynamicTestingProgramByAssessmentProgramId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Aliased_Column_List" />
    from public.testingProgram  
    where activeflag is true and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
    and exists (select 1 from public.assessment a
	inner join public.assessmentstestcollections atc on a.id = atc.assessmentid
	inner join public.testcollection tc on atc.testcollectionid = tc.id
	inner join public.testcollectionstests tct on tc.id = tct.testcollectionid
	inner join public.test t on tct.testid = t.id
	join public.category ct on t.status=ct.id and ct.activeflag is true and ct.categorycode ='DEPLOYED'
	join public.categorytype ctype on ct.categorytypeid=ctype.id and ctype.typecode='TESTSTATUS' and ctype.activeflag is true
	where a.activeflag = true and a.testingprogramid = testingprogram.id and atc.activeflag = true
	and tc.activeflag = true and t.activeflag = true and t.qccomplete is true)
	order by testingprogram.programName
  </select>
  
    <select id="selectAllTestingProgramsDropdown" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Aliased_Column_List" />
    from public.testingProgram  
    where activeflag is true and assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT}
    and exists (select 1 from public.assessment a
	inner join public.assessmentstestcollections atc on a.id = atc.assessmentid
	inner join public.testcollection tc on atc.testcollectionid = tc.id
	inner join public.testcollectionstests tct on tc.id = tct.testcollectionid
	inner join public.test t on tct.testid = t.id
	join public.category ct on t.status=ct.id and ct.activeflag is true and ct.categorycode ='DEPLOYED'
	join public.categorytype ctype on ct.categorytypeid=ctype.id and ctype.typecode='TESTSTATUS' and ctype.activeflag is true
	where a.activeflag = true and a.testingprogramid = testingprogram.id and atc.activeflag = true
	and tc.activeflag = true and t.activeflag = true)
	order by testingprogram.programName
  </select>
  
  
  
  <!-- <select id="selectAllTestingPrograms" resultMap="BaseResultMap" >
    SELECT DISTINCT
    	programname
    FROM public.testingProgram
    WHERE programname IS NOT NULL
    ORDER BY programname
  </select> -->
  
  <!--
  	Biyatpragyan Mohanty : bmohanty_sta@ku.edu : US15083 : Test Management Add Test Session page - misc UI changes
  	As part of this story found out that it was showing all testing programs in the dropdown, ideally it should show
  	only those testing programs which are related to retrieved assessment programs by user organization, hence changed 
  	the query to reflect the same, this is used in add test session and find qc pages. The referring query can be found
  	at findByOrganizationId of AssessmentProgramDAO
   -->
  <select id="selectAllTestingPrograms" resultMap="BaseResultMap" >
    SELECT DISTINCT
    	tp.programname 
    FROM public.testingProgram as tp 
    inner join 
    (
    select distinct ap.id, ap.programname
			 from assessmentprogram ap
			 inner join orgassessmentprogram orgap on orgap.assessmentprogramid = ap.id and orgap.activeflag is true
			 where orgap.organizationid = ANY(
				select id from (select id, contractingorganization from organization_parent(#{organizationId})) orgs where contractingorganization=true)
			 union
			 select distinct ap.id, ap.programname
			 from assessmentprogram ap
			 inner join orgassessmentprogram orgap on orgap.assessmentprogramid = ap.id and orgap.activeflag is true
			 inner join organization org on orgap.organizationid = org.id
			 where org.id = #{organizationId} and org.contractingorganization = true
    ) as aps on tp.assessmentprogramid=aps.id 
    and tp.programname IS NOT NULL
    ORDER BY tp.programname
  </select>
  
  <select id="selectTestingProgramsForAutoRegistration" resultMap="BaseResultMap" >
  	select distinct 
  	<include refid="Aliased_Column_List" />
  	from testingprogram testingprogram
  	JOIN assessment asmt ON asmt.testingprogramid = testingprogram.id   	
  	where asmt.autoenrollmentflag=true and testingprogram.assessmentprogramid=#{assessmentProgramId}
  	ORDER BY testingprogram.programname
  </select>
  
  <select id="selectByAssessmentProgIdAndTestingProgAbbr" resultMap="BaseResultMap" >
    select 
    <include refid="Aliased_Column_List" />
    from public.testingProgram  
    where assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} and
    programabbr = #{testingProgramAbbr,jdbcType=VARCHAR} and activeflag = true
  </select>
  
  <select id="getTestingProgramsForReporting" resultMap="BaseResultMap" >
    select 
    <include refid="Aliased_Column_List" />
    from public.testingProgram  
    where assessmentprogramid = #{assessmentProgramId,jdbcType=BIGINT} and
    programabbr in('S','F') and activeflag is true order by programname
  </select>
  
</mapper>