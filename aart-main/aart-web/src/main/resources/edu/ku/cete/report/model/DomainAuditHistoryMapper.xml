<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ku.cete.report.model.DomainAuditHistoryMapper">
  <resultMap id="BaseResultMap" type="edu.ku.cete.report.domain.DomainAuditHistory">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 14 15:51:01 IST 2015.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="objecttype" jdbcType="VARCHAR" property="objectType" />
    <result column="objectid" jdbcType="BIGINT" property="objectId" />
    <result column="createduserid" jdbcType="INTEGER" property="createdUserId" />
    <result column="createddate" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="action" jdbcType="VARCHAR" property="action" />
    <result column="objectbeforevalues" jdbcType="VARCHAR" property="objectBeforeValues"/>
    <result column="objectaftervalues" jdbcType="VARCHAR" property="objectAfterValues"/>
    <result column="status" jdbcType="VARCHAR" property="status"/>
  </resultMap>
  <resultMap type="edu.ku.cete.report.domain.AuditType" id="auditType">
        <result property="auditName" column="auditname"></result>
		<result property="dispalyName" column="dispalyname"></result>
   </resultMap>  
  <insert id="insert" parameterType="edu.ku.cete.report.domain.DomainAuditHistory">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 14 15:51:01 IST 2015.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('domainaudithistory_id_seq')
    </selectKey>
    insert into domainaudithistory (id, source, objecttype, 
      objectid, createduserid, createddate, 
      action, objectaftervalues, objectbeforevalues)
    values (#{id,jdbcType=BIGINT}, #{source,jdbcType=CHAR}, #{objectType,jdbcType=VARCHAR}, 
      #{objectId,jdbcType=BIGINT}, #{createdUserId,jdbcType=INTEGER}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{action,jdbcType=CHAR}, #{objectAfterValues,jdbcType=CHAR}::json, #{objectBeforeValues,jdbcType=CHAR}::json)
  </insert>
  <insert id="insertSelective" parameterType="edu.ku.cete.report.domain.DomainAuditHistory">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 14 15:51:01 IST 2015.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('domainaudithistory_id_seq')
    </selectKey>
    insert into domainaudithistory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="source != null">
        source,
      </if>
      <if test="objectType != null">
        objecttype,
      </if>
      <if test="objectId != null">
        objectid,
      </if>
      <if test="createdUserId != null">
        createduserid,
      </if>
      <if test="createdDate != null">
        createddate,
      </if>
      <if test="action != null">
        action,
      </if>
      <if test="objectAfterValues != null">
        objectaftervalues,
      </if>
       <if test="objectBeforeValues != null">
        objectbeforevalues,
      </if>  
       <if test="status != null">
        status,
      </if>    
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="source != null">
        #{source,jdbcType=CHAR},
      </if>
      <if test="objectType != null">
        #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=BIGINT},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="action != null">
        #{action,jdbcType=CHAR},
      </if>
      <if test="objectAfterValues != null">
      	#{objectAfterValues,jdbcType=CHAR}::json,  
      </if>
       <if test="objectBeforeValues != null">
        #{objectBeforeValues,jdbcType=CHAR}::json,
      </if> 
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if> 
    </trim>
  </insert>  
	<select id="getUserForAuditLog" resultType="DomainAuditHistory" >
		Select * from domainaudithistory where createddate > '${lastJobRunDateTime}' and objecttype = 'USER'
	</select>
	
	<select id="getUnProcessedAuditLoggedUser" resultType="java.lang.Long" >
		with updated as (
		 UPDATE domainaudithistory SET status='IN-PROGRESS',modifieddate=now() WHERE status='PENDING' RETURNING id )
		 select id from updated order by id asc;
	</select>
	
	 <update id="changeStatusToCompletedProcessedAuditLoggedUser">
	     UPDATE domainaudithistory SET status= #{status,jdbcType=CHAR},modifieddate=now() WHERE id = #{successId,jdbcType=BIGINT}
	  </update>
	  
	  <select id="getDomainAuditHistory" resultType="edu.ku.cete.report.domain.DomainAuditHistory" >
		SELECT *, to_char(createddate AT time zone 'US/Central', 'MM-DD-YYYY hh12:mi:ss AM') createddateStr
		from domainaudithistory dahistory
	where dahistory.createddate &gt;=#{startDateTimes,jdbcType=TIMESTAMP} 
	AND dahistory.createddate &lt;=#{endDateTimes,jdbcType=TIMESTAMP}
	</select>
	
	<select id="getKAPCustomExtractData" resultType="edu.ku.cete.customextract.KAPCustomExtract" >
		Select * from customKAPStudentTestExtract(
		(select array_agg(statestudentidentifier) from student where id = ANY(ARRAY
			<foreach collection="studentIds" item="studentId" open="[" close="]"
				separator=",">
				#{studentId,jdbcType=BIGINT}
			</foreach>) 
		)
		)

	</select>
	<select id="getById" resultType="edu.ku.cete.report.domain.DomainAuditHistory" >
		Select * from domainaudithistory where id = #{id,jdbcType=BIGINT}
	</select>
	
	<select id="getAuditTypeList" resultMap="auditType" >
	select auditname,dispalyname from audittype where activeflag is true  order by dispalyname;
	</select>
</mapper>