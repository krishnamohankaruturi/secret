package edu.ku.cete.model;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.report.TestingCycle;

public interface TestingCycleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testingcycle
     *
     * @mbggenerated Wed Sep 06 14:22:50 CDT 2017
     */
    int insert(TestingCycle record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testingcycle
     *
     * @mbggenerated Wed Sep 06 14:22:50 CDT 2017
     */
    int insertSelective(TestingCycle record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testingcycle
     *
     * @mbggenerated Wed Sep 06 14:22:50 CDT 2017
     */
    TestingCycle selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testingcycle
     *
     * @mbggenerated Wed Sep 06 14:22:50 CDT 2017
     */
    int updateByPrimaryKeySelective(TestingCycle record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testingcycle
     *
     * @mbggenerated Wed Sep 06 14:22:50 CDT 2017
     */
    int updateByPrimaryKey(TestingCycle record);
    
    List<TestingCycle> getCurrentTestCycleDetails(@Param("assessmentProgramId")Long assessmentProgramId, @Param("schoolYear")Long schoolYear, @Param("testingProgramId") Long testingProgramId, @Param("testingCycle")String testingCycle);
    
    List<TestingCycle> getTestingCyclesByProgramIdSchoolYear(
			@Param("assessmentProgramId") Long assessmentProgramId,
			@Param("schoolYear") Long schoolYear, 
			@Param("testingProgramId") Long testingProgramId);
    
    List<TestingCycle> getTestingCyclesByProgramCodeSchoolYear(
			@Param("assessmentProgramCode") String assessmentProgramCode,
			@Param("schoolYear") Long schoolYear, 
			@Param("testingProgramCode") String testingProgramCode);
    
    List<TestingCycle> getTestingCyclesByStateIdSchoolYearAssessmentProgram(
			@Param("assessmentprogramID") Long assessmentprogramID,
			@Param("schoolYear") Long schoolYear, 
			@Param("stateID") Long stateID);
    
    List<TestingCycle> getTestingCyclesByStateNameSchoolYearAssessmentProgramCode(
			@Param("assessmentprogramCode") String assessmentprogramID,
			@Param("schoolYear") Long schoolYear, 
			@Param("stateName") String stateID);

	TestingCycle getTestingCycleByAssessmentProgramIDSchoolYearOTWID(
			@Param("assessmentprogramID") Long assessmentprogramID,
			@Param("schoolYear") Long schoolYear, 
			@Param("otwID") Long otwID);
    
}