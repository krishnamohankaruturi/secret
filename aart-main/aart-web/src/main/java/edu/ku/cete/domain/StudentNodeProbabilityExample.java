package edu.ku.cete.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class StudentNodeProbabilityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public StudentNodeProbabilityExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andRequestIdIsNull() {
			addCriterion("requestid is null");
			return (Criteria) this;
		}

		public Criteria andRequestIdIsNotNull() {
			addCriterion("requestid is not null");
			return (Criteria) this;
		}

		public Criteria andRequestIdEqualTo(Long value) {
			addCriterion("requestid =", value, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdNotEqualTo(Long value) {
			addCriterion("requestid <>", value, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdGreaterThan(Long value) {
			addCriterion("requestid >", value, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdGreaterThanOrEqualTo(Long value) {
			addCriterion("requestid >=", value, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdLessThan(Long value) {
			addCriterion("requestid <", value, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdLessThanOrEqualTo(Long value) {
			addCriterion("requestid <=", value, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdIn(List<Long> values) {
			addCriterion("requestid in", values, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdNotIn(List<Long> values) {
			addCriterion("requestid not in", values, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdBetween(Long value1, Long value2) {
			addCriterion("requestid between", value1, value2, "requestId");
			return (Criteria) this;
		}

		public Criteria andRequestIdNotBetween(Long value1, Long value2) {
			addCriterion("requestid not between", value1, value2, "requestId");
			return (Criteria) this;
		}

		public Criteria andStudentIdIsNull() {
			addCriterion("studentid is null");
			return (Criteria) this;
		}

		public Criteria andStudentIdIsNotNull() {
			addCriterion("studentid is not null");
			return (Criteria) this;
		}

		public Criteria andStudentIdEqualTo(Long value) {
			addCriterion("studentid =", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdNotEqualTo(Long value) {
			addCriterion("studentid <>", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdGreaterThan(Long value) {
			addCriterion("studentid >", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdGreaterThanOrEqualTo(Long value) {
			addCriterion("studentid >=", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdLessThan(Long value) {
			addCriterion("studentid <", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdLessThanOrEqualTo(Long value) {
			addCriterion("studentid <=", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdIn(List<Long> values) {
			addCriterion("studentid in", values, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdNotIn(List<Long> values) {
			addCriterion("studentid not in", values, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdBetween(Long value1, Long value2) {
			addCriterion("studentid between", value1, value2, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdNotBetween(Long value1, Long value2) {
			addCriterion("studentid not between", value1, value2, "studentId");
			return (Criteria) this;
		}

		public Criteria andNodeIdIsNull() {
			addCriterion("nodeid is null");
			return (Criteria) this;
		}

		public Criteria andNodeIdIsNotNull() {
			addCriterion("nodeid is not null");
			return (Criteria) this;
		}

		public Criteria andNodeIdEqualTo(Long value) {
			addCriterion("nodeid =", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdNotEqualTo(Long value) {
			addCriterion("nodeid <>", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdGreaterThan(Long value) {
			addCriterion("nodeid >", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdGreaterThanOrEqualTo(Long value) {
			addCriterion("nodeid >=", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdLessThan(Long value) {
			addCriterion("nodeid <", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdLessThanOrEqualTo(Long value) {
			addCriterion("nodeid <=", value, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdIn(List<Long> values) {
			addCriterion("nodeid in", values, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdNotIn(List<Long> values) {
			addCriterion("nodeid not in", values, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdBetween(Long value1, Long value2) {
			addCriterion("nodeid between", value1, value2, "nodeId");
			return (Criteria) this;
		}

		public Criteria andNodeIdNotBetween(Long value1, Long value2) {
			addCriterion("nodeid not between", value1, value2, "nodeId");
			return (Criteria) this;
		}

		public Criteria andProbabilityIsNull() {
			addCriterion("probability is null");
			return (Criteria) this;
		}

		public Criteria andProbabilityIsNotNull() {
			addCriterion("probability is not null");
			return (Criteria) this;
		}

		public Criteria andProbabilityEqualTo(BigDecimal value) {
			addCriterion("probability =", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityNotEqualTo(BigDecimal value) {
			addCriterion("probability <>", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityGreaterThan(BigDecimal value) {
			addCriterion("probability >", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("probability >=", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityLessThan(BigDecimal value) {
			addCriterion("probability <", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityLessThanOrEqualTo(BigDecimal value) {
			addCriterion("probability <=", value, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityIn(List<BigDecimal> values) {
			addCriterion("probability in", values, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityNotIn(List<BigDecimal> values) {
			addCriterion("probability not in", values, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("probability between", value1, value2, "probability");
			return (Criteria) this;
		}

		public Criteria andProbabilityNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("probability not between", value1, value2,
					"probability");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIsNull() {
			addCriterion("createddate is null");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIsNotNull() {
			addCriterion("createddate is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedDateEqualTo(Date value) {
			addCriterion("createddate =", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotEqualTo(Date value) {
			addCriterion("createddate <>", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateGreaterThan(Date value) {
			addCriterion("createddate >", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
			addCriterion("createddate >=", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateLessThan(Date value) {
			addCriterion("createddate <", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
			addCriterion("createddate <=", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIn(List<Date> values) {
			addCriterion("createddate in", values, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotIn(List<Date> values) {
			addCriterion("createddate not in", values, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateBetween(Date value1, Date value2) {
			addCriterion("createddate between", value1, value2, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
			addCriterion("createddate not between", value1, value2,
					"createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedUserIsNull() {
			addCriterion("createduser is null");
			return (Criteria) this;
		}

		public Criteria andCreatedUserIsNotNull() {
			addCriterion("createduser is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedUserEqualTo(Long value) {
			addCriterion("createduser =", value, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserNotEqualTo(Long value) {
			addCriterion("createduser <>", value, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserGreaterThan(Long value) {
			addCriterion("createduser >", value, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserGreaterThanOrEqualTo(Long value) {
			addCriterion("createduser >=", value, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserLessThan(Long value) {
			addCriterion("createduser <", value, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserLessThanOrEqualTo(Long value) {
			addCriterion("createduser <=", value, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserIn(List<Long> values) {
			addCriterion("createduser in", values, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserNotIn(List<Long> values) {
			addCriterion("createduser not in", values, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserBetween(Long value1, Long value2) {
			addCriterion("createduser between", value1, value2, "createdUser");
			return (Criteria) this;
		}

		public Criteria andCreatedUserNotBetween(Long value1, Long value2) {
			addCriterion("createduser not between", value1, value2,
					"createdUser");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table studentnodeprobability
	 * @mbggenerated  Thu Aug 21 13:21:20 CDT 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table studentnodeprobability
     *
     * @mbggenerated do_not_delete_during_merge Tue Aug 19 15:55:15 CDT 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}