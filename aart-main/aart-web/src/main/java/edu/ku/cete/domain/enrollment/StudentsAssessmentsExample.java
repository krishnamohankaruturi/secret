package edu.ku.cete.domain.enrollment;

import java.util.ArrayList;
import java.util.List;

import edu.ku.cete.util.Criterion;

public class StudentsAssessmentsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public StudentsAssessmentsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.studentsassessments
     *
     * @mbggenerated Fri Jun 08 09:57:29 CDT 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("studentid is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("studentid is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(Long value) {
            addCriterion("studentid =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(Long value) {
            addCriterion("studentid <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(Long value) {
            addCriterion("studentid >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("studentid >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(Long value) {
            addCriterion("studentid <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(Long value) {
            addCriterion("studentid <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<Long> values) {
            addCriterion("studentid in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<Long> values) {
            addCriterion("studentid not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(Long value1, Long value2) {
            addCriterion("studentid between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(Long value1, Long value2) {
            addCriterion("studentid not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdIsNull() {
            addCriterion("ContentAreaId is null");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdIsNotNull() {
            addCriterion("ContentAreaId is not null");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdEqualTo(Long value) {
            addCriterion("ContentAreaId =", value, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdNotEqualTo(Long value) {
            addCriterion("ContentAreaId <>", value, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdGreaterThan(Long value) {
            addCriterion("ContentAreaId >", value, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ContentAreaId >=", value, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdLessThan(Long value) {
            addCriterion("ContentAreaId <", value, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdLessThanOrEqualTo(Long value) {
            addCriterion("ContentAreaId <=", value, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdIn(List<Long> values) {
            addCriterion("ContentAreaId in", values, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdNotIn(List<Long> values) {
            addCriterion("ContentAreaId not in", values, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdBetween(Long value1, Long value2) {
            addCriterion("ContentAreaId between", value1, value2, "ContentAreaId");
            return (Criteria) this;
        }

        public Criteria andContentAreaIdNotBetween(Long value1, Long value2) {
            addCriterion("ContentAreaId not between", value1, value2, "ContentAreaId");
            return (Criteria) this;
        }
        public Criteria andAssessmentIdIsNull() {
            addCriterion("assessmentid is null");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdIsNotNull() {
            addCriterion("assessmentid is not null");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdEqualTo(Long value) {
            addCriterion("assessmentid =", value, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdNotEqualTo(Long value) {
            addCriterion("assessmentid <>", value, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdGreaterThan(Long value) {
            addCriterion("assessmentid >", value, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("assessmentid >=", value, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdLessThan(Long value) {
            addCriterion("assessmentid <", value, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdLessThanOrEqualTo(Long value) {
            addCriterion("assessmentid <=", value, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdIn(List<Long> values) {
            addCriterion("assessmentid in", values, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdNotIn(List<Long> values) {
            addCriterion("assessmentid not in", values, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdBetween(Long value1, Long value2) {
            addCriterion("assessmentid between", value1, value2, "assessmentId");
            return (Criteria) this;
        }

        public Criteria andAssessmentIdNotBetween(Long value1, Long value2) {
            addCriterion("assessmentid not between", value1, value2, "assessmentId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.studentsassessments
     *
     * @mbggenerated do_not_delete_during_merge Fri Jun 08 09:57:29 CDT 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}