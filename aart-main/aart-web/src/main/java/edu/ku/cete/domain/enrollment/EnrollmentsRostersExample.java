package edu.ku.cete.domain.enrollment;

import java.util.ArrayList;
import java.util.List;

import edu.ku.cete.util.Criterion;

public class EnrollmentsRostersExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public EnrollmentsRostersExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEnrollmentIdIsNull() {
            addCriterion("enrollmentid is null");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdIsNotNull() {
            addCriterion("enrollmentid is not null");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdEqualTo(Long value) {
            addCriterion("enrollmentid =", value, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdNotEqualTo(Long value) {
            addCriterion("enrollmentid <>", value, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdGreaterThan(Long value) {
            addCriterion("enrollmentid >", value, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("enrollmentid >=", value, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdLessThan(Long value) {
            addCriterion("enrollmentid <", value, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdLessThanOrEqualTo(Long value) {
            addCriterion("enrollmentid <=", value, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdIn(List<Long> values) {
            addCriterion("enrollmentid in", values, "enrollmentId");
            return (Criteria) this;
        }
        
        public Criteria andEnrollmentIdNotIn(List<Long> values) {
            addCriterion("enrollmentid not in", values, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdBetween(Long value1, Long value2) {
            addCriterion("enrollmentid between", value1, value2, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andEnrollmentIdNotBetween(Long value1, Long value2) {
            addCriterion("enrollmentid not between", value1, value2, "enrollmentId");
            return (Criteria) this;
        }

        public Criteria andRosterIdIsNull() {
            addCriterion("rosterid is null");
            return (Criteria) this;
        }

        public Criteria andRosterIdIsNotNull() {
            addCriterion("rosterid is not null");
            return (Criteria) this;
        }

        public Criteria andRosterIdEqualTo(Long value) {
            addCriterion("rosterid =", value, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdNotEqualTo(Long value) {
            addCriterion("rosterid <>", value, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdGreaterThan(Long value) {
            addCriterion("rosterid >", value, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdGreaterThanOrEqualTo(Long value) {
            addCriterion("rosterid >=", value, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdLessThan(Long value) {
            addCriterion("rosterid <", value, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdLessThanOrEqualTo(Long value) {
            addCriterion("rosterid <=", value, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdIn(List<Long> values) {
            addCriterion("rosterid in", values, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdNotIn(List<Long> values) {
            addCriterion("rosterid not in", values, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdBetween(Long value1, Long value2) {
            addCriterion("rosterid between", value1, value2, "rosterId");
            return (Criteria) this;
        }

        public Criteria andRosterIdNotBetween(Long value1, Long value2) {
            addCriterion("rosterid not between", value1, value2, "rosterId");
            return (Criteria) this;
        }
        
        public Criteria andCourseEnrollmentStatusIdIsNull() {
            addCriterion("courseenrollmentstatusid is null");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdIsNotNull() {
            addCriterion("courseenrollmentstatusid is not null");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdEqualTo(Long value) {
            addCriterion("courseenrollmentstatusid =", value, "courseEnrollmentStatusId");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdNotEqualTo(Long value) {
            addCriterion("courseenrollmentstatusid <>", value, "courseEnrollmentStatusId");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdGreaterThan(Long value) {
            addCriterion("courseenrollmentstatusid >", value, "courseEnrollmentStatusId");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdGreaterThanOrEqualTo(Long value) {
            addCriterion("courseenrollmentstatusid >=", value, "courseEnrollmentStatusId");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdLessThan(Long value) {
            addCriterion("courseenrollmentstatusid <", value, "courseEnrollmentStatusId");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdLessThanOrEqualTo(Long value) {
            addCriterion("courseenrollmentstatusid <=", value, "courseEnrollmentStatusId");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdIn(List<Long> values) {
            addCriterion("courseenrollmentstatusid in", values, "courseEnrollmentStatusId");
            return (Criteria) this;
        }
        
        public Criteria andCourseEnrollmentStatusIdNotIn(List<Long> values) {
            addCriterion("courseenrollmentstatusid not in", values, "courseEnrollmentStatusId");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdBetween(Long value1, Long value2) {
            addCriterion("courseenrollmentstatusid between", value1, value2, "courseEnrollmentStatusId");
            return (Criteria) this;
        }

        public Criteria andCourseEnrollmentStatusIdNotBetween(Long value1, Long value2) {
            addCriterion("courseenrollmentstatusid not between", value1, value2, "courseEnrollmentStatusId");
            return (Criteria) this;
        }
        
        public Criteria andActiveFlagEqualTo(boolean active) {
        	addCriterion("activeflag =", Boolean.valueOf(active), "activeFlag");
        	return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated do_not_delete_during_merge Wed May 16 23:31:04 CDT 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}