package edu.ku.cete.report.model;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.common.Category;
import edu.ku.cete.report.domain.BatchUpload;
import edu.ku.cete.report.domain.BatchUploadInfo;

public interface BatchUploadMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table batchupload
	 * @mbggenerated  Fri Apr 17 16:50:40 CDT 2015
	 */
	int insert(BatchUpload record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table batchupload
	 * @mbggenerated  Fri Apr 17 16:50:40 CDT 2015
	 */
	int insertSelective(BatchUpload record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table batchupload
	 * @mbggenerated  Fri Apr 17 16:50:40 CDT 2015
	 */
	BatchUpload selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table batchupload
	 * @mbggenerated  Fri Apr 17 16:50:40 CDT 2015
	 */
	int updateByPrimaryKeySelective(BatchUpload record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table batchupload
	 * @mbggenerated  Fri Apr 17 16:50:40 CDT 2015
	 */
	int updateByPrimaryKey(BatchUpload record);

	List<BatchUpload> selectByAssessmentProgramIdsAndFilters(@Param("assessmentProgramIds") List<Long> assessmentProgramIds,
			@Param("orderByColumn") String orderByColumn, @Param("order") String order,
			@Param("limit") Integer limit, @Param("offset") Integer offset, @Param("typeIds") List<Long> typeIds);
	
	int getUploadCountByAssessmentProgramIdsAndFilters(@Param("assessmentProgramIds") List<Long> assessmentProgramIds, @Param("typeIds") List<Long> typeIds);
    
    int selectDuplicateCount(@Param("assessmentProgramId") Long assessmentProgramId,
    		@Param("contentAreaId") Long contentAreaId, @Param("uploadTypeId") Long uploadTypeId,
    		@Param("schoolYear") Integer schoolYear,
    		@Param("testingProgramId")Long testingProgramId,
    		@Param("reportCycle") String reportCycle);
    
    int updatePreviousToInactive(@Param("assessmentProgramId") Long assessmentProgramId,
    		@Param("contentAreaId") Long contentAreaId, @Param("uploadTypeId") Long uploadTypeId,
    		@Param("schoolYear") Integer schoolYear, @Param("reportYear") Long reportYear, @Param("stateId") Long stateId, @Param("testingProgramId") Long testingProgramId, @Param("reportCycle") String reportCycle);
    
	BatchUpload selectOnePending( @Param("status") String status, @Param("categories") List<Category> categories);
    
    /* Added for US16548*/
	List<BatchUploadInfo> selectByCategoryCodeBatchUpload(@Param("id") Long id, @Param("uploadTypeId") Long uploadTypeId, 
			@Param("userGroupId") Long userGroupId, @Param("userOrgId") Long userOrgId);

	Long getUploadFileTypeId(@Param("categoryCode") String categoryCode);

	List<BatchUpload> selectUploadResultsByAssessmentProgramIdsAndFilters(@Param("assessmentProgramId") Long assessmentProgramId,
			@Param("userStates") List<Long> userStates,
			@Param("orderByColumn") String orderByColumn, @Param("order") String order,
			@Param("limit") Integer limit, @Param("offset") Integer offset);	
	
	int checkForInProgressUpload(@Param("assessmentProgramId") Long assessmentProgramId, 
			                     @Param("stateId") Long stateId, @Param("fileTypeId") Long fileTypeId, @Param("reportYear") Integer reportYear, @Param("contentAreaId") Long contentAreaId, 
			                     @Param("testingProgramId") Long testingProgramId, @Param("reportCycle") String reportCycle);

	List<BatchUpload> selectGRFProcessStatusBYStateId(@Param("assessmentProgramId") Long assessmentProgramId,
			@Param("stateId") Long contractingOrgId,
			@Param("reportYear") Integer reportYear, 
			@Param("grfProcessTypes") List<String> grfProcessTypes,
			@Param("orderByColumn") String orderByColumn, @Param("order") String order,
			@Param("limit") Integer limit, @Param("offset") Integer offset);
	
	int checkForInProgressGrfUploadOrReport(@Param("assessmentProgramId") Long assessmentProgramId, @Param("stateId") Long stateId, @Param("reportYear") Integer reportYear);

	BatchUpload latestGrfBatchUpload(@Param("stateId") Long stateId, @Param("grfProcessType") String grfProcessType);
	
	int checkForInProgressInSpecialCircumstanceAndExitedStudents(@Param("assessmentProgramId") Long assessmentProgramId, @Param("stateId") Long stateId, @Param("reportYear") Integer reportYear, @Param("grfProcessType") String grfProcessType);
	
}