package edu.ku.cete.domain.common;

import java.util.ArrayList;
import java.util.List;

import edu.ku.cete.util.Criterion;

public class AssessmentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    protected List<Criteria> oredCriteria;
    /**
     * test subject criteria.
     */
    protected List<CategoryExample.Criteria> testSubjectCriteria;
    /**
     * test type criteria.
     */
    private List<CategoryExample.Criteria> testTypeCriteria;
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public AssessmentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }
	/**
	 * @return the testSubjectCriteria
	 */
	public List<CategoryExample.Criteria> getTestSubjectCriteria() {
		return testSubjectCriteria;
	}

	/**
	 * @param testSubjectCriteria the testSubjectCriteria to set
	 */
	public void setTestSubjectCriteria(List<CategoryExample.Criteria> testSubjectCriteria) {
		this.testSubjectCriteria = testSubjectCriteria;
	}

	/**
	 * @return the testTypeCriteria
	 */
	public List<CategoryExample.Criteria> getTestTypeCriteria() {
		return testTypeCriteria;
	}

	/**
	 * @param testTypeCriteria the testTypeCriteria to set
	 */
	public void setTestTypeCriteria(List<CategoryExample.Criteria> testTypeCriteria) {
		this.testTypeCriteria = testTypeCriteria;
	}

	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.assessment
     *
     * @mbggenerated Mon Jun 04 11:52:02 CDT 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTestSubjectIdIsNull() {
            addCriterion("testSubjectId is null");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdIsNotNull() {
            addCriterion("testSubjectId is not null");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdEqualTo(Long value) {
            addCriterion("testSubjectId =", value, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdNotEqualTo(Long value) {
            addCriterion("testSubjectId <>", value, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdGreaterThan(Long value) {
            addCriterion("testSubjectId >", value, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdGreaterThanOrEqualTo(Long value) {
            addCriterion("testSubjectId >=", value, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdLessThan(Long value) {
            addCriterion("testSubjectId <", value, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdLessThanOrEqualTo(Long value) {
            addCriterion("testSubjectId <=", value, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdIn(List<Long> values) {
            addCriterion("testSubjectId in", values, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdNotIn(List<Long> values) {
            addCriterion("testSubjectId not in", values, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdBetween(Long value1, Long value2) {
            addCriterion("testSubjectId between", value1, value2, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestSubjectIdNotBetween(Long value1, Long value2) {
            addCriterion("testSubjectId not between", value1, value2, "testSubjectId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdIsNull() {
            addCriterion("testTypeId is null");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdIsNotNull() {
            addCriterion("testTypeId is not null");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdEqualTo(Long value) {
            addCriterion("testTypeId =", value, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdNotEqualTo(Long value) {
            addCriterion("testTypeId <>", value, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdGreaterThan(Long value) {
            addCriterion("testTypeId >", value, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("testTypeId >=", value, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdLessThan(Long value) {
            addCriterion("testTypeId <", value, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdLessThanOrEqualTo(Long value) {
            addCriterion("testTypeId <=", value, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdIn(List<Long> values) {
            addCriterion("testTypeId in", values, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdNotIn(List<Long> values) {
            addCriterion("testTypeId not in", values, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdBetween(Long value1, Long value2) {
            addCriterion("testTypeId between", value1, value2, "testTypeId");
            return (Criteria) this;
        }

        public Criteria andTestTypeIdNotBetween(Long value1, Long value2) {
            addCriterion("testTypeId not between", value1, value2, "testTypeId");
            return (Criteria) this;
        }
        
        public Criteria andTestingProgramIdIsNull() {
            addCriterion("testingProgramid is null");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdIsNotNull() {
            addCriterion("testingProgramid is not null");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdEqualTo(Long value) {
            addCriterion("testingProgramid =", value, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdNotEqualTo(Long value) {
            addCriterion("testingProgramid <>", value, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdGreaterThan(Long value) {
            addCriterion("testingProgramid >", value, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdGreaterThanOrEqualTo(Long value) {
            addCriterion("testingProgramid >=", value, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdLessThan(Long value) {
            addCriterion("testingProgramid <", value, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdLessThanOrEqualTo(Long value) {
            addCriterion("testingProgramid <=", value, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdIn(List<Long> values) {
            addCriterion("testingProgramid in", values, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdNotIn(List<Long> values) {
            addCriterion("testingProgramid not in", values, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdBetween(Long value1, Long value2) {
            addCriterion("testingProgramid between", value1, value2, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andTestingProgramIdNotBetween(Long value1, Long value2) {
            addCriterion("testingProgramid not between", value1, value2, "testingProgramid");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameIsNull() {
            addCriterion("assessmentname is null");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameIsNotNull() {
            addCriterion("assessmentname is not null");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameEqualTo(String value) {
            addCriterion("assessmentname =", value, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameNotEqualTo(String value) {
            addCriterion("assessmentname <>", value, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameGreaterThan(String value) {
            addCriterion("assessmentname >", value, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameGreaterThanOrEqualTo(String value) {
            addCriterion("assessmentname >=", value, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameLessThan(String value) {
            addCriterion("assessmentname <", value, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameLessThanOrEqualTo(String value) {
            addCriterion("assessmentname <=", value, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameLike(String value) {
            addCriterion("assessmentname like", value, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameNotLike(String value) {
            addCriterion("assessmentname not like", value, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameIn(List<String> values) {
            addCriterion("assessmentname in", values, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameNotIn(List<String> values) {
            addCriterion("assessmentname not in", values, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameBetween(String value1, String value2) {
            addCriterion("assessmentname between", value1, value2, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentNameNotBetween(String value1, String value2) {
            addCriterion("assessmentname not between", value1, value2, "assessmentname");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeIsNull() {
            addCriterion("assessmentCode is null");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeIsNotNull() {
            addCriterion("assessmentCode is not null");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeEqualTo(String value) {
            addCriterion("assessmentCode =", value, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeNotEqualTo(String value) {
            addCriterion("assessmentCode <>", value, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeGreaterThan(String value) {
            addCriterion("assessmentCode >", value, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeGreaterThanOrEqualTo(String value) {
            addCriterion("assessmentCode >=", value, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeLessThan(String value) {
            addCriterion("assessmentCode <", value, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeLessThanOrEqualTo(String value) {
            addCriterion("assessmentCode <=", value, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeLike(String value) {
            addCriterion("assessmentCode like", value, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeNotLike(String value) {
            addCriterion("assessmentCode not like", value, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeIn(List<String> values) {
            addCriterion("assessmentCode in", values, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeNotIn(List<String> values) {
            addCriterion("assessmentCode not in", values, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeBetween(String value1, String value2) {
            addCriterion("assessmentCode between", value1, value2, "assessmentCode");
            return (Criteria) this;
        }

        public Criteria andAssessmentCodeNotBetween(String value1, String value2) {
            addCriterion("assessmentCode not between", value1, value2, "assessmentCode");
            return (Criteria) this;
        }        
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.assessment
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 04 11:52:02 CDT 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}