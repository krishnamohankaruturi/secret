package edu.ku.cete.model;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.EnrollmentTestTypeSubjectArea;
import edu.ku.cete.domain.content.ContentArea;
import edu.ku.cete.domain.content.ContentAreaExample;

public interface ContentAreaDao {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	int countByExample(ContentAreaExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	int deleteByExample(ContentAreaExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	List<ContentArea> selectByExample(ContentAreaExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	ContentArea selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	int updateByExampleSelective(@Param("record") ContentArea record,
			@Param("example") ContentAreaExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	int updateByExample(@Param("record") ContentArea record,
			@Param("example") ContentAreaExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	int updateByPrimaryKeySelective(ContentArea record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table public.contentarea
	 * 
	 * @mbggenerated Wed Sep 12 13:52:41 CDT 2012
	 */
	int updateByPrimaryKey(ContentArea record);

	/**
	 * 
	 * @param name
	 *            {@link String}
	 * @return {@link ContentArea}
	 */
	ContentArea findByName(@Param("name") String name);

	ContentArea findByContractingOrg(
			@Param("organizationId") Long organizationId,
			@Param("contentAreaCode") String contentAreaCode);

	/**
	 * 
	 * @param assessmentProgramId
	 *            long
	 * @return List<ContentArea>
	 */
	List<ContentArea> findByAssessmentProgram(
			@Param("assessmentProgramId") long assessmentProgramId);

	/**
	 * 
	 * @return long
	 */
	long lastid();

	/**
	 * @param abbreviatedName
	 *            {@link String}
	 * @param originationCode
	 *            {@link String}
	 * @return {@link ContentArea}
	 */
	ContentArea findByAbbreviatedName(String abbreviatedName);

	ContentArea findByNameOrAbbreviatedName(@Param("name") String name);
	/**
	 * 
	 * @param assessmentId
	 *            Long
	 * @return List<ContentArea>
	 */
	List<ContentArea> findByAssessmentId(
			@Param("assessmentId") Long assessmentId);

	/**
	 * @return
	 */
	List<ContentArea> selectAllContentAreas();

	/**
	 * @return
	 */
	List<ContentArea> selectContentAreas();
	
	List<ContentArea> findByAssessmentProgramAndTestingProgram(@Param("assessmentProgramId") Long assessmentProgramId, @Param("testingProgramId") Long testingProgramId);
	
	List<ContentArea> findBySubjectAreaTestType(@Param("subjectAreaCode") String subjectAreaCode, @Param("testTypeCode") String testTypeCode);
	
	ContentArea findByTestTypeSubjectAreaAssessment(@Param("testTypeId") Long testTypeId, @Param("subjectAreaId") Long subjectAreaId, 
			@Param("assessmentId") Long assessmentId);
	
	List<ContentArea> findByTestTypeAssessment(@Param("testTypeId") Long testTypeId, @Param("assessmentId") Long assessmentId);
	
	List<ContentArea> findGradeCoursesUsingAssessmentProgram(@Param("assessmentProgramId") Long assessmentProgramId);
	
	/**
	 * @author bmohanty_sta
     * Biyatpragyan Mohanty : bmohanty_sta@ku.edu : US15536 : Student Tracker - Simple Version 1 (preliminary)
     * Get list of content areas for student tracker e.g. ELA and Math for now.
	 * @return
	 */
	List<ContentArea> selectContentAreasForStudentTracker(@Param("organizationId") Long organizationId);
	
	List<ContentArea> getContentAreasForAlternateDLMReports(Map<String, Object> parameters);
	
	List<ContentArea> selectContentAreasForDLMMultiAssignments(@Param("contentAreaCodes") List<String> contentAreaCodes);

	ContentArea findBySubjectAreaIdAndTestTypeCode(@Param("testTypeCode") String testTypeCode,
			@Param("subjectAreaId") Long subjectAreaId, @Param("assessmentId") Long assessmentId);
	
	List<ContentArea> getContentAreasWhereReportsHaveProcessed(Map<String, Object> parameters);

	List<ContentArea> findByAssessmentProgramforTestRecord(
			@Param("assessmentProgramId") long assessmentProgramId);
	List<ContentArea> findByAssessmentProgramforAssignScorer(
			@Param("assessmentProgramId") long assessmentProgramId,@Param("schoolAreaId") long schoolAreaId,@Param("currentSchoolYear") int currentSchoolYear);
	
	Long findByTestTypeAssessmentContentArea(@Param("assessmentId") Long assessmentId, @Param("testTypeId") Long testTypeId, @Param("contentAreaId") Long contentAreaId);

	List<ContentArea> getSubjectsByGrade(@Param("gradeId")Long gradeId);

	List<ContentArea> getContententAreasByOtwId(@Param("operationalTestWindowId")Long operationalTestWindowId);
	
	List<ContentArea> getInterimSubjectNames(@Param("purposeId") Long purposeId, @Param("isInterim") Boolean isInterim,
			@Param("organizationId") Long organizationId, @Param("assessmentProgramId") Long assessmentProgramId,
			@Param("isTeacher") boolean isTeacher, @Param("isUserLoggedAsPLTW") boolean isUserLoggedAsPLTW,
			@Param("userId") Long userId);

	List<ContentArea> getInterimAlignment();

	List<ContentArea> getSubjectsForStudentScoreExtract();

	List<ContentArea> getItiBluePrintSubjects(@Param("schoolYear")Long schoolYear,@Param("isTeacher")Boolean isTeacher, 
			@Param("educatorId")Long educatorId);

	List<ContentArea> getContentAreasForResearchSurvey();
	List<ContentArea> getContentAreasForISMARTResearchSurvey();

	List<Long> getContentAreaIdsByTestTypeAndSubjectArea(@Param("enrollmentTestTypeSubjectAreas") 
		List<EnrollmentTestTypeSubjectArea> enrollmentTestTypeSubjectAreas);

	List<ContentArea> getContentAreaForBundledReport(@Param("schoolIds") Long[] schoolIds,@Param("assessmentProgId") Long assessmentProgId,
			@Param("assessmentProgCode") String assessmentProgCode,@Param("schoolYear") int schoolYear);

	List<ContentArea> findByAssessmentProgramandTestingProgramId(@Param("assessmentProgramId") Long assessmentProgramId, 
			@Param("testingProgramId") Long testingProgramId);

	List<ContentArea> selectAllContentAreasDropdown(@Param("assessmentProgramId")Long currentAssessmentProgramId);

	List<ContentArea> findByAssessmentProgramCode(@Param("assessmentProgramCode")String assessmentProgramCode);

	List<ContentArea> findByAbbreviatedNamesAndAssessmentProgramCode(@Param("contentAreaCodes")String[] contentAreaCodes,
			@Param("assessmentProgramCode")String assessmentProgramCode);

	List<ContentArea> getSubjectsForReportGeneration(@Param("assessmentProgramId") Long assessmentProgramId,
			@Param("schoolYear") Long schoolYear, @Param("stateId") Long stateId);

	List<ContentArea> selectContentAreasForISmartAutoEnrollment(@Param("organizationId") Long organizationId, @Param("contentAreaAbbrName") String contentAreaAbbrName);

	List<ContentArea> getSubjectsByGradeAndAssessment(@Param("abbreviatedName") String abbreviatedName, @Param("assessmentProgramIds") List<Long> assessmentProgramIds);
	
	List<String> getCourseNameByAssesmentProgram(@Param("assesmentProgram") String assesmentProgram);

	List<Long> getContentAreasIdForDistrictSummaryReportsHaveProcessed(Map<String, Object> params);
}