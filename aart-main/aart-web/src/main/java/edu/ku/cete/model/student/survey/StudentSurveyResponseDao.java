package edu.ku.cete.model.student.survey;

import edu.ku.cete.domain.student.survey.Survey;
import edu.ku.cete.domain.student.survey.StudentSurveyResponse;
import edu.ku.cete.domain.student.survey.StudentSurveyResponseExample;
import edu.ku.cete.domain.student.survey.StudentSurveyResponseLabel;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface StudentSurveyResponseDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int countByExample(StudentSurveyResponseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int deleteByExample(StudentSurveyResponseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int insert(StudentSurveyResponse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int insertSelective(StudentSurveyResponse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    List<StudentSurveyResponse> selectByExample(StudentSurveyResponseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    StudentSurveyResponse selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int updateByExampleSelective(@Param("record") StudentSurveyResponse record, @Param("example") StudentSurveyResponseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int updateByExample(@Param("record") StudentSurveyResponse record, @Param("example") StudentSurveyResponseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int updateByPrimaryKeySelective(StudentSurveyResponse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    int updateByPrimaryKey(StudentSurveyResponse record);
    
    /**
     * @param studentId
     * @return
     */
    Survey findByStudentId(@Param("studentId") Long studentId);
    
    /**
     * @param survey
     * @return
     */
    int insertSurvey(Survey survey);
    
    int updateSurveyStatus(Survey survey);

	Survey findBySurveyId(Long surveyId);
    
	String findResponseValueByResponseId(Long studentSurveyResponseId);
	
	List<StudentSurveyResponse> findDependentResponses(@Param("surveyId") Long surveyId,
    		@Param("responseId") Long responseId);
	
	List<StudentSurveyResponseLabel> findDependentResponseLabelsNotInSamePage(
    		@Param("surveyId") Long surveyId);
	
	List<StudentSurveyResponse> findResponsesBySurveyId(@Param("surveyId") Long surveyId);

	List<Survey> findSurveyByOrgId(@Param("organizationId")Long organizationId);
	
}