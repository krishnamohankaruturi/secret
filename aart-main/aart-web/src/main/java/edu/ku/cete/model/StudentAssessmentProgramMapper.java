package edu.ku.cete.model;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.StudentAssessmentProgram;

public interface StudentAssessmentProgramMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentassessmentprogram
     *
     * @mbggenerated Sat Jul 11 13:39:06 IST 2015
     */
    int insert(StudentAssessmentProgram record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentassessmentprogram
     *
     * @mbggenerated Sat Jul 11 13:39:06 IST 2015
     */
    int insertSelective(StudentAssessmentProgram record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentassessmentprogram
     *
     * @mbggenerated Sat Jul 11 13:39:06 IST 2015
     */
    StudentAssessmentProgram selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentassessmentprogram
     *
     * @mbggenerated Sat Jul 11 13:39:06 IST 2015
     */
    int updateByPrimaryKeySelective(StudentAssessmentProgram record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentassessmentprogram
     *
     * @mbggenerated Sat Jul 11 13:39:06 IST 2015
     */
    int updateByPrimaryKey(StudentAssessmentProgram record);
    
    List<StudentAssessmentProgram> getByStudentId(Long studentId);

	void insertMultipleAssessmentProgram(@Param("assessmentProgramIds")Long[] assessmentProgramIds,@Param("studentId") Long id);

	void deleteAssessmentPrograms(@Param("studentId") Long id);

	boolean isStudentInAssessmentProgram(@Param("studentId") long studentId, @Param("apId") long assessmentProgramId);
	
	boolean isStudentOnlyInThisAssessmentProgram(@Param("studentId") long studentId, @Param("assessmentProgramAbbrName") String assessmentProgramAbbrName);
    
	List<StudentAssessmentProgram> updateAndReturnByStudentId(@Param("studentId") Long studentId);
	
	void deactivateByStudentIdAndAssessmentProgramId(@Param("studentId") Long studentId, @Param("assessmentProgramId") Long assessmentProgramId);
	
	void deactivateStudentIdAndAssessmentProgramIds(@Param("studentId") Long studentId, @Param("assessmentProgramIds") List<Long> assessmentProgramIds);

	void deactivateByorgIdAndassessmentId(@Param("organizationId") Long organizationId,@Param("schoolYear")  Long schoolYear,
			@Param("assessmentProgramId") Long assessmentProgramId,@Param("modifiedUserId") Long modifiedUserId);

	List<Long> getStudentAssessPgmIds(@Param("stateStudentIdentifier") String stateStudentIdentifier, @Param("stateId") Long stateId);
}