package edu.ku.cete.model;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.DailyAccessCode;

public interface DailyAccessCodeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dailyaccesscode
     *
     * @mbggenerated Tue Jan 05 22:17:27 CST 2016
     */
    int insert(DailyAccessCode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dailyaccesscode
     *
     * @mbggenerated Tue Jan 05 22:17:27 CST 2016
     */
    int insertSelective(DailyAccessCode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dailyaccesscode
     *
     * @mbggenerated Tue Jan 05 22:17:27 CST 2016
     */
    DailyAccessCode selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dailyaccesscode
     *
     * @mbggenerated Tue Jan 05 22:17:27 CST 2016
     */
    int updateByPrimaryKeySelective(DailyAccessCode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dailyaccesscode
     *
     * @mbggenerated Tue Jan 05 22:17:27 CST 2016
     */
    int updateByPrimaryKey(DailyAccessCode record);
    
    List<DailyAccessCode> findExistingAccessCodes(DailyAccessCode criteria);
    
    List<DailyAccessCode> getDailyAccessCodes(@Param("assessmentProgramId") Long assessmentProgramId, @Param("testDate") String testDate,
    		@Param("sortByColumn") String sortByColumn, @Param("sortType") String sortType, @Param("dacCriteriaMap") Map<String,String> dacCriteriaMap, 
    		@Param("offset") Integer offset, @Param("limit") Integer limitCount, @Param("stateId") Long stateId,@Param("includeGradeBand") Boolean includeGradeBand,
    		@Param("userId")Long userId,@Param("currentSchoolyear")Long currentSchoolyear);
    
    int getCountDailyAccessCode(@Param("assessmentProgramId") Long assessmentProgramId, @Param("testDate") String testDate, @Param("stateId") Long stateId,
    		@Param("includeGradeBand") Boolean includeGradeBand,@Param("userId")Long userId,@Param("currentSchoolyear")Long currentSchoolyear);
    
    
    List<DailyAccessCode> findByApDateSubjectAndGrade(@Param("assessmentProgramId") Long assessmentProgramId, @Param("effectiveDate") Date effectiveDate, 
    		@Param("cgList") List<Map<Long, Long>> cgList, @Param("stateId") Long stateId, @Param("isPLTW") Boolean isPLTW);
    
    List<DailyAccessCode> findByApAndDate(@Param("assessmentProgramId") Long assessmentProgramId, @Param("effectiveDate") Date effectiveDate);
}