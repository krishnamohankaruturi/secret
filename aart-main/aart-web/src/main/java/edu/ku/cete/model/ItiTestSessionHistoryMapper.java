package edu.ku.cete.model;

import edu.ku.cete.domain.ItiStudentReport;
import edu.ku.cete.domain.ItiTestSessionHistory;
import edu.ku.cete.domain.ItiTestSessionHistoryExample;
import edu.ku.cete.domain.ItiTestSessionResourceInfo;
import edu.ku.cete.domain.StudentItemInfoForMC;
import edu.ku.cete.domain.StudentTestResourceInfo;
import edu.ku.cete.domain.report.roster.ItiRosterReportEE;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Param;

public interface ItiTestSessionHistoryMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int countByExample(ItiTestSessionHistoryExample example);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int deleteByExample(ItiTestSessionHistoryExample example);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int deleteByPrimaryKey(Long id);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int insert(ItiTestSessionHistory record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int insertSelective(ItiTestSessionHistory record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	List<ItiTestSessionHistory> selectByExample(
			ItiTestSessionHistoryExample example);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	ItiTestSessionHistory selectByPrimaryKey(Long id);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int updateByExampleSelective(@Param("record") ItiTestSessionHistory record,
			@Param("example") ItiTestSessionHistoryExample example);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int updateByExample(@Param("record") ItiTestSessionHistory record,
			@Param("example") ItiTestSessionHistoryExample example);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int updateByPrimaryKeySelective(ItiTestSessionHistory record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ititestsessionhistory
	 * @mbggenerated  Tue Oct 14 02:01:12 CDT 2014
	 */
	int updateByPrimaryKey(ItiTestSessionHistory record);
	List<ItiTestSessionHistory> selectByStudentIdRosterIdWithStatus(@Param("studentId") Long studentId, @Param("rosterId") Long rosterId);
	List<ItiTestSessionResourceInfo> selectResourceByTestSessionId(@Param("testSessionId") Long testSessionId);
	List<StudentItemInfoForMC> selectStudentItemInfoForMC(@Param("fromDate") Date fromDate, @Param("toDate") Date toDate);
	ItiTestSessionHistory selectHistoryTagsByItiSessionHistoryId(@Param("itiTestSessionHistoryId") Long itiTestSessionHistoryId);
	List<ItiTestSessionHistory> selectTestidSensitivityTag(@Param("testIds") List<Long> testIds);
	List<Long> selectTestidOnPNP(@Param("testIds") List<Long> testIds, @Param("pnpAttribute") String pnpAttribute);
	List<ItiStudentReport> selectByStudentIdAndUnUsedStatus(@Param("studentId") Long studentId);
	List<ItiStudentReport> selectByStudentIdAndUnUsedStatusAndSubject(@Param("studentId") Long studentId, @Param("subjectId") Long subjectId, 
			@Param("currentSchoolYear") int currentSchoolYear, @Param("testCycleID") Long testCycleID);
	
	
	/**
	 * @author bmohanty_sta
	 * Biyatpragyan Mohanty : bmohanty_sta@ku.edu : US15500 : DLM Class Roster Report - online report
	 * Get needed data to build the Roster Report for DLM organizations.
	 * @param userSelectedOrganizationId
	 * @param rosterId
	 * @param studentIds
	 * @return
	 */
	List<ItiRosterReportEE> selectITIDLMEEDetailsByRosterIdAndStudents(@Param("userSelectedOrganizationId") Long userSelectedOrganizationId, 
			@Param("rosterId") Long rosterId, @Param("studentIds") List<Long> studentIds
			, @Param("contentAreaId") Long contentAreaId, @Param("currentSchoolYear") int currentSchoolYear);
	
	String selectITITestSessionForALevelOtherThanComplete(@Param("studentId") Long studentId, @Param("rosterId") Long rosterId,
			@Param("level") String level, @Param("essentialElementId") Long essentialElementId, @Param("sourceCode") String sourceCode);
	
	void unEnrollITIPlansByStudentAndTestsessionId(@Param("unEnrollStatusId") Long unEnrollStatusId, @Param("modifiedUserId") Long modifiedUserId, 
			@Param("studentId") Long studentId, @Param("testsessionId") Long testsessionId);
	void unEnrollPendingITIsByEnrollmentId(@Param("unEnrollStatusId") Long unEnrollStatusId, @Param("enrollmentId")Long enrollmentId, @Param("modifiedUserId")Long modifiedUserId);
	void unEnrollPendingITIsByEnrlAndRosterId(@Param("rosterUnEnrollStatusId") Long rosterUnEnrollStatusId, @Param("enrollmentId")Long enrollmentId,
			@Param("rosterId") Long rosterId,@Param("modifiedUserId") Long modifiedUserId);
	
	void transferITIsToNewRosterByEnrlAndOldRosterId(@Param("itiTestSessionHistoryId") Long itiTestSessionHistoryId, @Param("enrollmentId") Long enrollmentId, @Param("newRosterId") Long newRosterId, @Param("modifiedUserId") Long modifiedUserId);
	List<ItiTestSessionHistory> getUnenrolledITIsByEnrlAndRosterId(@Param("enrollmentId")Long enrollmentId, @Param("rosterId") Long rosterId);
	List<ItiTestSessionHistory> getPendingITIsByEnrlAndRosterId(@Param("enrollmentId")Long enrollmentId, @Param("rosterId") Long rosterId);
	List<ItiTestSessionHistory> getITIPlansExceptPendingUsingEnrlAndRosterId(@Param("enrollmentId")Long enrollmentId, @Param("rosterId") Long rosterId);

	List<Long> findInactivatedITIPlansByStudentAndTestSession(@Param("inactivationType") String inactivationType, @Param("studentId") Long studentId, @Param("testSessionIds") List<Long> testSessionIds);
	List<Long> findInactivatedPendingITIPlansByStudent(@Param("inactivationType") String inactivationType, @Param("studentId") Long studentId, @Param("gradeCourseId") Long gradeCourseId);
	List<Long> findITIPlansByStudentAndTestSessionForDeactivation(@Param("studentId") Long studentId, @Param("testSessionIds") List<Long> testSessionIds);
	List<Long> findPendingITIPlansByStudentForDeactivation(@Param("studentId") Long studentId, @Param("gradeCourseId") Long gradeCourseId);
	void deactivateByPrimaryKeyWithStatus(@Param("itiPlanId") Long itiPlanId, @Param("newStatusPrefix") String newStatusPrefix, @Param("modifiedUserId") Long modifiedUserId);
    void reactivateByPrimaryKeyForGradeChange(@Param("itiPlanId") Long itiPlanId, @Param("modifiedUserId") Long modifiedUserId);
	ItiTestSessionHistory selectITISessionHistoryByStudentIdAndTestSessionId(@Param("studentId") Long studentId,  @Param("testSessionId")Long testSessionId);
    
	List<ItiTestSessionHistory> getAllStudentITIPlansForEEUnderTeachers(@Param("criteria") Long criteria, @Param("gradeCourseAbbrName") String gradeCourseAbbrName,
			@Param("contentAreaId") Long contentAreaId, @Param("schoolId") Long schoolId, @Param("studentId") Long studentId, @Param("teacherIds") List<Long> teacherIds,
			@Param("schoolYear") Long schoolYear, @Param("eeId") Long eeId, @Param("testCycleID") Long testCycleID);
	
	ItiTestSessionHistory getMostRecentlyCompletedNonWringITITestSession(@Param("studentId") Long studentId, @Param("contentAreaId") Long contentAreaId,
			@Param("gradeCourseAbbrName") String gradeCourseAbbrName, @Param("currentSchoolYear") Long currentSchoolYear);
	
	List<ItiTestSessionHistory> getForIAP(
		@Param("studentId") Long studentId,
		@Param("rosterId") Long rosterId,
		@Param("enrollmentsRostersId") Long enrollmentsRostersId,
		@Param("operationalTestWindowId") Long operationalTestWindowId
	);
	
	List<ItiTestSessionHistory> getForIAPByContentFrameworkDetailIdAndLinkageLevel(@Param("studentId") Long studentId,
		@Param("rosterId") Long rosterId,
		@Param("enrollmentsRostersId") Long enrollmentsRostersId,
		@Param("operationalTestWindowId") Long operationalTestWindowId,
		@Param("contentFrameworkDetailId") Long contentFrameworkDetailId,
		@Param("linkageLevel") String linkageLevel
	);
	
	int deactivateStudentsTestsByITIId(@Param("itiId") Long itiId, @Param("userId") Long userId);

	List<ItiTestSessionResourceInfo> selectResourceByTestSessionHistoryId(@Param("itiId") Long itiId);

	List<StudentTestResourceInfo> getBrailleResourceByTestSessionHistoryId(@Param("itiId") Long itiId);
}