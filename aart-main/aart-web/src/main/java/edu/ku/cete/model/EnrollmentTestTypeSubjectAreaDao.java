package edu.ku.cete.model;

import edu.ku.cete.domain.EnrollmentTestTypeSubjectArea;
import edu.ku.cete.domain.EnrollmentTestTypeSubjectAreaExample;
import edu.ku.cete.domain.enrollment.SubjectArea;
import edu.ku.cete.domain.TestType;

import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface EnrollmentTestTypeSubjectAreaDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int countByExample(EnrollmentTestTypeSubjectAreaExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int deleteByExample(EnrollmentTestTypeSubjectAreaExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int insert(EnrollmentTestTypeSubjectArea record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int insertSelective(EnrollmentTestTypeSubjectArea record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    List<EnrollmentTestTypeSubjectArea> selectByExample(EnrollmentTestTypeSubjectAreaExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    EnrollmentTestTypeSubjectArea selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int updateByExampleSelective(@Param("record") EnrollmentTestTypeSubjectArea record, @Param("example") EnrollmentTestTypeSubjectAreaExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int updateByExample(@Param("record") EnrollmentTestTypeSubjectArea record, @Param("example") EnrollmentTestTypeSubjectAreaExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int updateByPrimaryKeySelective(EnrollmentTestTypeSubjectArea record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enrollmenttesttypesubjectarea
     *
     * @mbggenerated Fri Sep 27 17:54:18 CDT 2013
     */
    int updateByPrimaryKey(EnrollmentTestTypeSubjectArea record);
    
    /**
	 * @return
	 */
	List<TestType> selectAllTestTypes();
	
	/**
	 * @return
	 */
	List<SubjectArea> selectAllSubjectAreas();

	List<TestType> selectValidTestTypes(@Param("subject") String subject);
	
	List<TestType> selectTestTypesBySubjectCode(@Param("subjectCode") String subjectCode);

	List<TestType> getTestTypeBySubjectAssesment(@Param("SubjectCode") String SubjectCode,@Param("assessmentProgramId") Long assessmentProgramId);
	
	
	List<EnrollmentTestTypeSubjectArea> selectByEnrollmentId(@Param("enrollmentId") Long enrollmentId);
	
	int removeTestsForAssessmentProgramsByEnrollmentId(@Param("enrollmentId") Long enrollmentId, @Param("assessmentProgramIds") List<Long> assessmentProgramIds,
			@Param("modifiedUser") Long modifiedUser);
}