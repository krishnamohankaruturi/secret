package edu.ku.cete.report.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class KSDEXMLAuditExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public KSDEXMLAuditExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andXmlIsNull() {
            addCriterion("xml is null");
            return (Criteria) this;
        }

        public Criteria andXmlIsNotNull() {
            addCriterion("xml is not null");
            return (Criteria) this;
        }

        public Criteria andXmlEqualTo(String value) {
            addCriterion("xml =", value, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlNotEqualTo(String value) {
            addCriterion("xml <>", value, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlGreaterThan(String value) {
            addCriterion("xml >", value, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlGreaterThanOrEqualTo(String value) {
            addCriterion("xml >=", value, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlLessThan(String value) {
            addCriterion("xml <", value, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlLessThanOrEqualTo(String value) {
            addCriterion("xml <=", value, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlLike(String value) {
            addCriterion("xml like", value, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlNotLike(String value) {
            addCriterion("xml not like", value, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlIn(List<String> values) {
            addCriterion("xml in", values, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlNotIn(List<String> values) {
            addCriterion("xml not in", values, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlBetween(String value1, String value2) {
            addCriterion("xml between", value1, value2, "xml");
            return (Criteria) this;
        }

        public Criteria andXmlNotBetween(String value1, String value2) {
            addCriterion("xml not between", value1, value2, "xml");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("createdate is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("createdate is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterion("createdate =", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterion("createdate <>", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterion("createdate >", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("createdate >=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterion("createdate <", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterion("createdate <=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<Date> values) {
            addCriterion("createdate in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<Date> values) {
            addCriterion("createdate not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterion("createdate between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterion("createdate not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateIsNull() {
            addCriterion("processeddate is null");
            return (Criteria) this;
        }

        public Criteria andProcessedDateIsNotNull() {
            addCriterion("processeddate is not null");
            return (Criteria) this;
        }

        public Criteria andProcessedDateEqualTo(Date value) {
            addCriterion("processeddate =", value, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateNotEqualTo(Date value) {
            addCriterion("processeddate <>", value, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateGreaterThan(Date value) {
            addCriterion("processeddate >", value, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("processeddate >=", value, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateLessThan(Date value) {
            addCriterion("processeddate <", value, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateLessThanOrEqualTo(Date value) {
            addCriterion("processeddate <=", value, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateIn(List<Date> values) {
            addCriterion("processeddate in", values, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateNotIn(List<Date> values) {
            addCriterion("processeddate not in", values, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateBetween(Date value1, Date value2) {
            addCriterion("processeddate between", value1, value2, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedDateNotBetween(Date value1, Date value2) {
            addCriterion("processeddate not between", value1, value2, "processedDate");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeIsNull() {
            addCriterion("processedcode is null");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeIsNotNull() {
            addCriterion("processedcode is not null");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeEqualTo(String value) {
            addCriterion("processedcode =", value, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeNotEqualTo(String value) {
            addCriterion("processedcode <>", value, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeGreaterThan(String value) {
            addCriterion("processedcode >", value, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeGreaterThanOrEqualTo(String value) {
            addCriterion("processedcode >=", value, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeLessThan(String value) {
            addCriterion("processedcode <", value, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeLessThanOrEqualTo(String value) {
            addCriterion("processedcode <=", value, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeLike(String value) {
            addCriterion("processedcode like", value, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeNotLike(String value) {
            addCriterion("processedcode not like", value, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeIn(List<String> values) {
            addCriterion("processedcode in", values, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeNotIn(List<String> values) {
            addCriterion("processedcode not in", values, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeBetween(String value1, String value2) {
            addCriterion("processedcode between", value1, value2, "processedCode");
            return (Criteria) this;
        }

        public Criteria andProcessedCodeNotBetween(String value1, String value2) {
            addCriterion("processedcode not between", value1, value2, "processedCode");
            return (Criteria) this;
        }

        public Criteria andFromDateIsNull() {
            addCriterion("fromdate is null");
            return (Criteria) this;
        }

        public Criteria andFromDateIsNotNull() {
            addCriterion("fromdate is not null");
            return (Criteria) this;
        }

        public Criteria andFromDateEqualTo(Date value) {
            addCriterion("fromdate =", value, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateNotEqualTo(Date value) {
            addCriterion("fromdate <>", value, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateGreaterThan(Date value) {
            addCriterion("fromdate >", value, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateGreaterThanOrEqualTo(Date value) {
            addCriterion("fromdate >=", value, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateLessThan(Date value) {
            addCriterion("fromdate <", value, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateLessThanOrEqualTo(Date value) {
            addCriterion("fromdate <=", value, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateIn(List<Date> values) {
            addCriterion("fromdate in", values, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateNotIn(List<Date> values) {
            addCriterion("fromdate not in", values, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateBetween(Date value1, Date value2) {
            addCriterion("fromdate between", value1, value2, "fromDate");
            return (Criteria) this;
        }

        public Criteria andFromDateNotBetween(Date value1, Date value2) {
            addCriterion("fromdate not between", value1, value2, "fromDate");
            return (Criteria) this;
        }

        public Criteria andToDateIsNull() {
            addCriterion("todate is null");
            return (Criteria) this;
        }

        public Criteria andToDateIsNotNull() {
            addCriterion("todate is not null");
            return (Criteria) this;
        }

        public Criteria andToDateEqualTo(Date value) {
            addCriterion("todate =", value, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateNotEqualTo(Date value) {
            addCriterion("todate <>", value, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateGreaterThan(Date value) {
            addCriterion("todate >", value, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateGreaterThanOrEqualTo(Date value) {
            addCriterion("todate >=", value, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateLessThan(Date value) {
            addCriterion("todate <", value, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateLessThanOrEqualTo(Date value) {
            addCriterion("todate <=", value, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateIn(List<Date> values) {
            addCriterion("todate in", values, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateNotIn(List<Date> values) {
            addCriterion("todate not in", values, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateBetween(Date value1, Date value2) {
            addCriterion("todate between", value1, value2, "toDate");
            return (Criteria) this;
        }

        public Criteria andToDateNotBetween(Date value1, Date value2) {
            addCriterion("todate not between", value1, value2, "toDate");
            return (Criteria) this;
        }

        public Criteria andErrorsIsNull() {
            addCriterion("errors is null");
            return (Criteria) this;
        }

        public Criteria andErrorsIsNotNull() {
            addCriterion("errors is not null");
            return (Criteria) this;
        }

        public Criteria andErrorsEqualTo(String value) {
            addCriterion("errors =", value, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsNotEqualTo(String value) {
            addCriterion("errors <>", value, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsGreaterThan(String value) {
            addCriterion("errors >", value, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsGreaterThanOrEqualTo(String value) {
            addCriterion("errors >=", value, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsLessThan(String value) {
            addCriterion("errors <", value, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsLessThanOrEqualTo(String value) {
            addCriterion("errors <=", value, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsLike(String value) {
            addCriterion("errors like", value, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsNotLike(String value) {
            addCriterion("errors not like", value, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsIn(List<String> values) {
            addCriterion("errors in", values, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsNotIn(List<String> values) {
            addCriterion("errors not in", values, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsBetween(String value1, String value2) {
            addCriterion("errors between", value1, value2, "errors");
            return (Criteria) this;
        }

        public Criteria andErrorsNotBetween(String value1, String value2) {
            addCriterion("errors not between", value1, value2, "errors");
            return (Criteria) this;
        }

        public Criteria andSuccessCountIsNull() {
            addCriterion("successcount is null");
            return (Criteria) this;
        }

        public Criteria andSuccessCountIsNotNull() {
            addCriterion("successcount is not null");
            return (Criteria) this;
        }

        public Criteria andSuccessCountEqualTo(Integer value) {
            addCriterion("successcount =", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountNotEqualTo(Integer value) {
            addCriterion("successcount <>", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountGreaterThan(Integer value) {
            addCriterion("successcount >", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("successcount >=", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountLessThan(Integer value) {
            addCriterion("successcount <", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountLessThanOrEqualTo(Integer value) {
            addCriterion("successcount <=", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountIn(List<Integer> values) {
            addCriterion("successcount in", values, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountNotIn(List<Integer> values) {
            addCriterion("successcount not in", values, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountBetween(Integer value1, Integer value2) {
            addCriterion("successcount between", value1, value2, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountNotBetween(Integer value1, Integer value2) {
            addCriterion("successcount not between", value1, value2, "successCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountIsNull() {
            addCriterion("failedcount is null");
            return (Criteria) this;
        }

        public Criteria andFailedCountIsNotNull() {
            addCriterion("failedcount is not null");
            return (Criteria) this;
        }

        public Criteria andFailedCountEqualTo(Integer value) {
            addCriterion("failedcount =", value, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountNotEqualTo(Integer value) {
            addCriterion("failedcount <>", value, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountGreaterThan(Integer value) {
            addCriterion("failedcount >", value, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("failedcount >=", value, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountLessThan(Integer value) {
            addCriterion("failedcount <", value, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountLessThanOrEqualTo(Integer value) {
            addCriterion("failedcount <=", value, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountIn(List<Integer> values) {
            addCriterion("failedcount in", values, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountNotIn(List<Integer> values) {
            addCriterion("failedcount not in", values, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountBetween(Integer value1, Integer value2) {
            addCriterion("failedcount between", value1, value2, "failedCount");
            return (Criteria) this;
        }

        public Criteria andFailedCountNotBetween(Integer value1, Integer value2) {
            addCriterion("failedcount not between", value1, value2, "failedCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated do_not_delete_during_merge Mon Dec 07 11:30:30 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ksdexmlaudit
     *
     * @mbggenerated Mon Dec 07 11:30:30 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}