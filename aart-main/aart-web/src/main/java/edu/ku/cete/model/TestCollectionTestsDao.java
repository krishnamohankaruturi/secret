package edu.ku.cete.model;

import edu.ku.cete.domain.common.Category;
import edu.ku.cete.domain.content.TestCollection;
import edu.ku.cete.domain.content.TestCollectionTests;
import edu.ku.cete.domain.content.TestCollectionTestsExample;

import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface TestCollectionTestsDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testcollectionstests
     *
     * @mbggenerated Wed Sep 12 16:14:55 CDT 2012
     */
    int countByExample(TestCollectionTestsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testcollectionstests
     *
     * @mbggenerated Wed Sep 12 16:14:55 CDT 2012
     */
    int deleteByExample(TestCollectionTestsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testcollectionstests
     *
     * @mbggenerated Wed Sep 12 16:14:55 CDT 2012
     */
    int deleteByPrimaryKey(TestCollectionTests key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testcollectionstests
     *
     * @mbggenerated Wed Sep 12 16:14:55 CDT 2012
     */
    int insert(TestCollectionTests record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testcollectionstests
     *
     * @mbggenerated Wed Sep 12 16:14:55 CDT 2012
     */
    int insertSelective(TestCollectionTests record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testcollectionstests
     *
     * @mbggenerated Wed Sep 12 16:14:55 CDT 2012
     */
    List<TestCollectionTests> selectByExample(TestCollectionTestsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testcollectionstests
     *
     * @mbggenerated Wed Sep 12 16:14:55 CDT 2012
     */
    int updateByExampleSelective(@Param("record") TestCollectionTests record, @Param("example") TestCollectionTestsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testcollectionstests
     *
     * @mbggenerated Wed Sep 12 16:14:55 CDT 2012
     */
    int updateByExample(@Param("record") TestCollectionTests record, @Param("example") TestCollectionTestsExample example);

	/**
	 * @param testCollectionIds {@link TestCollectionTestsExample}
	 * @param testStatusId  {@link Long}
	 * @return {@link List}
	 */
	List<Long> getCollectionWithMultipleTests(
			@Param("testCollectionIds")List<Long> testCollectionIds,
			@Param("testStatusId")Long testStatusId);

	TestCollection findByTestId(@Param("id")Long id);


	void softDeleteByTestIdAndTestCollectionId(@Param("testId")Long testId,@Param("testCollectionId") Long testCollectionId);

	void insertInterim(TestCollectionTests tct);
}