package edu.ku.cete.model;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.report.SubscoresDescription;

public interface SubscoresDescriptionMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table subscoresdescription
	 * @mbggenerated  Tue May 17 11:34:57 CDT 2016
	 */
	int insert(SubscoresDescription record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table subscoresdescription
	 * @mbggenerated  Tue May 17 11:34:57 CDT 2016
	 */
	int insertSelective(SubscoresDescription record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table subscoresdescription
	 * @mbggenerated  Tue May 17 11:34:57 CDT 2016
	 */
	SubscoresDescription selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table subscoresdescription
	 * @mbggenerated  Tue May 17 11:34:57 CDT 2016
	 */
	int updateByPrimaryKeySelective(SubscoresDescription record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table subscoresdescription
	 * @mbggenerated  Tue May 17 11:34:57 CDT 2016
	 */
	int updateByPrimaryKey(SubscoresDescription record);

	int deleteAll(@Param("schoolYear") Long schoolYear);
	
	int deleteSubscoresDescriptions(@Param("assessmentProgramId") Long assessmentProgramId, @Param("subjectId") Long subjectId, @Param("schoolYear") Long schoolYear);
	
	int checkForDuplicateSequenceForReport(@Param("schoolYear") Long schoolYear, @Param("assessmentProgramId")Long assessmentProgramId, @Param("subjectId")Long subject
			, @Param("subScoreDefinitionName")String subScoreDefinitionName
			, @Param("report")String report
			, @Param("subScoreDisplaySequence")Integer subScoreDisplaySequence);
	
	int checkForDuplicateDefinitionForReport(@Param("schoolYear") Long schoolYear, @Param("assessmentProgramId")Long assessmentProgramId, @Param("subjectId")Long subject
			, @Param("subScoreDefinitionName")String subScoreDefinitionName
			, @Param("report")String report);
	
	int checkIfSubscoreDefinitionNameExists(@Param("schoolYear") Long schoolYear, @Param("assessmentProgramId")Long assessmentProgramId
			, @Param("subjectId")Long subjectId
			, @Param("subScoreDefinitionName")String subScoreDefinitionName);
    
    
}