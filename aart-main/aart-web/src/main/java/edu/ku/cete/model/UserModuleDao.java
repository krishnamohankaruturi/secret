package edu.ku.cete.model;

import edu.ku.cete.domain.UserModule;
import edu.ku.cete.domain.UserModuleExample;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

public interface UserModuleDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int countByExample(UserModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int deleteByExample(UserModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int insert(UserModule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int insertSelective(UserModule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    List<UserModule> selectByExample(UserModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    UserModule selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int updateByExampleSelective(@Param("record") UserModule record, @Param("example") UserModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int updateByExample(@Param("record") UserModule record, @Param("example") UserModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int updateByPrimaryKeySelective(UserModule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usermodule
     *
     * @mbggenerated Sat Oct 19 18:56:34 CDT 2013
     */
    int updateByPrimaryKey(UserModule record);
    
    UserModule getModuleForUser(@Param("userId") Long userId,@Param("moduleId") Long moduleId);
    
    List<UserModule> getUserModuleByModuleStateStatus(@Param("moduleId") Long moduleId, 
    		@Param("enrollmentStatusId") Long enrollmentStatusId, @Param("stateId") Long stateId);

    List<UserModule> getTranscripts(@Param("userId") Long userId, @Param("organizationId") Long organizationId,
    		@Param("transcriptsCriteriaMap") Map<String,String> transcriptsCriteriaMap,
    		@Param("sortByColumn") String sortByColumn, @Param("sortType") String sortType, @Param("offset") int offset, @Param("limit") int limitCount);
    
	Integer countTranscripts(@Param("userId") Long userId, @Param("organizationId") Long organizationId,
			@Param("transcriptsCriteriaMap") Map<String,String> transcriptsCriteriaMap);
	
	Integer countRequiredNotCompletedModulesByUserState(@Param("userId") Long userId, @Param("organizationId") Long organizationId);
	
	int addOrUpdate(UserModule record);

	/**
     * Manoj Kumar O : Added for US_16244(provide UI TO merge Users)
     */
	void deleteByUserId(@Param("id") Long id);
}