package edu.ku.cete.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserSecurityAgreementExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public UserSecurityAgreementExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andAartuseridIsNull() {
			addCriterion("aartuserid is null");
			return (Criteria) this;
		}

		public Criteria andAartuseridIsNotNull() {
			addCriterion("aartuserid is not null");
			return (Criteria) this;
		}

		public Criteria andAartuseridEqualTo(Long value) {
			addCriterion("aartuserid =", value, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridNotEqualTo(Long value) {
			addCriterion("aartuserid <>", value, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridGreaterThan(Long value) {
			addCriterion("aartuserid >", value, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridGreaterThanOrEqualTo(Long value) {
			addCriterion("aartuserid >=", value, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridLessThan(Long value) {
			addCriterion("aartuserid <", value, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridLessThanOrEqualTo(Long value) {
			addCriterion("aartuserid <=", value, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridIn(List<Long> values) {
			addCriterion("aartuserid in", values, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridNotIn(List<Long> values) {
			addCriterion("aartuserid not in", values, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridBetween(Long value1, Long value2) {
			addCriterion("aartuserid between", value1, value2, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAartuseridNotBetween(Long value1, Long value2) {
			addCriterion("aartuserid not between", value1, value2, "aartuserid");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdIsNull() {
			addCriterion("assessmentprogramid is null");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdIsNotNull() {
			addCriterion("assessmentprogramid is not null");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdEqualTo(Long value) {
			addCriterion("assessmentprogramid =", value, "assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdNotEqualTo(Long value) {
			addCriterion("assessmentprogramid <>", value, "assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdGreaterThan(Long value) {
			addCriterion("assessmentprogramid >", value, "assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdGreaterThanOrEqualTo(Long value) {
			addCriterion("assessmentprogramid >=", value, "assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdLessThan(Long value) {
			addCriterion("assessmentprogramid <", value, "assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdLessThanOrEqualTo(Long value) {
			addCriterion("assessmentprogramid <=", value, "assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdIn(List<Long> values) {
			addCriterion("assessmentprogramid in", values,
					"assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdNotIn(List<Long> values) {
			addCriterion("assessmentprogramid not in", values,
					"assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdBetween(Long value1, Long value2) {
			addCriterion("assessmentprogramid between", value1, value2,
					"assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andAssessmentProgramIdNotBetween(Long value1,
				Long value2) {
			addCriterion("assessmentprogramid not between", value1, value2,
					"assessmentProgramId");
			return (Criteria) this;
		}

		public Criteria andSchoolYearIsNull() {
			addCriterion("schoolyear is null");
			return (Criteria) this;
		}

		public Criteria andSchoolYearIsNotNull() {
			addCriterion("schoolyear is not null");
			return (Criteria) this;
		}

		public Criteria andSchoolYearEqualTo(Long value) {
			addCriterion("schoolyear =", value, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearNotEqualTo(Long value) {
			addCriterion("schoolyear <>", value, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearGreaterThan(Long value) {
			addCriterion("schoolyear >", value, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearGreaterThanOrEqualTo(Long value) {
			addCriterion("schoolyear >=", value, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearLessThan(Long value) {
			addCriterion("schoolyear <", value, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearLessThanOrEqualTo(Long value) {
			addCriterion("schoolyear <=", value, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearIn(List<Long> values) {
			addCriterion("schoolyear in", values, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearNotIn(List<Long> values) {
			addCriterion("schoolyear not in", values, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearBetween(Long value1, Long value2) {
			addCriterion("schoolyear between", value1, value2, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andSchoolYearNotBetween(Long value1, Long value2) {
			addCriterion("schoolyear not between", value1, value2, "schoolYear");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionIsNull() {
			addCriterion("agreementelection is null");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionIsNotNull() {
			addCriterion("agreementelection is not null");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionEqualTo(Boolean value) {
			addCriterion("agreementelection =", value, "agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionNotEqualTo(Boolean value) {
			addCriterion("agreementelection <>", value, "agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionGreaterThan(Boolean value) {
			addCriterion("agreementelection >", value, "agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionGreaterThanOrEqualTo(Boolean value) {
			addCriterion("agreementelection >=", value, "agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionLessThan(Boolean value) {
			addCriterion("agreementelection <", value, "agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionLessThanOrEqualTo(Boolean value) {
			addCriterion("agreementelection <=", value, "agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionIn(List<Boolean> values) {
			addCriterion("agreementelection in", values, "agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionNotIn(List<Boolean> values) {
			addCriterion("agreementelection not in", values,
					"agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionBetween(Boolean value1,
				Boolean value2) {
			addCriterion("agreementelection between", value1, value2,
					"agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementElectionNotBetween(Boolean value1,
				Boolean value2) {
			addCriterion("agreementelection not between", value1, value2,
					"agreementElection");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateIsNull() {
			addCriterion("agreementsigneddate is null");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateIsNotNull() {
			addCriterion("agreementsigneddate is not null");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateEqualTo(Date value) {
			addCriterion("agreementsigneddate =", value, "agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateNotEqualTo(Date value) {
			addCriterion("agreementsigneddate <>", value, "agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateGreaterThan(Date value) {
			addCriterion("agreementsigneddate >", value, "agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateGreaterThanOrEqualTo(Date value) {
			addCriterion("agreementsigneddate >=", value, "agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateLessThan(Date value) {
			addCriterion("agreementsigneddate <", value, "agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateLessThanOrEqualTo(Date value) {
			addCriterion("agreementsigneddate <=", value, "agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateIn(List<Date> values) {
			addCriterion("agreementsigneddate in", values,
					"agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateNotIn(List<Date> values) {
			addCriterion("agreementsigneddate not in", values,
					"agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateBetween(Date value1, Date value2) {
			addCriterion("agreementsigneddate between", value1, value2,
					"agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andAgreementSignedDateNotBetween(Date value1,
				Date value2) {
			addCriterion("agreementsigneddate not between", value1, value2,
					"agreementSignedDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateIsNull() {
			addCriterion("expiredate is null");
			return (Criteria) this;
		}

		public Criteria andExpireDateIsNotNull() {
			addCriterion("expiredate is not null");
			return (Criteria) this;
		}

		public Criteria andExpireDateEqualTo(String value) {
			addCriterion("expiredate =", value, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateNotEqualTo(String value) {
			addCriterion("expiredate <>", value, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateGreaterThan(String value) {
			addCriterion("expiredate >", value, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateGreaterThanOrEqualTo(String value) {
			addCriterion("expiredate >=", value, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateLessThan(String value) {
			addCriterion("expiredate <", value, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateLessThanOrEqualTo(String value) {
			addCriterion("expiredate <=", value, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateLike(String value) {
			addCriterion("expiredate like", value, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateNotLike(String value) {
			addCriterion("expiredate not like", value, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateIn(List<String> values) {
			addCriterion("expiredate in", values, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateNotIn(List<String> values) {
			addCriterion("expiredate not in", values, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateBetween(String value1, String value2) {
			addCriterion("expiredate between", value1, value2, "expireDate");
			return (Criteria) this;
		}

		public Criteria andExpireDateNotBetween(String value1, String value2) {
			addCriterion("expiredate not between", value1, value2, "expireDate");
			return (Criteria) this;
		}

		public Criteria andSignerNameIsNull() {
			addCriterion("signername is null");
			return (Criteria) this;
		}

		public Criteria andSignerNameIsNotNull() {
			addCriterion("signername is not null");
			return (Criteria) this;
		}

		public Criteria andSignerNameEqualTo(String value) {
			addCriterion("signername =", value, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameNotEqualTo(String value) {
			addCriterion("signername <>", value, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameGreaterThan(String value) {
			addCriterion("signername >", value, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameGreaterThanOrEqualTo(String value) {
			addCriterion("signername >=", value, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameLessThan(String value) {
			addCriterion("signername <", value, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameLessThanOrEqualTo(String value) {
			addCriterion("signername <=", value, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameLike(String value) {
			addCriterion("signername like", value, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameNotLike(String value) {
			addCriterion("signername not like", value, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameIn(List<String> values) {
			addCriterion("signername in", values, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameNotIn(List<String> values) {
			addCriterion("signername not in", values, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameBetween(String value1, String value2) {
			addCriterion("signername between", value1, value2, "signerName");
			return (Criteria) this;
		}

		public Criteria andSignerNameNotBetween(String value1, String value2) {
			addCriterion("signername not between", value1, value2, "signerName");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table usersecurityagreement
	 * @mbggenerated  Thu Jan 02 14:36:53 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usersecurityagreement
     *
     * @mbggenerated do_not_delete_during_merge Thu Jan 02 11:28:32 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}