package edu.ku.cete.model;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.TestSpecification;

public interface TestSpecificationMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testspecification
	 * @mbggenerated  Mon Jan 05 18:16:51 CST 2015
	 */
	int insert(TestSpecification record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testspecification
	 * @mbggenerated  Mon Jan 05 18:16:51 CST 2015
	 */
	int insertSelective(TestSpecification record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testspecification
	 * @mbggenerated  Mon Jan 05 18:16:51 CST 2015
	 */
	TestSpecification selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testspecification
	 * @mbggenerated  Mon Jan 05 18:16:51 CST 2015
	 */
	int updateByPrimaryKeySelective(TestSpecification record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table testspecification
	 * @mbggenerated  Mon Jan 05 18:16:51 CST 2015
	 */
	int updateByPrimaryKey(TestSpecification record);

	List<TestSpecification> findByStudentTracker(@Param("studentTrackerId") Long studentTrackerId, @Param("operationalWindowId") Long operationalWindowId);
	
	TestSpecification findByPoolGradBandContentArea(@Param("poolType") String poolType, @Param("gradeOrCourseCode") String gradeOrCourseCode,
			@Param("contentAreaId") Long contentAreaId, @Param("operationalWindowId") Long operationalWindowId);
	TestSpecification findByPoolGradeOrCourseContentArea(@Param("poolType") String poolType, @Param("gradeOrCourseCode") String gradeOrCourseCode,
			@Param("contentAreaId") Long contentAreaId, @Param("operationalWindowId") Long operationalWindowId);
	
	List<String> findByTestSpecAndRanking(@Param("testSpecificationId") Long testSpecificationId, @Param("ranking") Long ranking);
	
	int checkIfYearEndEEisWritingType(@Param("eeCode") String eeCode, @Param("testId") Long testId);

	Boolean isWritingContentAvailableInTestSpecRank(@Param("ranking") Long ranking, @Param("testSpecificationId") Long testSpecificationId);
}