package edu.ku.cete.domain.security;

import java.util.ArrayList;
import java.util.List;

import edu.ku.cete.util.Criterion;

/**
 * Generated class.
 */
public class AuthoritiesExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     */
    private String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     */
    private boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     */
    private List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     */
    public AuthoritiesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @param newOrderByClause {@link String}
     */
    public final void setOrderByClause(final String newOrderByClause) {
        this.orderByClause = newOrderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @return order by clause
     */
    public final String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @param newDistinct boolean
     */
    public final void setDistinct(final boolean newDistinct) {
        this.distinct = newDistinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @return distinct
     */
    public final boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @return List of {@link Criteria}
     */
    public final List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @param criteria {@link Criteria}
     */
    public final void or(final Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @return criteria
     */
    public final Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @return criteria
     */
    public final Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     * @return criteria
     */
    protected final Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     */
    public final void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to
     * the database table public.authorities
     *
     * @mbggenerated Thu Aug 18 17:31:16 MDT 2011
     */
    protected abstract static class GeneratedCriteria {
        /** The criteria. */
        private List<Criterion> criteria;

        /**
         * The constructor.
         */
        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        /**
         * @return boolean
         */
        public final boolean isValid() {
            return criteria.size() > 0;
        }

        /** @return List of {@link Criterion} */
        public final List<Criterion> getAllCriteria() {
            return criteria;
        }

        /**
         * @return List of {@link Criterion}
         */
        public final List<Criterion> getCriteria() {
            return criteria;
        }

        /**
         * @param condition {@link String}
         */
        protected final void addCriterion(final String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        /**
         * @param condition {@link String}
         * @param value {@link Object}
         * @param property {@link String}
         */
        protected final void addCriterion(final String condition, final Object value, final String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        /**
         * @param condition {@link String}
         * @param value1 {@link Object}
         * @param value2 {@link Object}
         * @param property {@link String}
         */
        protected final void addCriterion(final String condition, final Object value1, final Object value2, final String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        /**
         * @return {@link Criteria}
         */
        public final Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        /**
         * @return {@link Criteria}
         */
        public final Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        /**
         * @param value {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdEqualTo(final long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * @param value {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdNotEqualTo(final long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * @param value {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdGreaterThan(final long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * @param value {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdGreaterThanOrEqualTo(final long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * @param value {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdLessThan(final long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * @param value {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdLessThanOrEqualTo(final long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * @param values {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdIn(final List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        /**
         * @param values {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdNotIn(final List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        /**
         * @param value1 {@link Long}
         * @param value2 {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdBetween(final long value1, final long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        /**
         * @param value1 {@link Long}
         * @param value2 {@link Long}
         * @return {@link Criteria}
         */
        public final Criteria andIdNotBetween(final long value1, final long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        /**
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityIsNull() {
            addCriterion("authority is null");
            return (Criteria) this;
        }

        /**
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityIsNotNull() {
            addCriterion("authority is not null");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityEqualTo(final String value) {
            addCriterion("authority =", value, "authority");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityNotEqualTo(final String value) {
            addCriterion("authority <>", value, "authority");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityGreaterThan(final String value) {
            addCriterion("authority >", value, "authority");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityGreaterThanOrEqualTo(final String value) {
            addCriterion("authority >=", value, "authority");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityLessThan(final String value) {
            addCriterion("authority <", value, "authority");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityLessThanOrEqualTo(final String value) {
            addCriterion("authority <=", value, "authority");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityLike(final String value) {
            addCriterion("authority like", value, "authority");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityNotLike(final String value) {
            addCriterion("authority not like", value, "authority");
            return (Criteria) this;
        }

        /**
         * @param values {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityIn(final List<String> values) {
            addCriterion("authority in", values, "authority");
            return (Criteria) this;
        }

        /**
         * @param values {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityNotIn(final List<String> values) {
            addCriterion("authority not in", values, "authority");
            return (Criteria) this;
        }

        /**
         * @param value1 {@link String}
         * @param value2 {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityBetween(final String value1, final String value2) {
            addCriterion("authority between", value1, value2, "authority");
            return (Criteria) this;
        }

        /**
         * @param value1 {@link String}
         * @param value2 {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andAuthorityNotBetween(final String value1, final String value2) {
            addCriterion("authority not between", value1, value2, "authority");
            return (Criteria) this;
        }

        /**
         * @return {@link Criteria}
         */
        public final Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        /**
         * @return {@link Criteria}
         */
        public final Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameEqualTo(final String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameNotEqualTo(final String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameGreaterThan(final String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameGreaterThanOrEqualTo(final String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameLessThan(final String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameLessThanOrEqualTo(final String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameLike(final String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        /**
         * @param value {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameNotLike(final String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        /**
         * @param values {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameIn(final List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        /**
         * @param values {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameNotIn(final List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        /**
         * @param value1 {@link String}
         * @param value2 {@link String}
         * @return {@link Criteria}
         */
        public final Criteria andUsernameBetween(final String value1, final String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        /**
         * @param value1 {@link String}
         * @param value2 {@link String}
         * @return Criteria
         */
        public final Criteria andUsernameNotBetween(final String value1, final String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }
    }
    /**
     * This class was generated by MyBatis Generator. This class corresponds to
     * the database table public.authorities
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 18 17:29:01 MDT 2011
     */
    public static class Criteria extends GeneratedCriteria {

        /**
         * The constructor.
         */
        protected Criteria() {
            super();
        }
    }
}
