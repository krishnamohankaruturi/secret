package edu.ku.cete.model;

import edu.ku.cete.domain.content.TestSectionsTaskVariants;
import edu.ku.cete.domain.content.TestSectionsTaskVariantsExample;
import edu.ku.cete.domain.content.TestSectionsTaskVariantsKey;

import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface TestSectionsTaskVariantsDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int countByExample(TestSectionsTaskVariantsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int deleteByExample(TestSectionsTaskVariantsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int deleteByPrimaryKey(TestSectionsTaskVariantsKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int insert(TestSectionsTaskVariants record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int insertSelective(TestSectionsTaskVariants record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    List<TestSectionsTaskVariants> selectByExample(TestSectionsTaskVariantsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    TestSectionsTaskVariants selectByPrimaryKey(TestSectionsTaskVariantsKey key);

	TestSectionsTaskVariants selectByTestSectionsTaskVariantsId(
			@Param("testSectionsTaskVariantsId") Long testSectionsTaskVariantsId);
    //Returns List of All TestSectionsTaskVariantIds
    List<Long> selectBySectionId(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int updateByExampleSelective(@Param("record") TestSectionsTaskVariants record, @Param("example") TestSectionsTaskVariantsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int updateByExample(@Param("record") TestSectionsTaskVariants record, @Param("example") TestSectionsTaskVariantsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int updateByPrimaryKeySelective(TestSectionsTaskVariants record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.testsectionstaskvariants
     *
     * @mbggenerated Tue Oct 23 12:54:52 CDT 2012
     */
    int updateByPrimaryKey(TestSectionsTaskVariants record);
    
    List<String> getTaskVariantPositionAndSectionByTestId(@Param("testId") Long testId);
    
    /**
     * @param testId
     * @return
     */
    List<String> getTaskVariantAndSectionByTestId(@Param("testId") Long testId, @Param("includeSectionName") boolean includeSectionName);
    
    /**
     * @param testId
     * @return
     */
    List<Long> getTaskVariantsByTestId(@Param("testId") Long testId);

	void deleteByTestSectionId(@Param("id")Long id);

	void insertInterim(TestSectionsTaskVariants newTestSectionsTaskVariants);
    
}