package edu.ku.cete.model.enrollment;

import edu.ku.cete.domain.enrollment.EnrollmentsRostersExample;
import edu.ku.cete.domain.enrollment.EnrollmentsRosters;
import edu.ku.cete.domain.enrollment.StudentRosterKeyDto;

import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface EnrollmentsRostersDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    int countByExample(EnrollmentsRostersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    int deleteByExample(EnrollmentsRostersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    int deleteByPrimaryKey(EnrollmentsRosters key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    int insert(EnrollmentsRosters record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    int insertSelective(EnrollmentsRosters record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    List<EnrollmentsRosters> selectByExample(EnrollmentsRostersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    int updateByExampleSelective(@Param("record") EnrollmentsRosters record, @Param("example") EnrollmentsRostersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.enrollmentsrosters
     *
     * @mbggenerated Wed May 16 23:31:04 CDT 2012
     */
    int updateByExample(@Param("record") EnrollmentsRosters record, @Param("example") EnrollmentsRostersExample example);

	/**
	 * @param enrollmentRosterIds
	 * @return
	 */
	List<StudentRosterKeyDto> selectStudentRosterKeysById(@Param("enrollmentRosterIds")
			List<Long> enrollmentRosterIds);

	EnrollmentsRosters getEnrollmentInfoByRosterIdEnrollmentId(@Param("rosterId") Long rosterId,
			@Param("enrollmentId") Long enrollmentId);
	
	EnrollmentsRosters getInactiveLatestEnrollmentsRosterByEnrollmentIdContentAreaId(@Param("enrollmentId") Long enrollmentId,
			@Param("stateSubjectAreaId") Long stateSubjectAreaId);

	Long getMaxRosterIdByEnrollmentId(@Param("enrollmentId") Long enrollmentId);

	List<Long> removeRostersByEnrollmentId(@Param("enrollmentId") Long enrollmentId,@Param("modifiedUserId") Long modifiedUserId);
	
	int removeEnrollmentsRostersByRosterId(@Param("rosterId") Long rosterId,@Param("modifiedUserId") Long modifiedUserId);   //added for Roster API

	List<Long> getRosterIdsByEnrollmentIdAndContent(@Param("enrollmentId") Long enrollmentId, @Param("completedBands") List<String> completedBands);
	
	List<EnrollmentsRosters> getByExternalId(@Param("externalId") Long externalId);

	List<EnrollmentsRosters> getDeletedByExternalId(@Param("externalId") Long externalId);
	int updateByStudentIdAndRosterStateSubjectAreaCode(
		@Param("studentId") Long studentId,
		@Param("contentAreaNames") List<String> contentAreaAbbrNames,
		@Param("enrollmentsRostersExternalId") Long enrollmentsRostersExternalId,
		@Param("userId") Long userId);
	
	int inactivateById(@Param("id") Long enrollmentsRostersExternalId,
		@Param("userId") Long userId);
	int reactivateById(@Param("id") Long enrollmentsRostersExternalId,
			@Param("userId") Long userId);
	List<EnrollmentsRosters> selectEnrollmentsRostersByAPIInformation(
			@Param("studentId") Long studentId,
			@Param("contentAreaNames") List<String> contentAreaAbbrNames,
			@Param("enrollmentsRostersExternalId") Long enrollmentsRostersExternalId,
			@Param("userId") Long userId);
	
	int selectsByStudentIdAndStateSubjectAreaId(
			@Param("subjectId") Long subjectId,
			@Param("studentId") Long studentId,
			@Param("currentSchoolYear") int currentSchoolYear);
}