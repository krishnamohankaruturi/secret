package edu.ku.cete.model.student;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.ProfileAttribute;
import edu.ku.cete.domain.StudentPNPAttributes;
import edu.ku.cete.domain.student.StudentProfileItemAttributeValue;
import edu.ku.cete.domain.student.StudentProfileItemAttributeValueExample;
import edu.ku.cete.web.StudentProfileItemAttributeDTO;

public interface StudentProfileItemAttributeValueDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int countByExample(StudentProfileItemAttributeValueExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int deleteByExample(StudentProfileItemAttributeValueExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int insert(StudentProfileItemAttributeValue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int insertSelective(StudentProfileItemAttributeValue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    List<StudentProfileItemAttributeValue> selectByExample(StudentProfileItemAttributeValueExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    StudentProfileItemAttributeValue selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int updateByExampleSelective(@Param("record") StudentProfileItemAttributeValue record, @Param("example") StudentProfileItemAttributeValueExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int updateByExample(@Param("record") StudentProfileItemAttributeValue record, @Param("example") StudentProfileItemAttributeValueExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int updateByPrimaryKeySelective(StudentProfileItemAttributeValue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.StudentProfileItemAttributeValue
     *
     * @mbggenerated Wed Jan 16 20:43:08 CST 2013
     */
    int updateByPrimaryKey(StudentProfileItemAttributeValue record);

    /**
     * @param stateStudentIdentifier
     * @return
     */
    List<StudentProfileItemAttributeDTO> selectByStateStudentIdentifier(@Param("studentId") Long studentId);
    
    /**
     * @return
     */
    List<StudentProfileItemAttributeDTO> selectAllAttributesAndContainers();
    
    /**
     * @param studentId
     * @param currentAssessmentProgramId
     * @return
     */
    List<StudentProfileItemAttributeDTO> selectStudentAttributesAndContainers(@Param("studentId") Long studentId, @Param("currentSchoolYear") int currentSchoolYear, @Param("currentAssessmentProgramId") Long currentAssessmentProgramId);
    
    /**
     * @param studentId
     * @param currentAssessmentProgramId 
     * @return
     */
    List<StudentProfileItemAttributeDTO> selectAllAttributesDataAndStudentSelection(@Param("studentId") Long studentId, @Param("currentSchoolYear") int currentSchoolYear,@Param("currentAssessmentProgramId") Long currentAssessmentProgramId);
    
    List<StudentProfileItemAttributeDTO> selectStudentProfileItemAttribute(@Param("studentId") Long studentId, @Param("itemAttributeList") List<String> itemAttributeList);
    
    List<StudentProfileItemAttributeDTO> selectStudentProfileItemContainer(@Param("studentId") Long studentId, @Param("itemAttributeList") List<String> itemAttributeList);
    
    Long countValuesInAttributeAndContainerForStudentIds(@Param("studentIds") List<Long> studentIds,
    		@Param("containerName") String containerName, @Param("attributeName") String attributeName,
    		@Param("value") String value, @Param("condition") String condition);

	List<Long> getStudentIdsWithAttributeValueForStudents(@Param("studentIds") List<Long> studentIds,
    		@Param("containerName") String containerName, @Param("attributeName") String attributeName,
    		@Param("value") String value, @Param("condition") String condition);
	
	/**
	 * Biyatpragyan Mohanty : bmohanty_sta@ku.edu : US15738 : Test Coordination - enhance Test Information PDF functionality
     * Get count of students for large print, paper pencil and spanish prints based on their PNP data and given test session id.
	 * @param testSessionId
	 * @param itemAttributeList
	 * @return
	 */
	List<String> selectStudentPNPValuesByTestSession(@Param("testSessionId") Long testSessionId, @Param("itemAttributeList") List<String> itemAttributeList);
	
	List<ProfileAttribute> getStudentPNPAttributes(@Param("studentId") Long studentId);

	void insertStudentPNPAttributes(@Param("studentPNPAttributes")StudentPNPAttributes studentPNPAttributes);

	int updateStudentPNPAttributes(@Param("studentPNPAttributes")StudentPNPAttributes studentPNPAttributes);

	boolean existsStudentPNPAttributes(@Param("studentPNPAttributes")StudentPNPAttributes studentPNPAttributes);

	String getStudentValueJson(@Param("studentId") Long studentId);
	
	int updateStudentPNPOption(@Param("studentId") Long studentId,
			@Param("containerName") String containerName,
		    @Param("attributeName") String attributeName,
		    @Param("value") String value,
		    @Param("userId") Long userId);

	void removeActivateByDefaultsFromContainersWithoutSupport(@Param("studentId") Long studentId, @Param("userId") Long userId);
	
	List<StudentProfileItemAttributeDTO> selectStudentAttributesAndContainersByAttributeName(@Param("studentId") Long studentId, @Param("currentSchoolYear") int currentSchoolYear,@Param("currentAssessmentProgramId") Long currentAssessmentProgramId,
			@Param("attributeName")String attributeName,
			@Param("viewOption")String viewOption);

}