package edu.ku.cete.model.common;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.common.Category;
import edu.ku.cete.domain.common.CategoryExample;
import edu.ku.cete.web.ReportAccessDTO;

public interface CategoryDao {
	
	/**
	 * @return
	 */
	long lastid();
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int countByExample(CategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int deleteByExample(CategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int insert(Category record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int insertSelective(Category record);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int insertSelectiveByType(@Param("category") Category category,
    		@Param("categoryTypeCode") String categoryTypeCode);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    List<Category> selectByExample(CategoryExample example);
    /**
     * @param example {@link CategoryExample}
     * @return {@link List}
     */
    List<Category> selectByCategoryAndType(CategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    Category selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int updateByExampleSelective(@Param("record") Category record, @Param("example") CategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int updateByExample(@Param("record") Category record, @Param("example") CategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int updateByPrimaryKeySelective(Category record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
    int updateByPrimaryKey(Category record);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.category
     *
     * @mbggenerated Fri May 04 16:44:50 CDT 2012
     */
	int updateByCategoryCode(@Param("categoryCode") String categoryCode,
			@Param("status") Boolean status,@Param("modifiedDate") Date modifiedDate,@Param("modifiedUser") Long modifiedUser);
	
	Boolean getStatusITI(@Param("categoryCode") String categoryCode);
    
    /**
     * @param categoryCode {@link String}
     * @param categoryTypeCode {@link String}
     * @return {@link Long}
     */
    Long getCategoryId(@Param("categoryCode") String categoryCode, @Param("categoryTypeCode") String categoryTypeCode);
    
    /**
     * @author bmohanty_sta
     * Biyatpragyan Mohanty : bmohanty_sta@ku.edu : US15536 : Student Tracker - Simple Version 1 (preliminary)
     * Get all complexity bands i.e. Foundation, Band 1, Band 2 and Band 3
     * @return
     */
    List<String> getAllComplexityBands();
    
    List<Category> getReportNames();

	List<Category> selectTestPurposeForInterim(@Param("isInterim") Boolean isInterim,
			@Param("organizationId") Long organizationId, @Param("assessmentProgramId") Long assessmentProgramId,
			@Param("schoolYear") Long schoolYear);
	
	List<ReportAccessDTO> getReportAccessData(@Param("assessmentPrgId") Long assessmentPrgId,
			@Param("stateId") List<Long> stateId,
			@Param("testSessionRecordCriteriaMap") Map<String, String> testSessionRecordCriteriaMap,
			@Param("sord") String sortType,
			@Param("sidx") String sortByColumn,
			@Param("toRemoveStudentArchiveReport") List<String> toRemoveStudentArchiveReport,
			@Param("reportCode") List<String> reportCode);
	
	Category selectByCategoryName(@Param("categoryName")String purpose);
	
	Long getCategoryIdByName(@Param("interimAllowedPurpose")String interimAllowedPurpose);
	Map<Long, String> getTestSessionStatusMap();
	Map<Long,String> getScoringStatusMap();
	List<Long> getCategoryIdByCode(@Param("categoryTypeCode") String categoryTypeCode, @Param("categoryCodes") List<String> categoryCodes);
	
	List<Category> getCategoriesByCategoryTypeCodeAndCategoryCodes(@Param("categoryTypeCode") String categoryTypeCode, @Param("categoryCodes") List<String> categoryCodes);
	
	List<ReportAccessDTO> getExtractAccessData(@Param("assessmentPrgId") Long assessmentPrgId,
			@Param("stateId") List<Long> stateId,
			@Param("testSessionRecordCriteriaMap") Map<String, String> testSessionRecordCriteriaMap,
			@Param("sord") String sortType,
			@Param("sidx") String sortByColumn);
	
	List<Long> getDlmExtractAccessId(@Param("currentGroupId") Long currentGroupId,
			@Param("currentStateId") Long currentStateId,
			@Param("currentAssessmentPgmId") Long currentAssessmentPgmId);
	
	Long getParentStateIdByChildId(@Param("organizationId")Long organizationId);
	
	String getReportAccessPermissionForReports(@Param("currentGroupId") Long currentGroupId,
			@Param("currentStateId") Long currentStateId,
			@Param("currentAssessmentPgmId") Long currentAssessmentPgmId,
			@Param("categoryCode") String categoryCode);	

}