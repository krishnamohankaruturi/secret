package edu.ku.cete.model;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import edu.ku.cete.domain.report.ReportSubscores;
import edu.ku.cete.report.SubScoreMedianScore;

public interface ReportSubscoresMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reportsubscores
	 * @mbggenerated  Wed Jul 15 13:44:25 CDT 2015
	 */
	int insert(ReportSubscores record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reportsubscores
	 * @mbggenerated  Wed Jul 15 13:44:25 CDT 2015
	 */
	int insertSelective(ReportSubscores record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reportsubscores
	 * @mbggenerated  Wed Jul 15 13:44:25 CDT 2015
	 */
	ReportSubscores selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reportsubscores
	 * @mbggenerated  Wed Jul 15 13:44:25 CDT 2015
	 */
	int updateByPrimaryKeySelective(ReportSubscores record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reportsubscores
	 * @mbggenerated  Wed Jul 15 13:44:25 CDT 2015
	 */
	int updateByPrimaryKey(ReportSubscores record);
	
	int deleteReportSubscores(@Param("assessmentProgramId")Long assessmentProgramId, @Param("contentAreaId")Long contentAreaId, @Param("gradeId")Long gradeId, @Param("schoolYear")Long schoolYear);

	int deleteReportSubscoresByStudentId(@Param("assessmentProgramId")Long assessmentProgramId, @Param("contentAreaId")Long contentAreaId, 
			@Param("gradeId")Long gradeId, @Param("studentId")Long studentId, @Param("schoolYear")Long schoolYear);

	SubScoreMedianScore selectAllStudentsBySchoolAssmntSubjectGradeSubScoreDef(@Param("schoolId") Long schoolId,
			@Param("assessmentProgramId")Long assessmentProgramId,
			@Param("contentAreaId")Long contentAreaId, 
			@Param("gradeId")Long gradeId,
			@Param("schoolYear")Long schoolYear);
	
	SubScoreMedianScore selectAllStudentsByDistrictAssmntSubjectGradeSubScoreDef(@Param("districtId") Long districtId,
			@Param("assessmentProgramId")Long assessmentProgramId,
			@Param("contentAreaId")Long contentAreaId, 
			@Param("gradeId")Long gradeId,
			@Param("schoolYear")Long schoolYear);
	
	SubScoreMedianScore selectAllStudentsByStateAssmntSubjectGradeSubScoreDef(@Param("stateId") Long stateId,
			@Param("assessmentProgramId")Long assessmentProgramId,
			@Param("contentAreaId")Long contentAreaId, 
			@Param("gradeId")Long gradeId,
			@Param("schoolYear")Long schoolYear);
	
	List<ReportSubscores> selectSubscoresDetailsByStudentReportIdAndReportType(@Param("studentId") Long studentId, 
			@Param("reportType") String reportType,
			@Param("contentareaId") Long contentareaId,
			@Param("attendanceSchoolid") Long attendanceSchoolid);
	
	List<ReportSubscores> selectSubscoresMediansByOrganizationIdAndReportType(@Param("assessmentProgramId")Long assessmentProgramId, @Param("contentAreaId") Long contentAreaId, 
			@Param("gradeId")Long gradeId,  @Param("schoolYear")Long schoolYear, @Param("orgId") Long orgId, @Param("reportType") String reportType);

	List<ReportSubscores> getItemCountBySubscoreDefinitionNameByTestId(@Param("testId") Long testId, @Param("schoolYear") Long schoolYear, 
			@Param("assessmentProgramId") Long assessmentProgramId, 
			@Param("subjectId") Long subjectId,
			@Param("gradeId") Long gradeId);

	List<ReportSubscores> selectSubscoresDetailsForOrganization(
			@Param("orgId") Long orgId,
			@Param("assessmentProgramId") Long assessmentProgramId, 
			@Param("contentAreaId") Long contentAreaId,
			@Param("orgGradeIds") List<Long> orgGradeIds, 
			@Param("schoolYear") Long schoolYear,
			@Param("reportType") String reportType);
	
}