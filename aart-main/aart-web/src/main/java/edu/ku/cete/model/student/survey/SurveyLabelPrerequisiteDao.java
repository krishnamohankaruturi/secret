package edu.ku.cete.model.student.survey;

import edu.ku.cete.domain.student.survey.SurveyLabelPrerequisite;
import edu.ku.cete.domain.student.survey.SurveyLabelPrerequisiteExample;
import edu.ku.cete.domain.student.survey.SurveyLabelPrerequisite;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface SurveyLabelPrerequisiteDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int countByExample(SurveyLabelPrerequisiteExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int deleteByExample(SurveyLabelPrerequisiteExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int deleteByPrimaryKey(SurveyLabelPrerequisite key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int insert(SurveyLabelPrerequisite record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int insertSelective(SurveyLabelPrerequisite record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    List<SurveyLabelPrerequisite> selectByExample(Integer globalPageNum);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    SurveyLabelPrerequisite selectByPrimaryKey(SurveyLabelPrerequisite key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int updateByExampleSelective(@Param("record") SurveyLabelPrerequisite record, @Param("example") SurveyLabelPrerequisiteExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int updateByExample(@Param("record") SurveyLabelPrerequisite record, @Param("example") SurveyLabelPrerequisiteExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int updateByPrimaryKeySelective(SurveyLabelPrerequisite record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.survey_label_pre_requisite
     *
     * @mbggenerated Mon Jun 03 12:10:27 CDT 2013
     */
    int updateByPrimaryKey(SurveyLabelPrerequisite record);
    
    /**
     * @param globalPageNum
     * @return
     */
    List<SurveyLabelPrerequisite> selectByGlobalPageNum(@Param("globalPageNum") Integer globalPageNum);
    
    /**
     * @param surveyId
     * @param globalPageNum
     * @return
     */
    List<SurveyLabelPrerequisite> selectBySurveyAndGlobalPageNum(@Param("surveyId") Long surveyId, @Param("globalPageNum") Integer globalPageNum);
    
    /**
     * @param surveyId
     * @param surveyResponseIds
     * @return
     */
    List<Boolean> selectResponseActiveFlagBySurvey(@Param("surveyId") Long surveyId, @Param("surveyResponseIds") List<Long> surveyResponseIds);
    
    /**
     * @return
     */
    List<Long> selectPrerequisiteSurveyLabelsInfoList();
    
    List<SurveyLabelPrerequisite> selectByAndCondition();
    
}