package edu.ku.cete.domain.validation;

import java.util.ArrayList;
import java.util.List;

import edu.ku.cete.util.Criterion;

public class FieldSpecificationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public FieldSpecificationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.field_specification
     *
     * @mbggenerated Thu May 10 16:05:01 CDT 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andRecordTypeIdEqualTo(Long value) {
            addCriterion("fieldSpecRel.recordtypeid =", value, "recordtypeid");
            return (Criteria) this;
        }
        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFieldNameIsNull() {
            addCriterion("fieldname is null");
            return (Criteria) this;
        }

        public Criteria andFieldNameIsNotNull() {
            addCriterion("fieldname is not null");
            return (Criteria) this;
        }

        public Criteria andFieldNameEqualTo(String value) {
            addCriterion("fieldname =", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotEqualTo(String value) {
            addCriterion("fieldname <>", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameGreaterThan(String value) {
            addCriterion("fieldname >", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameGreaterThanOrEqualTo(String value) {
            addCriterion("fieldname >=", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLessThan(String value) {
            addCriterion("fieldname <", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLessThanOrEqualTo(String value) {
            addCriterion("fieldname <=", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLike(String value) {
            addCriterion("fieldname like", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotLike(String value) {
            addCriterion("fieldname not like", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameIn(List<String> values) {
            addCriterion("fieldname in", values, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotIn(List<String> values) {
            addCriterion("fieldname not in", values, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameBetween(String value1, String value2) {
            addCriterion("fieldname between", value1, value2, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotBetween(String value1, String value2) {
            addCriterion("fieldname not between", value1, value2, "fieldName");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesIsNull() {
            addCriterion("allowablevalues is null");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesIsNotNull() {
            addCriterion("allowablevalues is not null");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesEqualTo(Object value) {
            addCriterion("allowablevalues =", value, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesNotEqualTo(Object value) {
            addCriterion("allowablevalues <>", value, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesGreaterThan(Object value) {
            addCriterion("allowablevalues >", value, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesGreaterThanOrEqualTo(Object value) {
            addCriterion("allowablevalues >=", value, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesLessThan(Object value) {
            addCriterion("allowablevalues <", value, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesLessThanOrEqualTo(Object value) {
            addCriterion("allowablevalues <=", value, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesIn(List<Object> values) {
            addCriterion("allowablevalues in", values, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesNotIn(List<Object> values) {
            addCriterion("allowablevalues not in", values, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesBetween(Object value1, Object value2) {
            addCriterion("allowablevalues between", value1, value2, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andAllowableValuesNotBetween(Object value1, Object value2) {
            addCriterion("allowablevalues not between", value1, value2, "allowableValues");
            return (Criteria) this;
        }

        public Criteria andMinimumIsNull() {
            addCriterion("minimum is null");
            return (Criteria) this;
        }

        public Criteria andMinimumIsNotNull() {
            addCriterion("minimum is not null");
            return (Criteria) this;
        }

        public Criteria andMinimumEqualTo(Long value) {
            addCriterion("minimum =", value, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumNotEqualTo(Long value) {
            addCriterion("minimum <>", value, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumGreaterThan(Long value) {
            addCriterion("minimum >", value, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumGreaterThanOrEqualTo(Long value) {
            addCriterion("minimum >=", value, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumLessThan(Long value) {
            addCriterion("minimum <", value, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumLessThanOrEqualTo(Long value) {
            addCriterion("minimum <=", value, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumIn(List<Long> values) {
            addCriterion("minimum in", values, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumNotIn(List<Long> values) {
            addCriterion("minimum not in", values, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumBetween(Long value1, Long value2) {
            addCriterion("minimum between", value1, value2, "minimum");
            return (Criteria) this;
        }

        public Criteria andMinimumNotBetween(Long value1, Long value2) {
            addCriterion("minimum not between", value1, value2, "minimum");
            return (Criteria) this;
        }

        public Criteria andMaximumIsNull() {
            addCriterion("maximum is null");
            return (Criteria) this;
        }

        public Criteria andMaximumIsNotNull() {
            addCriterion("maximum is not null");
            return (Criteria) this;
        }

        public Criteria andMaximumEqualTo(Long value) {
            addCriterion("maximum =", value, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumNotEqualTo(Long value) {
            addCriterion("maximum <>", value, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumGreaterThan(Long value) {
            addCriterion("maximum >", value, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumGreaterThanOrEqualTo(Long value) {
            addCriterion("maximum >=", value, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumLessThan(Long value) {
            addCriterion("maximum <", value, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumLessThanOrEqualTo(Long value) {
            addCriterion("maximum <=", value, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumIn(List<Long> values) {
            addCriterion("maximum in", values, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumNotIn(List<Long> values) {
            addCriterion("maximum not in", values, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumBetween(Long value1, Long value2) {
            addCriterion("maximum between", value1, value2, "maximum");
            return (Criteria) this;
        }

        public Criteria andMaximumNotBetween(Long value1, Long value2) {
            addCriterion("maximum not between", value1, value2, "maximum");
            return (Criteria) this;
        }

        public Criteria andFieldLengthIsNull() {
            addCriterion("fieldlength is null");
            return (Criteria) this;
        }

        public Criteria andFieldLengthIsNotNull() {
            addCriterion("fieldlength is not null");
            return (Criteria) this;
        }

        public Criteria andFieldLengthEqualTo(Integer value) {
            addCriterion("fieldlength =", value, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthNotEqualTo(Integer value) {
            addCriterion("fieldlength <>", value, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthGreaterThan(Integer value) {
            addCriterion("fieldlength >", value, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthGreaterThanOrEqualTo(Integer value) {
            addCriterion("fieldlength >=", value, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthLessThan(Integer value) {
            addCriterion("fieldlength <", value, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthLessThanOrEqualTo(Integer value) {
            addCriterion("fieldlength <=", value, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthIn(List<Integer> values) {
            addCriterion("fieldlength in", values, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthNotIn(List<Integer> values) {
            addCriterion("fieldlength not in", values, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthBetween(Integer value1, Integer value2) {
            addCriterion("fieldlength between", value1, value2, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andFieldLengthNotBetween(Integer value1, Integer value2) {
            addCriterion("fieldlength not between", value1, value2, "fieldLength");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyIsNull() {
            addCriterion("rejectifempty is null");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyIsNotNull() {
            addCriterion("rejectifempty is not null");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyEqualTo(Boolean value) {
            addCriterion("rejectifempty =", value, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyNotEqualTo(Boolean value) {
            addCriterion("rejectifempty <>", value, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyGreaterThan(Boolean value) {
            addCriterion("rejectifempty >", value, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyGreaterThanOrEqualTo(Boolean value) {
            addCriterion("rejectifempty >=", value, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyLessThan(Boolean value) {
            addCriterion("rejectifempty <", value, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyLessThanOrEqualTo(Boolean value) {
            addCriterion("rejectifempty <=", value, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyIn(List<Boolean> values) {
            addCriterion("rejectifempty in", values, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyNotIn(List<Boolean> values) {
            addCriterion("rejectifempty not in", values, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyBetween(Boolean value1, Boolean value2) {
            addCriterion("rejectifempty between", value1, value2, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfEmptyNotBetween(Boolean value1, Boolean value2) {
            addCriterion("rejectifempty not between", value1, value2, "rejectIfEmpty");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidIsNull() {
            addCriterion("rejectifinvalid is null");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidIsNotNull() {
            addCriterion("rejectifinvalid is not null");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidEqualTo(Boolean value) {
            addCriterion("rejectifinvalid =", value, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidNotEqualTo(Boolean value) {
            addCriterion("rejectifinvalid <>", value, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidGreaterThan(Boolean value) {
            addCriterion("rejectifinvalid >", value, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidGreaterThanOrEqualTo(Boolean value) {
            addCriterion("rejectifinvalid >=", value, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidLessThan(Boolean value) {
            addCriterion("rejectifinvalid <", value, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidLessThanOrEqualTo(Boolean value) {
            addCriterion("rejectifinvalid <=", value, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidIn(List<Boolean> values) {
            addCriterion("rejectifinvalid in", values, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidNotIn(List<Boolean> values) {
            addCriterion("rejectifinvalid not in", values, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidBetween(Boolean value1, Boolean value2) {
            addCriterion("rejectifinvalid between", value1, value2, "rejectIfInvalid");
            return (Criteria) this;
        }

        public Criteria andRejectIfInvalidNotBetween(Boolean value1, Boolean value2) {
            addCriterion("rejectifinvalid not between", value1, value2, "rejectIfInvalid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.field_specification
     *
     * @mbggenerated do_not_delete_during_merge Thu May 10 16:05:01 CDT 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}