package edu.ku.cete.domain.student.survey;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import edu.ku.cete.util.Criterion;

public class StudentSurveyResponseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public StudentSurveyResponseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.student_survey_response
     *
     * @mbggenerated Sat Apr 13 11:42:30 CDT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSurveyIdIsNull() {
            addCriterion("surveyId is null");
            return (Criteria) this;
        }

        public Criteria andSurveyIdIsNotNull() {
            addCriterion("surveyId is not null");
            return (Criteria) this;
        }

        public Criteria andSurveyIdEqualTo(Long value) {
            addCriterion("surveyId =", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdNotEqualTo(Long value) {
            addCriterion("surveyId <>", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdGreaterThan(Long value) {
            addCriterion("surveyId >", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdGreaterThanOrEqualTo(Long value) {
            addCriterion("surveyId >=", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdLessThan(Long value) {
            addCriterion("surveyId <", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdLessThanOrEqualTo(Long value) {
            addCriterion("surveyId <=", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdIn(List<Long> values) {
            addCriterion("surveyId in", values, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdNotIn(List<Long> values) {
            addCriterion("surveyId not in", values, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdBetween(Long value1, Long value2) {
            addCriterion("surveyId between", value1, value2, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdNotBetween(Long value1, Long value2) {
            addCriterion("surveyId not between", value1, value2, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidIsNull() {
            addCriterion("surveyResponseId is null");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidIsNotNull() {
            addCriterion("surveyResponseId is not null");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidEqualTo(Long value) {
            addCriterion("surveyResponseId =", value, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidNotEqualTo(Long value) {
            addCriterion("surveyResponseId <>", value, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidGreaterThan(Long value) {
            addCriterion("surveyResponseId >", value, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidGreaterThanOrEqualTo(Long value) {
            addCriterion("surveyResponseId >=", value, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidLessThan(Long value) {
            addCriterion("surveyResponseId <", value, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidLessThanOrEqualTo(Long value) {
            addCriterion("surveyResponseId <=", value, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidIn(List<Long> values) {
            addCriterion("surveyResponseId in", values, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidNotIn(List<Long> values) {
            addCriterion("surveyResponseId not in", values, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidBetween(Long value1, Long value2) {
            addCriterion("surveyResponseId between", value1, value2, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andSurveyResponseidNotBetween(Long value1, Long value2) {
            addCriterion("surveyResponseId not between", value1, value2, "surveyResponseid");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("createdDate is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("createdDate is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateEqualTo(Date value) {
            addCriterion("createdDate =", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotEqualTo(Date value) {
            addCriterion("createdDate <>", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThan(Date value) {
            addCriterion("createdDate >", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("createdDate >=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThan(Date value) {
            addCriterion("createdDate <", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
            addCriterion("createdDate <=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIn(List<Date> values) {
            addCriterion("createdDate in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotIn(List<Date> values) {
            addCriterion("createdDate not in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateBetween(Date value1, Date value2) {
            addCriterion("createdDate between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
            addCriterion("createdDate not between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedUserIsNull() {
            addCriterion("createdUser is null");
            return (Criteria) this;
        }

        public Criteria andCreatedUserIsNotNull() {
            addCriterion("createdUser is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedUserEqualTo(Integer value) {
            addCriterion("createdUser =", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserNotEqualTo(Integer value) {
            addCriterion("createdUser <>", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserGreaterThan(Integer value) {
            addCriterion("createdUser >", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("createdUser >=", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserLessThan(Integer value) {
            addCriterion("createdUser <", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserLessThanOrEqualTo(Integer value) {
            addCriterion("createdUser <=", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserIn(List<Integer> values) {
            addCriterion("createdUser in", values, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserNotIn(List<Integer> values) {
            addCriterion("createdUser not in", values, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserBetween(Integer value1, Integer value2) {
            addCriterion("createdUser between", value1, value2, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserNotBetween(Integer value1, Integer value2) {
            addCriterion("createdUser not between", value1, value2, "createdUser");
            return (Criteria) this;
        }

        public Criteria andActiveFlagIsNull() {
            addCriterion("activeFlag is null");
            return (Criteria) this;
        }

        public Criteria andActiveFlagIsNotNull() {
            addCriterion("activeFlag is not null");
            return (Criteria) this;
        }

        public Criteria andActiveFlagEqualTo(Boolean value) {
            addCriterion("activeFlag =", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagNotEqualTo(Boolean value) {
            addCriterion("activeFlag <>", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagGreaterThan(Boolean value) {
            addCriterion("activeFlag >", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("activeFlag >=", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagLessThan(Boolean value) {
            addCriterion("activeFlag <", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("activeFlag <=", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagIn(List<Boolean> values) {
            addCriterion("activeFlag in", values, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagNotIn(List<Boolean> values) {
            addCriterion("activeFlag not in", values, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("activeFlag between", value1, value2, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("activeFlag not between", value1, value2, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIsNull() {
            addCriterion("modifiedDate is null");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIsNotNull() {
            addCriterion("modifiedDate is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedDateEqualTo(Date value) {
            addCriterion("modifiedDate =", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotEqualTo(Date value) {
            addCriterion("modifiedDate <>", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateGreaterThan(Date value) {
            addCriterion("modifiedDate >", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("modifiedDate >=", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateLessThan(Date value) {
            addCriterion("modifiedDate <", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateLessThanOrEqualTo(Date value) {
            addCriterion("modifiedDate <=", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIn(List<Date> values) {
            addCriterion("modifiedDate in", values, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotIn(List<Date> values) {
            addCriterion("modifiedDate not in", values, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateBetween(Date value1, Date value2) {
            addCriterion("modifiedDate between", value1, value2, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotBetween(Date value1, Date value2) {
            addCriterion("modifiedDate not between", value1, value2, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedUserIsNull() {
            addCriterion("modifiedUser is null");
            return (Criteria) this;
        }

        public Criteria andModifiedUserIsNotNull() {
            addCriterion("modifiedUser is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedUserEqualTo(Integer value) {
            addCriterion("modifiedUser =", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserNotEqualTo(Integer value) {
            addCriterion("modifiedUser <>", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserGreaterThan(Integer value) {
            addCriterion("modifiedUser >", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("modifiedUser >=", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserLessThan(Integer value) {
            addCriterion("modifiedUser <", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserLessThanOrEqualTo(Integer value) {
            addCriterion("modifiedUser <=", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserIn(List<Integer> values) {
            addCriterion("modifiedUser in", values, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserNotIn(List<Integer> values) {
            addCriterion("modifiedUser not in", values, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserBetween(Integer value1, Integer value2) {
            addCriterion("modifiedUser between", value1, value2, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserNotBetween(Integer value1, Integer value2) {
            addCriterion("modifiedUser not between", value1, value2, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andResponseTextIsNull() {
            addCriterion("responseText is null");
            return (Criteria) this;
        }

        public Criteria andResponseTextIsNotNull() {
            addCriterion("responseText is not null");
            return (Criteria) this;
        }

        public Criteria andResponseTextEqualTo(String value) {
            addCriterion("responseText =", value, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextNotEqualTo(String value) {
            addCriterion("responseText <>", value, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextGreaterThan(String value) {
            addCriterion("responseText >", value, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextGreaterThanOrEqualTo(String value) {
            addCriterion("responseText >=", value, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextLessThan(String value) {
            addCriterion("responseText <", value, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextLessThanOrEqualTo(String value) {
            addCriterion("responseText <=", value, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextLike(String value) {
            addCriterion("responseText like", value, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextNotLike(String value) {
            addCriterion("responseText not like", value, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextIn(List<String> values) {
            addCriterion("responseText in", values, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextNotIn(List<String> values) {
            addCriterion("responseText not in", values, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextBetween(String value1, String value2) {
            addCriterion("responseText between", value1, value2, "responseText");
            return (Criteria) this;
        }

        public Criteria andResponseTextNotBetween(String value1, String value2) {
            addCriterion("responseText not between", value1, value2, "responseText");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.student_survey_response
     *
     * @mbggenerated do_not_delete_during_merge Sat Apr 13 11:42:30 CDT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

}