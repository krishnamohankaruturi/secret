package edu.ku.cete.domain.student.survey;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import edu.ku.cete.util.Criterion;

public class SurveyPageStatusExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.survey_page_status
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public SurveyPageStatusExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated Wed Jun 05 07:56:10 CDT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIsCompletedIsNull() {
            addCriterion("iscompleted is null");
            return (Criteria) this;
        }

        public Criteria andIsCompletedIsNotNull() {
            addCriterion("iscompleted is not null");
            return (Criteria) this;
        }

        public Criteria andIsCompletedEqualTo(Boolean value) {
            addCriterion("iscompleted =", value, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedNotEqualTo(Boolean value) {
            addCriterion("iscompleted <>", value, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedGreaterThan(Boolean value) {
            addCriterion("iscompleted >", value, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("iscompleted >=", value, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedLessThan(Boolean value) {
            addCriterion("iscompleted <", value, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedLessThanOrEqualTo(Boolean value) {
            addCriterion("iscompleted <=", value, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedIn(List<Boolean> values) {
            addCriterion("iscompleted in", values, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedNotIn(List<Boolean> values) {
            addCriterion("iscompleted not in", values, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedBetween(Boolean value1, Boolean value2) {
            addCriterion("iscompleted between", value1, value2, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andIsCompletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("iscompleted not between", value1, value2, "isCompleted");
            return (Criteria) this;
        }

        public Criteria andSurveyIdIsNull() {
            addCriterion("surveyid is null");
            return (Criteria) this;
        }

        public Criteria andSurveyIdIsNotNull() {
            addCriterion("surveyid is not null");
            return (Criteria) this;
        }

        public Criteria andSurveyIdEqualTo(Long value) {
            addCriterion("surveyid =", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdNotEqualTo(Long value) {
            addCriterion("surveyid <>", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdGreaterThan(Long value) {
            addCriterion("surveyid >", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdGreaterThanOrEqualTo(Long value) {
            addCriterion("surveyid >=", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdLessThan(Long value) {
            addCriterion("surveyid <", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdLessThanOrEqualTo(Long value) {
            addCriterion("surveyid <=", value, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdIn(List<Long> values) {
            addCriterion("surveyid in", values, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdNotIn(List<Long> values) {
            addCriterion("surveyid not in", values, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdBetween(Long value1, Long value2) {
            addCriterion("surveyid between", value1, value2, "surveyId");
            return (Criteria) this;
        }

        public Criteria andSurveyIdNotBetween(Long value1, Long value2) {
            addCriterion("surveyid not between", value1, value2, "surveyId");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumIsNull() {
            addCriterion("globalpagenum is null");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumIsNotNull() {
            addCriterion("globalpagenum is not null");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumEqualTo(Integer value) {
            addCriterion("globalpagenum =", value, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumNotEqualTo(Integer value) {
            addCriterion("globalpagenum <>", value, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumGreaterThan(Integer value) {
            addCriterion("globalpagenum >", value, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("globalpagenum >=", value, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumLessThan(Integer value) {
            addCriterion("globalpagenum <", value, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumLessThanOrEqualTo(Integer value) {
            addCriterion("globalpagenum <=", value, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumIn(List<Integer> values) {
            addCriterion("globalpagenum in", values, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumNotIn(List<Integer> values) {
            addCriterion("globalpagenum not in", values, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumBetween(Integer value1, Integer value2) {
            addCriterion("globalpagenum between", value1, value2, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andGlobalPageNumNotBetween(Integer value1, Integer value2) {
            addCriterion("globalpagenum not between", value1, value2, "globalPageNum");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("createddate is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("createddate is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateEqualTo(Date value) {
            addCriterion("createddate =", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotEqualTo(Date value) {
            addCriterion("createddate <>", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThan(Date value) {
            addCriterion("createddate >", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("createddate >=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThan(Date value) {
            addCriterion("createddate <", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
            addCriterion("createddate <=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIn(List<Date> values) {
            addCriterion("createddate in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotIn(List<Date> values) {
            addCriterion("createddate not in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateBetween(Date value1, Date value2) {
            addCriterion("createddate between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
            addCriterion("createddate not between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedUserIsNull() {
            addCriterion("createduser is null");
            return (Criteria) this;
        }

        public Criteria andCreatedUserIsNotNull() {
            addCriterion("createduser is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedUserEqualTo(Integer value) {
            addCriterion("createduser =", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserNotEqualTo(Integer value) {
            addCriterion("createduser <>", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserGreaterThan(Integer value) {
            addCriterion("createduser >", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("createduser >=", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserLessThan(Integer value) {
            addCriterion("createduser <", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserLessThanOrEqualTo(Integer value) {
            addCriterion("createduser <=", value, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserIn(List<Integer> values) {
            addCriterion("createduser in", values, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserNotIn(List<Integer> values) {
            addCriterion("createduser not in", values, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserBetween(Integer value1, Integer value2) {
            addCriterion("createduser between", value1, value2, "createdUser");
            return (Criteria) this;
        }

        public Criteria andCreatedUserNotBetween(Integer value1, Integer value2) {
            addCriterion("createduser not between", value1, value2, "createdUser");
            return (Criteria) this;
        }

        public Criteria andActiveFlagIsNull() {
            addCriterion("activeflag is null");
            return (Criteria) this;
        }

        public Criteria andActiveFlagIsNotNull() {
            addCriterion("activeflag is not null");
            return (Criteria) this;
        }

        public Criteria andActiveFlagEqualTo(Boolean value) {
            addCriterion("activeflag =", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagNotEqualTo(Boolean value) {
            addCriterion("activeflag <>", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagGreaterThan(Boolean value) {
            addCriterion("activeflag >", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("activeflag >=", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagLessThan(Boolean value) {
            addCriterion("activeflag <", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("activeflag <=", value, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagIn(List<Boolean> values) {
            addCriterion("activeflag in", values, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagNotIn(List<Boolean> values) {
            addCriterion("activeflag not in", values, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("activeflag between", value1, value2, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andActiveFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("activeflag not between", value1, value2, "activeFlag");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIsNull() {
            addCriterion("modifieddate is null");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIsNotNull() {
            addCriterion("modifieddate is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedDateEqualTo(Date value) {
            addCriterion("modifieddate =", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotEqualTo(Date value) {
            addCriterion("modifieddate <>", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateGreaterThan(Date value) {
            addCriterion("modifieddate >", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("modifieddate >=", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateLessThan(Date value) {
            addCriterion("modifieddate <", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateLessThanOrEqualTo(Date value) {
            addCriterion("modifieddate <=", value, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateIn(List<Date> values) {
            addCriterion("modifieddate in", values, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotIn(List<Date> values) {
            addCriterion("modifieddate not in", values, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateBetween(Date value1, Date value2) {
            addCriterion("modifieddate between", value1, value2, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedDateNotBetween(Date value1, Date value2) {
            addCriterion("modifieddate not between", value1, value2, "modifiedDate");
            return (Criteria) this;
        }

        public Criteria andModifiedUserIsNull() {
            addCriterion("modifieduser is null");
            return (Criteria) this;
        }

        public Criteria andModifiedUserIsNotNull() {
            addCriterion("modifieduser is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedUserEqualTo(Integer value) {
            addCriterion("modifieduser =", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserNotEqualTo(Integer value) {
            addCriterion("modifieduser <>", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserGreaterThan(Integer value) {
            addCriterion("modifieduser >", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("modifieduser >=", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserLessThan(Integer value) {
            addCriterion("modifieduser <", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserLessThanOrEqualTo(Integer value) {
            addCriterion("modifieduser <=", value, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserIn(List<Integer> values) {
            addCriterion("modifieduser in", values, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserNotIn(List<Integer> values) {
            addCriterion("modifieduser not in", values, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserBetween(Integer value1, Integer value2) {
            addCriterion("modifieduser between", value1, value2, "modifiedUser");
            return (Criteria) this;
        }

        public Criteria andModifiedUserNotBetween(Integer value1, Integer value2) {
            addCriterion("modifieduser not between", value1, value2, "modifiedUser");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.surveypagestatus
     *
     * @mbggenerated donotdeleteduring_merge Wed Jun 05 07:56:10 CDT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

}