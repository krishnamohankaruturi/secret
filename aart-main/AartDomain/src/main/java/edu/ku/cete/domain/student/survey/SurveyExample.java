package edu.ku.cete.domain.student.survey;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SurveyExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public SurveyExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andStudentIdIsNull() {
			addCriterion("studentid is null");
			return (Criteria) this;
		}

		public Criteria andStudentIdIsNotNull() {
			addCriterion("studentid is not null");
			return (Criteria) this;
		}

		public Criteria andStudentIdEqualTo(Long value) {
			addCriterion("studentid =", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdNotEqualTo(Long value) {
			addCriterion("studentid <>", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdGreaterThan(Long value) {
			addCriterion("studentid >", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdGreaterThanOrEqualTo(Long value) {
			addCriterion("studentid >=", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdLessThan(Long value) {
			addCriterion("studentid <", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdLessThanOrEqualTo(Long value) {
			addCriterion("studentid <=", value, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdIn(List<Long> values) {
			addCriterion("studentid in", values, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdNotIn(List<Long> values) {
			addCriterion("studentid not in", values, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdBetween(Long value1, Long value2) {
			addCriterion("studentid between", value1, value2, "studentId");
			return (Criteria) this;
		}

		public Criteria andStudentIdNotBetween(Long value1, Long value2) {
			addCriterion("studentid not between", value1, value2, "studentId");
			return (Criteria) this;
		}

		public Criteria andSurveyNameIsNull() {
			addCriterion("surveyname is null");
			return (Criteria) this;
		}

		public Criteria andSurveyNameIsNotNull() {
			addCriterion("surveyname is not null");
			return (Criteria) this;
		}

		public Criteria andSurveyNameEqualTo(String value) {
			addCriterion("surveyname =", value, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameNotEqualTo(String value) {
			addCriterion("surveyname <>", value, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameGreaterThan(String value) {
			addCriterion("surveyname >", value, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameGreaterThanOrEqualTo(String value) {
			addCriterion("surveyname >=", value, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameLessThan(String value) {
			addCriterion("surveyname <", value, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameLessThanOrEqualTo(String value) {
			addCriterion("surveyname <=", value, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameLike(String value) {
			addCriterion("surveyname like", value, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameNotLike(String value) {
			addCriterion("surveyname not like", value, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameIn(List<String> values) {
			addCriterion("surveyname in", values, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameNotIn(List<String> values) {
			addCriterion("surveyname not in", values, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameBetween(String value1, String value2) {
			addCriterion("surveyname between", value1, value2, "surveyName");
			return (Criteria) this;
		}

		public Criteria andSurveyNameNotBetween(String value1, String value2) {
			addCriterion("surveyname not between", value1, value2, "surveyName");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIsNull() {
			addCriterion("createddate is null");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIsNotNull() {
			addCriterion("createddate is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedDateEqualTo(Date value) {
			addCriterion("createddate =", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotEqualTo(Date value) {
			addCriterion("createddate <>", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateGreaterThan(Date value) {
			addCriterion("createddate >", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
			addCriterion("createddate >=", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateLessThan(Date value) {
			addCriterion("createddate <", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
			addCriterion("createddate <=", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIn(List<Date> values) {
			addCriterion("createddate in", values, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotIn(List<Date> values) {
			addCriterion("createddate not in", values, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateBetween(Date value1, Date value2) {
			addCriterion("createddate between", value1, value2, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
			addCriterion("createddate not between", value1, value2,
					"createdDate");
			return (Criteria) this;
		}

		public Criteria andCreateduserIsNull() {
			addCriterion("createduser is null");
			return (Criteria) this;
		}

		public Criteria andCreateduserIsNotNull() {
			addCriterion("createduser is not null");
			return (Criteria) this;
		}

		public Criteria andCreateduserEqualTo(Integer value) {
			addCriterion("createduser =", value, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserNotEqualTo(Integer value) {
			addCriterion("createduser <>", value, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserGreaterThan(Integer value) {
			addCriterion("createduser >", value, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserGreaterThanOrEqualTo(Integer value) {
			addCriterion("createduser >=", value, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserLessThan(Integer value) {
			addCriterion("createduser <", value, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserLessThanOrEqualTo(Integer value) {
			addCriterion("createduser <=", value, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserIn(List<Integer> values) {
			addCriterion("createduser in", values, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserNotIn(List<Integer> values) {
			addCriterion("createduser not in", values, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserBetween(Integer value1, Integer value2) {
			addCriterion("createduser between", value1, value2, "createduser");
			return (Criteria) this;
		}

		public Criteria andCreateduserNotBetween(Integer value1, Integer value2) {
			addCriterion("createduser not between", value1, value2,
					"createduser");
			return (Criteria) this;
		}

		public Criteria andActiveFlagIsNull() {
			addCriterion("activeflag is null");
			return (Criteria) this;
		}

		public Criteria andActiveFlagIsNotNull() {
			addCriterion("activeflag is not null");
			return (Criteria) this;
		}

		public Criteria andActiveFlagEqualTo(Boolean value) {
			addCriterion("activeflag =", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagNotEqualTo(Boolean value) {
			addCriterion("activeflag <>", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagGreaterThan(Boolean value) {
			addCriterion("activeflag >", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagGreaterThanOrEqualTo(Boolean value) {
			addCriterion("activeflag >=", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagLessThan(Boolean value) {
			addCriterion("activeflag <", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagLessThanOrEqualTo(Boolean value) {
			addCriterion("activeflag <=", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagIn(List<Boolean> values) {
			addCriterion("activeflag in", values, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagNotIn(List<Boolean> values) {
			addCriterion("activeflag not in", values, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagBetween(Boolean value1, Boolean value2) {
			addCriterion("activeflag between", value1, value2, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagNotBetween(Boolean value1, Boolean value2) {
			addCriterion("activeflag not between", value1, value2, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andModifiedDateIsNull() {
			addCriterion("modifieddate is null");
			return (Criteria) this;
		}

		public Criteria andModifiedDateIsNotNull() {
			addCriterion("modifieddate is not null");
			return (Criteria) this;
		}

		public Criteria andModifiedDateEqualTo(Date value) {
			addCriterion("modifieddate =", value, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateNotEqualTo(Date value) {
			addCriterion("modifieddate <>", value, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateGreaterThan(Date value) {
			addCriterion("modifieddate >", value, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateGreaterThanOrEqualTo(Date value) {
			addCriterion("modifieddate >=", value, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateLessThan(Date value) {
			addCriterion("modifieddate <", value, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateLessThanOrEqualTo(Date value) {
			addCriterion("modifieddate <=", value, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateIn(List<Date> values) {
			addCriterion("modifieddate in", values, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateNotIn(List<Date> values) {
			addCriterion("modifieddate not in", values, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateBetween(Date value1, Date value2) {
			addCriterion("modifieddate between", value1, value2, "modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifiedDateNotBetween(Date value1, Date value2) {
			addCriterion("modifieddate not between", value1, value2,
					"modifiedDate");
			return (Criteria) this;
		}

		public Criteria andModifieduserIsNull() {
			addCriterion("modifieduser is null");
			return (Criteria) this;
		}

		public Criteria andModifieduserIsNotNull() {
			addCriterion("modifieduser is not null");
			return (Criteria) this;
		}

		public Criteria andModifieduserEqualTo(Integer value) {
			addCriterion("modifieduser =", value, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserNotEqualTo(Integer value) {
			addCriterion("modifieduser <>", value, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserGreaterThan(Integer value) {
			addCriterion("modifieduser >", value, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserGreaterThanOrEqualTo(Integer value) {
			addCriterion("modifieduser >=", value, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserLessThan(Integer value) {
			addCriterion("modifieduser <", value, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserLessThanOrEqualTo(Integer value) {
			addCriterion("modifieduser <=", value, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserIn(List<Integer> values) {
			addCriterion("modifieduser in", values, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserNotIn(List<Integer> values) {
			addCriterion("modifieduser not in", values, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserBetween(Integer value1, Integer value2) {
			addCriterion("modifieduser between", value1, value2, "modifieduser");
			return (Criteria) this;
		}

		public Criteria andModifieduserNotBetween(Integer value1, Integer value2) {
			addCriterion("modifieduser not between", value1, value2,
					"modifieduser");
			return (Criteria) this;
		}

		public Criteria andStatusIdIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIdIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusIdEqualTo(Long value) {
			addCriterion("status =", value, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdNotEqualTo(Long value) {
			addCriterion("status <>", value, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdGreaterThan(Long value) {
			addCriterion("status >", value, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdGreaterThanOrEqualTo(Long value) {
			addCriterion("status >=", value, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdLessThan(Long value) {
			addCriterion("status <", value, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdLessThanOrEqualTo(Long value) {
			addCriterion("status <=", value, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdIn(List<Long> values) {
			addCriterion("status in", values, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdNotIn(List<Long> values) {
			addCriterion("status not in", values, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdBetween(Long value1, Long value2) {
			addCriterion("status between", value1, value2, "statusId");
			return (Criteria) this;
		}

		public Criteria andStatusIdNotBetween(Long value1, Long value2) {
			addCriterion("status not between", value1, value2, "statusId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table survey
	 * @mbggenerated  Sat Jan 25 22:21:48 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table survey
     *
     * @mbggenerated do_not_delete_during_merge Sat Jan 25 22:17:56 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}